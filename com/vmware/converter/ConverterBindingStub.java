/**
 * ConverterBindingStub.java
 *
 * This file was auto-generated from WSDL
 * by the Apache Axis 1.4 Apr 22, 2006 (06:55:48 PDT) WSDL2Java emitter.
 */

package com.vmware.converter;

public class ConverterBindingStub extends org.apache.axis.client.Stub implements com.vmware.converter.ConverterPortType {
    private java.util.Vector cachedSerClasses = new java.util.Vector();
    private java.util.Vector cachedSerQNames = new java.util.Vector();
    private java.util.Vector cachedSerFactories = new java.util.Vector();
    private java.util.Vector cachedDeserFactories = new java.util.Vector();

    static org.apache.axis.description.OperationDesc [] _operations;

    static {
        _operations = new org.apache.axis.description.OperationDesc[107];
        _initOperationDesc1();
        _initOperationDesc2();
        _initOperationDesc3();
        _initOperationDesc4();
        _initOperationDesc5();
        _initOperationDesc6();
        _initOperationDesc7();
        _initOperationDesc8();
        _initOperationDesc9();
        _initOperationDesc10();
        _initOperationDesc11();
    }

    private static void _initOperationDesc1(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("DestroyPropertyFilter");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[0] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CreateFilter");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "PropertyFilterSpec"), com.vmware.converter.PropertyFilterSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "partialUpdates"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), boolean.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.converter.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidPropertyFault"),
                      "com.vmware.converter.InvalidProperty",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidProperty"), 
                      true
                     ));
        _operations[1] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RetrieveProperties");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "specSet"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "PropertyFilterSpec"), com.vmware.converter.PropertyFilterSpec[].class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "ObjectContent"));
        oper.setReturnClass(com.vmware.converter.ObjectContent[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidPropertyFault"),
                      "com.vmware.converter.InvalidProperty",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidProperty"), 
                      true
                     ));
        _operations[2] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CheckForUpdates");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "version"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "UpdateSet"));
        oper.setReturnClass(com.vmware.converter.UpdateSet.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidCollectorVersionFault"),
                      "com.vmware.converter.InvalidCollectorVersion",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidCollectorVersion"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[3] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("WaitForUpdates");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "version"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "UpdateSet"));
        oper.setReturnClass(com.vmware.converter.UpdateSet.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidCollectorVersionFault"),
                      "com.vmware.converter.InvalidCollectorVersion",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidCollectorVersion"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[4] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CancelWaitForUpdates");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[5] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("WaitForUpdatesEx");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "version"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "woptions"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "WaitOptions"), com.vmware.converter.WaitOptions.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "UpdateSet"));
        oper.setReturnClass(com.vmware.converter.UpdateSet.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidCollectorVersionFault"),
                      "com.vmware.converter.InvalidCollectorVersion",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidCollectorVersion"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[6] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("RetrievePropertiesEx");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "specSet"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "PropertyFilterSpec"), com.vmware.converter.PropertyFilterSpec[].class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "options"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "RetrieveOptions"), com.vmware.converter.RetrieveOptions.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "RetrieveResult"));
        oper.setReturnClass(com.vmware.converter.RetrieveResult.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidPropertyFault"),
                      "com.vmware.converter.InvalidProperty",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidProperty"), 
                      true
                     ));
        _operations[7] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ContinueRetrievePropertiesEx");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "token"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "RetrieveResult"));
        oper.setReturnClass(com.vmware.converter.RetrieveResult.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidPropertyFault"),
                      "com.vmware.converter.InvalidProperty",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidProperty"), 
                      true
                     ));
        _operations[8] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CancelRetrievePropertiesEx");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "token"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidPropertyFault"),
                      "com.vmware.converter.InvalidProperty",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidProperty"), 
                      true
                     ));
        _operations[9] = oper;

    }

    private static void _initOperationDesc2(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("CreatePropertyCollector");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.converter.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[10] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("DestroyPropertyCollector");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:vim25", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[11] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterGenerateTaskLogBundle");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "task"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterDiagnosticManagerTaskLogBundleInfo"));
        oper.setReturnClass(com.vmware.converter.ConverterDiagnosticManagerTaskLogBundleInfo.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "LogBundlingFailedFault"),
                      "com.vmware.converter.LogBundlingFailed",
                      new javax.xml.namespace.QName("urn:vim25", "LogBundlingFailed"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidStateFault"),
                      "com.vmware.converter.InvalidState",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NotFoundFault"),
                      "com.vmware.converter.NotFound",
                      new javax.xml.namespace.QName("urn:vim25", "NotFound"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NoPermissionFault"),
                      "com.vmware.converter.NoPermission",
                      new javax.xml.namespace.QName("urn:vim25", "NoPermission"), 
                      true
                     ));
        _operations[12] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterGenerateLogBundle");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "source"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterDiagnosticManagerTaskLogBundleInfo"));
        oper.setReturnClass(com.vmware.converter.ConverterDiagnosticManagerTaskLogBundleInfo.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "LogBundlingFailedFault"),
                      "com.vmware.converter.LogBundlingFailed",
                      new javax.xml.namespace.QName("urn:vim25", "LogBundlingFailed"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[13] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterRetrieveTaskLogBundle");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "key"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "offset"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "long"), long.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "maxPageSize"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "long"), long.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        oper.setReturnClass(java.lang.String.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NotFoundFault"),
                      "com.vmware.converter.NotFound",
                      new javax.xml.namespace.QName("urn:vim25", "NotFound"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[14] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterRetrieveTaskLogBundleUrl");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "key"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        oper.setReturnClass(java.lang.String.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidStateFault"),
                      "com.vmware.converter.InvalidState",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NotFoundFault"),
                      "com.vmware.converter.NotFound",
                      new javax.xml.namespace.QName("urn:vim25", "NotFound"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[15] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterDeleteTaskLogBundle");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "key"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NotFoundFault"),
                      "com.vmware.converter.NotFound",
                      new javax.xml.namespace.QName("urn:vim25", "NotFound"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "CannotDeleteFileFault"),
                      "com.vmware.converter.CannotDeleteFile",
                      new javax.xml.namespace.QName("urn:vim25", "CannotDeleteFile"), 
                      true
                     ));
        _operations[16] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterSetCollectorPageSize");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "maxCount"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[17] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterRewindCollector");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[18] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterResetCollector");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[19] = oper;

    }

    private static void _initOperationDesc3(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterDestroyCollector");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[20] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterValidateAgentAvailability");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "source"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterQueryManagerAgentAvailabilityResult"));
        oper.setReturnClass(com.vmware.converter.ConverterQueryManagerAgentAvailabilityResult.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "VimFaultFault"),
                      "com.vmware.converter.VimFault",
                      new javax.xml.namespace.QName("urn:vim25", "VimFault"), 
                      true
                     ));
        _operations[21] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterQuery");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "source"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterComputerInfo"));
        oper.setReturnClass(com.vmware.converter.ConverterComputerInfo.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "VimFaultFault"),
                      "com.vmware.converter.VimFault",
                      new javax.xml.namespace.QName("urn:vim25", "VimFault"), 
                      true
                     ));
        _operations[22] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterQueryHyperVInventory");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "source"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterHyperVInventoryInfo"));
        oper.setReturnClass(com.vmware.converter.ConverterHyperVInventoryInfo.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "HostConnectFaultFault"),
                      "com.vmware.converter.HostConnectFault",
                      new javax.xml.namespace.QName("urn:vim25", "HostConnectFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLoginFault"),
                      "com.vmware.converter.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLogin"), 
                      true
                     ));
        _operations[23] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterValidateParams");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "source"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "conversionParams"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterConversionParams"), com.vmware.converter.ConverterConversionParams.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoFaultFault"),
                      "com.vmware.converter.ConverterPropertyInfoFault",
                      new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLoginFault"),
                      "com.vmware.converter.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLogin"), 
                      true
                     ));
        _operations[24] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterValidateTargetStorageParams");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "source"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "sourceHardwareInfo"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerHardwareInfo"), com.vmware.converter.ConverterComputerHardwareInfo.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "conversionParams"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterConversionParams"), com.vmware.converter.ConverterConversionParams.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterValidationResult"));
        oper.setReturnClass(com.vmware.converter.ConverterValidationResult.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoFaultFault"),
                      "com.vmware.converter.ConverterPropertyInfoFault",
                      new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[25] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterValidateTarget");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "source"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "target"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterTargetVmSpec"), com.vmware.converter.ConverterTargetVmSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "ConverterConverterFaultFault"),
                      "com.vmware.converter.ConverterConverterFault",
                      new javax.xml.namespace.QName("urn:converter", "ConverterConverterFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLoginFault"),
                      "com.vmware.converter.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLogin"), 
                      true
                     ));
        _operations[26] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterValidateTargetAndGetDefaults");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "source"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "target"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterTargetVmSpec"), com.vmware.converter.ConverterTargetVmSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterDefaultConversionParamsResult"));
        oper.setReturnClass(com.vmware.converter.ConverterDefaultConversionParamsResult.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLoginFault"),
                      "com.vmware.converter.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLogin"), 
                      true
                     ));
        _operations[27] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterGetVMReconfigurationDefaults");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "source"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterDefaultVMReconfigurationParamsResult"));
        oper.setReturnClass(com.vmware.converter.ConverterDefaultVMReconfigurationParamsResult.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLoginFault"),
                      "com.vmware.converter.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLogin"), 
                      true
                     ));
        _operations[28] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterGetSupportedConversionSources");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterSupportedSources"));
        oper.setReturnClass(com.vmware.converter.ConverterSupportedSources.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLoginFault"),
                      "com.vmware.converter.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLogin"), 
                      true
                     ));
        _operations[29] = oper;

    }

    private static void _initOperationDesc4(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterGetSupportedReconfigurationSources");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterSupportedSources"));
        oper.setReturnClass(com.vmware.converter.ConverterSupportedSources.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLoginFault"),
                      "com.vmware.converter.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLogin"), 
                      true
                     ));
        _operations[30] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterGetSupportedTargets");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "source"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterSupportedTargets"));
        oper.setReturnClass(com.vmware.converter.ConverterSupportedTargets.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLoginFault"),
                      "com.vmware.converter.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLogin"), 
                      true
                     ));
        _operations[31] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterGetSupportedConfigOptionsForManaged");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "targets"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterTargetVmSpecManagedVmLocation"), com.vmware.converter.ConverterTargetVmSpecManagedVmLocation[].class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterConfigOptionsInfo"));
        oper.setReturnClass(com.vmware.converter.ConverterConfigOptionsInfo[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLoginFault"),
                      "com.vmware.converter.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLogin"), 
                      true
                     ));
        _operations[32] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterQueryBootableSnapshots");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "target"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterSnapshotInfo"));
        oper.setReturnClass(com.vmware.converter.ConverterSnapshotInfo[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[33] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterRetrieveServiceContent");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterServiceContent"));
        oper.setReturnClass(com.vmware.converter.ConverterServiceContent.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[34] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterLogin");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "userName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "password"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "locale"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterUserSession"));
        oper.setReturnClass(com.vmware.converter.ConverterUserSession.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLocaleFault"),
                      "com.vmware.converter.InvalidLocale",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLocale"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLoginFault"),
                      "com.vmware.converter.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLogin"), 
                      true
                     ));
        _operations[35] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterLoginExtension");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "userName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "password"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "locale"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterUserSession"));
        oper.setReturnClass(com.vmware.converter.ConverterUserSession.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLocaleFault"),
                      "com.vmware.converter.InvalidLocale",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLocale"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLoginFault"),
                      "com.vmware.converter.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLogin"), 
                      true
                     ));
        _operations[36] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterLoginSession");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "userName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "sessionId"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "locale"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterUserSession"));
        oper.setReturnClass(com.vmware.converter.ConverterUserSession.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLocaleFault"),
                      "com.vmware.converter.InvalidLocale",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLocale"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLoginFault"),
                      "com.vmware.converter.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLogin"), 
                      true
                     ));
        _operations[37] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterImpersonate");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "locale"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterUserSession"));
        oper.setReturnClass(com.vmware.converter.ConverterUserSession.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLocaleFault"),
                      "com.vmware.converter.InvalidLocale",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLocale"), 
                      true
                     ));
        _operations[38] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterLogout");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[39] = oper;

    }

    private static void _initOperationDesc5(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterTerminateSession");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "sessionId"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String[].class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NotFoundFault"),
                      "com.vmware.converter.NotFound",
                      new javax.xml.namespace.QName("urn:vim25", "NotFound"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[40] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterSetLocale");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "locale"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLocaleFault"),
                      "com.vmware.converter.InvalidLocale",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLocale"), 
                      true
                     ));
        _operations[41] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterAgentImpersonateUser");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "userName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "token"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "long"), long.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "locale"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterUserSession"));
        oper.setReturnClass(com.vmware.converter.ConverterUserSession.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLocaleFault"),
                      "com.vmware.converter.InvalidLocale",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLocale"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLoginFault"),
                      "com.vmware.converter.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLogin"), 
                      true
                     ));
        _operations[42] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterAgentLoginWithCertificate");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "locale"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterUserSession"));
        oper.setReturnClass(com.vmware.converter.ConverterUserSession.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLocaleFault"),
                      "com.vmware.converter.InvalidLocale",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLocale"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLoginFault"),
                      "com.vmware.converter.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLogin"), 
                      true
                     ));
        _operations[43] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterAgentRegister");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NoClientCertificateFault"),
                      "com.vmware.converter.NoClientCertificate",
                      new javax.xml.namespace.QName("urn:vim25", "NoClientCertificate"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NoPermissionFault"),
                      "com.vmware.converter.NoPermission",
                      new javax.xml.namespace.QName("urn:vim25", "NoPermission"), 
                      true
                     ));
        _operations[44] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterAgentUnregister");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NoClientCertificateFault"),
                      "com.vmware.converter.NoClientCertificate",
                      new javax.xml.namespace.QName("urn:vim25", "NoClientCertificate"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[45] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterAgentQuery");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "source"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterComputerInfo"));
        oper.setReturnClass(com.vmware.converter.ConverterComputerInfo.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[46] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterAgentClone_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "target"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "params"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterParamsAgentCloningParams"), com.vmware.converter.ConverterParamsAgentCloningParams.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "envInfo"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterConversionRuntimeEnvironmentInfo"), com.vmware.converter.ConverterConversionRuntimeEnvironmentInfo.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.converter.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[47] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterAgentDeleteBitmap");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "prevBitmapIds"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String[].class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[48] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterAgentReconfig_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "target"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "reconfigParams"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterReconfigParams"), com.vmware.converter.ConverterReconfigParams.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "cloningParams"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterParamsAgentCloningParams"), com.vmware.converter.ConverterParamsAgentCloningParams.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "envInfo"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterConversionRuntimeEnvironmentInfo"), com.vmware.converter.ConverterConversionRuntimeEnvironmentInfo.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.converter.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[49] = oper;

    }

    private static void _initOperationDesc6(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterAgentCustomize_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "target"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "customizationParams"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterParamsAgentCustomizationParams"), com.vmware.converter.ConverterParamsAgentCustomizationParams.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "cloningParams"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterParamsAgentCloningParams"), com.vmware.converter.ConverterParamsAgentCloningParams.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "envInfo"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterConversionRuntimeEnvironmentInfo"), com.vmware.converter.ConverterConversionRuntimeEnvironmentInfo.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.converter.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[50] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterAgentValidateTarget");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "source"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "target"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterTargetVmSpec"), com.vmware.converter.ConverterTargetVmSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[51] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterAgentConvert_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "source"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "params"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterConversionParams"), com.vmware.converter.ConverterConversionParams.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "envInfo"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterConversionRuntimeEnvironmentInfo"), com.vmware.converter.ConverterConversionRuntimeEnvironmentInfo.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.converter.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[52] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterAgentEstimateTimeToComplete");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "source"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "params"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterConversionParams"), com.vmware.converter.ConverterConversionParams.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "envInfo"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterConversionRuntimeEnvironmentInfo"), com.vmware.converter.ConverterConversionRuntimeEnvironmentInfo.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"));
        oper.setReturnClass(java.lang.Integer.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[53] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterAgentPassDiskTickets");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "requestId"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "ticketInfos"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterDiskTicketDispatcherDiskTicketInfo"), com.vmware.converter.ConverterDiskTicketDispatcherDiskTicketInfo[].class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[54] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterAgentSysimgbaseSetResponse");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "key"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "response"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "base64Binary"), byte[].class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[55] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterHelperConvert_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "source"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "params"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterAgentHelperConverterHelperParams"), com.vmware.converter.ConverterAgentHelperConverterHelperParams.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.converter.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[56] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterHelperRetrieveServiceContent");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterHelperServiceContent"));
        oper.setReturnClass(com.vmware.converter.ConverterHelperServiceContent.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[57] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterHelperLogin");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[58] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterHelperLogout");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[59] = oper;

    }

    private static void _initOperationDesc7(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("AgentInternalDispose");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[60] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("AgentInternalMakeSticky");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[61] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterReadNextEvents");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "maxCount"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterEvent"));
        oper.setReturnClass(com.vmware.converter.ConverterEvent[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[62] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterReadPreviousEvents");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "maxCount"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterEvent"));
        oper.setReturnClass(com.vmware.converter.ConverterEvent[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[63] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterCreateCollectorForEvents");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "filter"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterEventFilterSpec"), com.vmware.converter.ConverterEventFilterSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.converter.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidStateFault"),
                      "com.vmware.converter.InvalidState",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[64] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterQueryEvents");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "filter"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterEventFilterSpec"), com.vmware.converter.ConverterEventFilterSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterEvent"));
        oper.setReturnClass(com.vmware.converter.ConverterEvent[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[65] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterInstallAgent");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "hostname"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "port"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), java.lang.Integer.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "username"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "password"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "postponeReboot"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), java.lang.Boolean.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterAgentManagerAgentDeploymentResult"));
        oper.setReturnClass(com.vmware.converter.ConverterAgentManagerAgentDeploymentResult.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLoginFault"),
                      "com.vmware.converter.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLogin"), 
                      true
                     ));
        _operations[66] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterUninstallAgent");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "hostname"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "username"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "password"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "postponeReboot"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"), java.lang.Boolean.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterAgentManagerDeploymentStatus"));
        oper.setReturnClass(com.vmware.converter.ConverterAgentManagerDeploymentStatus.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLoginFault"),
                      "com.vmware.converter.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLogin"), 
                      true
                     ));
        _operations[67] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterRebootMachine");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "hostname"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "username"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "password"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLoginFault"),
                      "com.vmware.converter.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLogin"), 
                      true
                     ));
        _operations[68] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterCheckLicenseFeature");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "featureKey"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "boolean"));
        oper.setReturnClass(boolean.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[69] = oper;

    }

    private static void _initOperationDesc8(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterConfigureLicenseSource");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "licenseSource"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterLicenseSource"), com.vmware.converter.ConverterLicenseSource.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLicenseFault"),
                      "com.vmware.converter.InvalidLicense",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLicense"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[70] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterServerManagedEntityRename");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "newName"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"));
        oper.setReturnClass(java.lang.String.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "DuplicateNameFault"),
                      "com.vmware.converter.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim25", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidNameFault"),
                      "com.vmware.converter.InvalidName",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[71] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterGenerateJobLogBundle");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "job"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterDiagnosticManagerTaskLogBundleInfo"));
        oper.setReturnClass(com.vmware.converter.ConverterDiagnosticManagerTaskLogBundleInfo.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "LogBundlingFailedFault"),
                      "com.vmware.converter.LogBundlingFailed",
                      new javax.xml.namespace.QName("urn:vim25", "LogBundlingFailed"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidStateFault"),
                      "com.vmware.converter.InvalidState",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NotFoundFault"),
                      "com.vmware.converter.NotFound",
                      new javax.xml.namespace.QName("urn:vim25", "NotFound"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NoPermissionFault"),
                      "com.vmware.converter.NoPermission",
                      new javax.xml.namespace.QName("urn:vim25", "NoPermission"), 
                      true
                     ));
        _operations[72] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterServerConversionJobUpdateConversionParams");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "newParams"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionConversionParamsUpdateSpec"), com.vmware.converter.ConverterServerConversionConversionParamsUpdateSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterConversionParams"));
        oper.setReturnClass(com.vmware.converter.ConverterConversionParams.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidStateFault"),
                      "com.vmware.converter.InvalidState",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[73] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterReadNextConversionJobs");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "maxCount"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionConversionJobInfo"));
        oper.setReturnClass(com.vmware.converter.ConverterServerConversionConversionJobInfo[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[74] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterReadPreviousConversionJobs");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "maxCount"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionConversionJobInfo"));
        oper.setReturnClass(com.vmware.converter.ConverterServerConversionConversionJobInfo[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[75] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterServerConversionManagerCreateJob");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionConversionJobSpec"), com.vmware.converter.ConverterServerConversionConversionJobSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "extraInfo"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "anyType"), java.lang.Object.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionConversionJobInfo"));
        oper.setReturnClass(com.vmware.converter.ConverterServerConversionConversionJobInfo.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "DuplicateNameFault"),
                      "com.vmware.converter.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim25", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidNameFault"),
                      "com.vmware.converter.InvalidName",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidStateFault"),
                      "com.vmware.converter.InvalidState",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLoginFault"),
                      "com.vmware.converter.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLogin"), 
                      true
                     ));
        _operations[76] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterServerConversionManagerDestroyJob");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "job"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "activeTaskHandling"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidStateFault"),
                      "com.vmware.converter.InvalidState",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NotFoundFault"),
                      "com.vmware.converter.NotFound",
                      new javax.xml.namespace.QName("urn:vim25", "NotFound"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[77] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterServerConversionManagerGetJobInfo");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "conversionJob"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionConversionJobInfo"));
        oper.setReturnClass(com.vmware.converter.ConverterServerConversionConversionJobInfo.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NotFoundFault"),
                      "com.vmware.converter.NotFound",
                      new javax.xml.namespace.QName("urn:vim25", "NotFound"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[78] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterServerConversionManagerGetJobSpec");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "conversionJob"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionConversionJobSpec"));
        oper.setReturnClass(com.vmware.converter.ConverterServerConversionConversionJobSpec.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NotFoundFault"),
                      "com.vmware.converter.NotFound",
                      new javax.xml.namespace.QName("urn:vim25", "NotFound"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[79] = oper;

    }

    private static void _initOperationDesc9(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterServerConversionManagerGetJobExtraInfo");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "conversionJob"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "anyType"));
        oper.setReturnClass(java.lang.Object.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NotFoundFault"),
                      "com.vmware.converter.NotFound",
                      new javax.xml.namespace.QName("urn:vim25", "NotFound"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[80] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterServerConversionManagerGetJobInfoFromScheduledTask");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "task"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionConversionJobInfo"));
        oper.setReturnClass(com.vmware.converter.ConverterServerConversionConversionJobInfo.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NotFoundFault"),
                      "com.vmware.converter.NotFound",
                      new javax.xml.namespace.QName("urn:vim25", "NotFound"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[81] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterServerConversionManagerGetJobSpecFromScheduledTask");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "task"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionConversionJobSpec"));
        oper.setReturnClass(com.vmware.converter.ConverterServerConversionConversionJobSpec.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NotFoundFault"),
                      "com.vmware.converter.NotFound",
                      new javax.xml.namespace.QName("urn:vim25", "NotFound"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[82] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterServerConversionManagerGetJobExtraInfoFromScheduledTask");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "task"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "anyType"));
        oper.setReturnClass(java.lang.Object.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NotFoundFault"),
                      "com.vmware.converter.NotFound",
                      new javax.xml.namespace.QName("urn:vim25", "NotFound"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[83] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterCreateCollectorForJobs");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "filter"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterServerJobJobFilterSpec"), com.vmware.converter.ConverterServerJobJobFilterSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.converter.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidStateFault"),
                      "com.vmware.converter.InvalidState",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[84] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterServerJobResume");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidStateFault"),
                      "com.vmware.converter.InvalidState",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NoPermissionFault"),
                      "com.vmware.converter.NoPermission",
                      new javax.xml.namespace.QName("urn:vim25", "NoPermission"), 
                      true
                     ));
        _operations[85] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterServerJobSuspend");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "activeTaskHandling"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "ConverterJobHasActiveTaskFaultFault"),
                      "com.vmware.converter.ConverterJobHasActiveTaskFault",
                      new javax.xml.namespace.QName("urn:converter", "ConverterJobHasActiveTaskFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidStateFault"),
                      "com.vmware.converter.InvalidState",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NoPermissionFault"),
                      "com.vmware.converter.NoPermission",
                      new javax.xml.namespace.QName("urn:vim25", "NoPermission"), 
                      true
                     ));
        _operations[86] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterServerJobStop");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "activeTaskHandling"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "ConverterJobDeactivationFaultFault"),
                      "com.vmware.converter.ConverterJobDeactivationFault",
                      new javax.xml.namespace.QName("urn:converter", "ConverterJobDeactivationFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidArgumentFault"),
                      "com.vmware.converter.InvalidArgument",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidArgument"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "ConverterJobHasActiveTaskFaultFault"),
                      "com.vmware.converter.ConverterJobHasActiveTaskFault",
                      new javax.xml.namespace.QName("urn:converter", "ConverterJobHasActiveTaskFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[87] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterServerJobUpdateSpec");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "updateParams"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterServerJobJobJobUpdateSpec"), com.vmware.converter.ConverterServerJobJobJobUpdateSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterServerJobJobSpec"));
        oper.setReturnClass(com.vmware.converter.ConverterServerJobJobSpec.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "DuplicateNameFault"),
                      "com.vmware.converter.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim25", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidNameFault"),
                      "com.vmware.converter.InvalidName",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "ConverterFirstRunAlreadyStartedFaultFault"),
                      "com.vmware.converter.ConverterFirstRunAlreadyStartedFault",
                      new javax.xml.namespace.QName("urn:converter", "ConverterFirstRunAlreadyStartedFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NoPermissionFault"),
                      "com.vmware.converter.NoPermission",
                      new javax.xml.namespace.QName("urn:vim25", "NoPermission"), 
                      true
                     ));
        _operations[88] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterServerJobUpdateExtaInfo");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "replacementInfo"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "anyType"), java.lang.Object.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "anyType"));
        oper.setReturnClass(java.lang.Object.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NoPermissionFault"),
                      "com.vmware.converter.NoPermission",
                      new javax.xml.namespace.QName("urn:vim25", "NoPermission"), 
                      true
                     ));
        _operations[89] = oper;

    }

    private static void _initOperationDesc10(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterCreateScheduledTask");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "obj"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterScheduledTaskSpec"), com.vmware.converter.ConverterScheduledTaskSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskInfo"));
        oper.setReturnClass(com.vmware.converter.ScheduledTaskInfo.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "DuplicateNameFault"),
                      "com.vmware.converter.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim25", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidNameFault"),
                      "com.vmware.converter.InvalidName",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[90] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterGetScheduledTask");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "task"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterScheduledTaskInfo"));
        oper.setReturnClass(com.vmware.converter.ConverterScheduledTaskInfo.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NotFoundFault"),
                      "com.vmware.converter.NotFound",
                      new javax.xml.namespace.QName("urn:vim25", "NotFound"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[91] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterReconfigureScheduledTask");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "task"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "spec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskSpec"), com.vmware.converter.ScheduledTaskSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "DuplicateNameFault"),
                      "com.vmware.converter.DuplicateName",
                      new javax.xml.namespace.QName("urn:vim25", "DuplicateName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidNameFault"),
                      "com.vmware.converter.InvalidName",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidName"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidStateFault"),
                      "com.vmware.converter.InvalidState",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NotFoundFault"),
                      "com.vmware.converter.NotFound",
                      new javax.xml.namespace.QName("urn:vim25", "NotFound"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[92] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterCancelTask");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[93] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterReadNextTasks");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "maxCount"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterTaskInfo"));
        oper.setReturnClass(com.vmware.converter.ConverterTaskInfo[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[94] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterReadPreviousTasks");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "maxCount"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterTaskInfo"));
        oper.setReturnClass(com.vmware.converter.ConverterTaskInfo[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[95] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterSetMaxTask");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "maxTask"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[96] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterSetMaxConnection");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "maxConnection"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"), int.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[97] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterCreateCollectorForTasks");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "filter"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterTaskFilterSpec"), com.vmware.converter.ConverterTaskFilterSpec.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.converter.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidStateFault"),
                      "com.vmware.converter.InvalidState",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidState"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[98] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterGetTaskInfo");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "task"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterTaskInfo"));
        oper.setReturnClass(com.vmware.converter.ConverterTaskInfo.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NotFoundFault"),
                      "com.vmware.converter.NotFound",
                      new javax.xml.namespace.QName("urn:vim25", "NotFound"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[99] = oper;

    }

    private static void _initOperationDesc11(){
        org.apache.axis.description.OperationDesc oper;
        org.apache.axis.description.ParameterDesc param;
        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterGetTaskSpec");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "task"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterTaskSpec"));
        oper.setReturnClass(com.vmware.converter.ConverterTaskSpec.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NotFoundFault"),
                      "com.vmware.converter.NotFound",
                      new javax.xml.namespace.QName("urn:vim25", "NotFound"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[100] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterEstimateTimeToComplete");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "taskSpec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterTaskSpec"), com.vmware.converter.ConverterTaskSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "envInfo"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterRuntimeEnvironmentInfo"), com.vmware.converter.ConverterRuntimeEnvironmentInfo.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"));
        oper.setReturnClass(java.lang.Integer.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "InvalidLoginFault"),
                      "com.vmware.converter.InvalidLogin",
                      new javax.xml.namespace.QName("urn:vim25", "InvalidLogin"), 
                      true
                     ));
        _operations[101] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterGetChildTask");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "task"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterTaskInfo"));
        oper.setReturnClass(com.vmware.converter.ConverterTaskInfo[].class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "NotFoundFault"),
                      "com.vmware.converter.NotFound",
                      new javax.xml.namespace.QName("urn:vim25", "NotFound"), 
                      true
                     ));
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[102] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterTargetVMManagerCreateVM");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "source"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "params"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterConversionParams"), com.vmware.converter.ConverterConversionParams.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:converter", "ConverterConverterWorkerVmCreationResult"));
        oper.setReturnClass(com.vmware.converter.ConverterConverterWorkerVmCreationResult.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[103] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterWorkerConvert_Task");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "source"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "target"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "params"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterConversionParams"), com.vmware.converter.ConverterConversionParams.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "sourceModificationSpec"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionP2VSourceModificationSpec"), com.vmware.converter.ConverterServerConversionP2VSourceModificationSpec.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "storageMapping"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterParamsStorageMapping"), com.vmware.converter.ConverterParamsStorageMapping.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "envInfo"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterConversionRuntimeEnvironmentInfo"), com.vmware.converter.ConverterConversionRuntimeEnvironmentInfo.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"));
        oper.setReturnClass(com.vmware.converter.ManagedObjectReference.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[104] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterWorkerDeleteBitmap");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "source"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "prevBitmapIds"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "string"), java.lang.String[].class, false, false);
        oper.addParameter(param);
        oper.setReturnType(org.apache.axis.encoding.XMLType.AXIS_VOID);
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[105] = oper;

        oper = new org.apache.axis.description.OperationDesc();
        oper.setName("ConverterWorkerEstimateTimeToComplete");
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "_this"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference"), com.vmware.converter.ManagedObjectReference.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "source"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        param.setOmittable(true);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "target"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec"), com.vmware.converter.ConverterComputerSpec.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "params"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterConversionParams"), com.vmware.converter.ConverterConversionParams.class, false, false);
        oper.addParameter(param);
        param = new org.apache.axis.description.ParameterDesc(new javax.xml.namespace.QName("urn:converter", "envInfo"), org.apache.axis.description.ParameterDesc.IN, new javax.xml.namespace.QName("urn:converter", "ConverterConversionRuntimeEnvironmentInfo"), com.vmware.converter.ConverterConversionRuntimeEnvironmentInfo.class, false, false);
        oper.addParameter(param);
        oper.setReturnType(new javax.xml.namespace.QName("http://www.w3.org/2001/XMLSchema", "int"));
        oper.setReturnClass(java.lang.Integer.class);
        oper.setReturnQName(new javax.xml.namespace.QName("urn:converter", "returnval"));
        oper.setStyle(org.apache.axis.constants.Style.WRAPPED);
        oper.setUse(org.apache.axis.constants.Use.LITERAL);
        oper.addFault(new org.apache.axis.description.FaultDesc(
                      new javax.xml.namespace.QName("urn:converter", "RuntimeFaultFault"),
                      "com.vmware.converter.RuntimeFault",
                      new javax.xml.namespace.QName("urn:vim25", "RuntimeFault"), 
                      true
                     ));
        _operations[106] = oper;

    }

    public ConverterBindingStub() throws org.apache.axis.AxisFault {
         this(null);
    }

    public ConverterBindingStub(java.net.URL endpointURL, javax.xml.rpc.Service service) throws org.apache.axis.AxisFault {
         this(service);
         super.cachedEndpoint = endpointURL;
    }

    public ConverterBindingStub(javax.xml.rpc.Service service) throws org.apache.axis.AxisFault {
        if (service == null) {
            super.service = new org.apache.axis.client.Service();
        } else {
            super.service = service;
        }
        ((org.apache.axis.client.Service)super.service).setTypeMappingVersion("1.2");
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
        addBindings0();
        addBindings1();
        addBindings2();
        addBindings3();
        addBindings4();
        addBindings5();
        addBindings6();
        addBindings7();
        addBindings8();
        addBindings9();
        addBindings10();
        addBindings11();
        addBindings12();
        addBindings13();
        addBindings14();
        addBindings15();
        addBindings16();
        addBindings17();
        addBindings18();
        addBindings19();
        addBindings20();
        addBindings21();
        addBindings22();
        addBindings23();
        addBindings24();
        addBindings25();
        addBindings26();
        addBindings27();
        addBindings28();
        addBindings29();
        addBindings30();
        addBindings31();
        addBindings32();
        addBindings33();
        addBindings34();
        addBindings35();
        addBindings36();
        addBindings37();
        addBindings38();
        addBindings39();
        addBindings40();
        addBindings41();
        addBindings42();
    }

    private void addBindings0() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:converter", ">AgentInternalDisposeResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AgentInternalDisposeResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">AgentInternalMakeStickyResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AgentInternalMakeStickyResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">CancelRetrievePropertiesExResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CancelRetrievePropertiesExResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">CancelWaitForUpdatesResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CancelWaitForUpdatesResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">CheckForUpdatesResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CheckForUpdatesResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ContinueRetrievePropertiesExResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ContinueRetrievePropertiesExResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterAgentClone_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentClone_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterAgentConvert_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentConvert_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterAgentCustomize_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentCustomize_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterAgentDeleteBitmapResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentDeleteBitmapResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterAgentEstimateTimeToCompleteResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentEstimateTimeToCompleteResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterAgentImpersonateUserResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentImpersonateUserResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterAgentLoginWithCertificateResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentLoginWithCertificateResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterAgentPassDiskTicketsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentPassDiskTicketsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterAgentQueryResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentQueryResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterAgentReconfig_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentReconfig_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterAgentRegisterResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentRegisterResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterAgentSysimgbaseSetResponseResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentSysimgbaseSetResponseResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterAgentUnregisterResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentUnregisterResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterAgentValidateTargetResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentValidateTargetResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterCancelTaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCancelTaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterCheckLicenseFeatureResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCheckLicenseFeatureResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterConfigureLicenseSourceResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterConfigureLicenseSourceResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterCreateCollectorForEventsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCreateCollectorForEventsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterCreateCollectorForJobsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCreateCollectorForJobsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterCreateCollectorForTasksResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCreateCollectorForTasksResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterCreateScheduledTaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCreateScheduledTaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterDeleteTaskLogBundleResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDeleteTaskLogBundleResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterDestroyCollectorResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDestroyCollectorResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterEstimateTimeToCompleteResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterEstimateTimeToCompleteResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterGenerateJobLogBundleResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGenerateJobLogBundleResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterGenerateLogBundleResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGenerateLogBundleResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterGenerateTaskLogBundleResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGenerateTaskLogBundleResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterGetChildTaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGetChildTaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterGetScheduledTaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGetScheduledTaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterGetSupportedConfigOptionsForManagedResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGetSupportedConfigOptionsForManagedResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterGetSupportedConversionSourcesResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGetSupportedConversionSourcesResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterGetSupportedReconfigurationSourcesResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGetSupportedReconfigurationSourcesResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterGetSupportedTargetsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGetSupportedTargetsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterGetTaskInfoResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGetTaskInfoResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterGetTaskSpecResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGetTaskSpecResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterGetVMReconfigurationDefaultsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGetVMReconfigurationDefaultsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterHelperConvert_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHelperConvert_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterHelperLoginResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHelperLoginResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterHelperLogoutResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHelperLogoutResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterHelperRetrieveServiceContentResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHelperRetrieveServiceContentResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterImpersonateResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImpersonateResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterInstallAgentResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterInstallAgentResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterLoginExtensionResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterLoginExtensionResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterLoginResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterLoginResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterLoginSessionResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterLoginSessionResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterLogoutResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterLogoutResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterQueryBootableSnapshotsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterQueryBootableSnapshotsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterQueryEventsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterQueryEventsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterQueryHyperVInventoryResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterQueryHyperVInventoryResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterQueryResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterQueryResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterReadNextConversionJobsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReadNextConversionJobsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterReadNextEventsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReadNextEventsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterReadNextTasksResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReadNextTasksResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterReadPreviousConversionJobsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReadPreviousConversionJobsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterReadPreviousEventsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReadPreviousEventsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterReadPreviousTasksResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReadPreviousTasksResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterRebootMachineResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterRebootMachineResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterReconfigureScheduledTaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigureScheduledTaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterResetCollectorResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterResetCollectorResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterRetrieveServiceContentResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterRetrieveServiceContentResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterRetrieveTaskLogBundleResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterRetrieveTaskLogBundleResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterRetrieveTaskLogBundleUrlResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterRetrieveTaskLogBundleUrlResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterRewindCollectorResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterRewindCollectorResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterServerConversionJobUpdateConversionParamsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionJobUpdateConversionParamsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterServerConversionManagerCreateJobResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionManagerCreateJobResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterServerConversionManagerDestroyJobResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionManagerDestroyJobResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterServerConversionManagerGetJobExtraInfoFromScheduledTaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionManagerGetJobExtraInfoFromScheduledTaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterServerConversionManagerGetJobExtraInfoResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionManagerGetJobExtraInfoResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterServerConversionManagerGetJobInfoFromScheduledTaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionManagerGetJobInfoFromScheduledTaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterServerConversionManagerGetJobInfoResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionManagerGetJobInfoResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterServerConversionManagerGetJobSpecFromScheduledTaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionManagerGetJobSpecFromScheduledTaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterServerConversionManagerGetJobSpecResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionManagerGetJobSpecResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterServerJobResumeResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerJobResumeResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterServerJobStopResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerJobStopResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterServerJobSuspendResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerJobSuspendResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterServerJobUpdateExtaInfoResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerJobUpdateExtaInfoResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterServerJobUpdateSpecResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerJobUpdateSpecResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterServerManagedEntityRenameResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerManagedEntityRenameResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterSetCollectorPageSizeResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSetCollectorPageSizeResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterSetLocaleResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSetLocaleResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterSetMaxConnectionResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSetMaxConnectionResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterSetMaxTaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSetMaxTaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterTargetVMManagerCreateVMResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTargetVMManagerCreateVMResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterTerminateSessionResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTerminateSessionResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterUninstallAgentResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUninstallAgentResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterValidateAgentAvailabilityResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterValidateAgentAvailabilityResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterValidateParamsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterValidateParamsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterValidateTargetAndGetDefaultsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterValidateTargetAndGetDefaultsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterValidateTargetResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterValidateTargetResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterValidateTargetStorageParamsResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterValidateTargetStorageParamsResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterWorkerConvert_TaskResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterWorkerConvert_TaskResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterWorkerDeleteBitmapResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterWorkerDeleteBitmapResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">ConverterWorkerEstimateTimeToCompleteResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterWorkerEstimateTimeToCompleteResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">CreateFilterResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CreateFilterResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings1() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:converter", ">CreatePropertyCollectorResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CreatePropertyCollectorResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">DestroyPropertyCollectorResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DestroyPropertyCollectorResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">DestroyPropertyFilterResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DestroyPropertyFilterResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">RetrievePropertiesExResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RetrievePropertiesExResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">RetrievePropertiesResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RetrievePropertiesResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">WaitForUpdatesExResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.WaitForUpdatesExResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", ">WaitForUpdatesResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.WaitForUpdatesResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "AgentInternalComputerSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AgentInternalComputerSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "AgentInternalDisposeRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AgentInternalDisposeRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "AgentInternalMakeStickyRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AgentInternalMakeStickyRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterAgentHelperConverterHelperParamsTargetDiskParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterAgentHelperConverterHelperParamsTargetDiskParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterAgentHelperConverterHelperParamsTargetVolumeParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterAgentHelperConverterHelperParamsTargetVolumeParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterAgentInternalDeviceMappingAlert");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterAgentInternalDeviceMappingAlert.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterAgentInternalDiskSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterAgentInternalDiskSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterAgentInternalLegacyPartition");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterAgentInternalLegacyPartition.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterAgentInternalTargetStorageLayoutTargetDiskInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterAgentInternalTargetStorageLayoutTargetDiskInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterAgentInternalTargetStorageLayoutTargetVolumeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterAgentInternalTargetStorageLayoutTargetVolumeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterBootConfigInfoBootLoaderEntryInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterBootConfigInfoBootLoaderEntryInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterBootConfigInfoBootLoaderInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterBootConfigInfoBootLoaderInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterComputerOsInfoLogicalVolumeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterComputerOsInfoLogicalVolumeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterConfigOptionsInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterConfigOptionsInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterConfigOptionsInfoOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterConfigOptionsInfoOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterDiagnosticManagerBundleContent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterDiagnosticManagerBundleContent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterDiskTicketDispatcherDiskTicketInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterDiskTicketDispatcherDiskTicketInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterEventType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterEventType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterHyperVInventoryInfoHyperVInventoryVirtualMachineItem");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterHyperVInventoryInfoHyperVInventoryVirtualMachineItem.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterLicenseFeatureInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterLicenseFeatureInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterNetworkInfoNicInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterNetworkInfoNicInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterNetworkParamsNicParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterNetworkParamsNicParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterParamsStorageMappingDiskMapping");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterParamsStorageMappingDiskMapping.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterParamsStorageMappingVolumeMapping");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterParamsStorageMappingVolumeMapping.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterPropertyInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterPropertyInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterReconfigPrerequisitesFileToUpdateInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterReconfigPrerequisitesFileToUpdateInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterReconfigPrerequisitesHotfixInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterReconfigPrerequisitesHotfixInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterServerConversionConversionJobInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterServerConversionConversionJobInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterServiceChangeRequest");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterServiceChangeRequest.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterServiceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterServiceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterSnapshotInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterSnapshotInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterSSLCertificateData");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterSSLCertificateData.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterStorageInfoDiskInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterStorageInfoDiskInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterStorageInfoVolumeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterStorageInfoVolumeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterStorageParamsTargetDiskParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterStorageParamsTargetDiskParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterStorageParamsVolumeCloningParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterStorageParamsVolumeCloningParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterSysimgbaseProxySysimgbaseRequest");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterSysimgbaseProxySysimgbaseRequest.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterTargetVmSpecManagedVmLocation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterTargetVmSpecManagedVmLocation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterTaskInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterTaskInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterTaskInfoState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterTaskInfoState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ArrayOfConverterUserSession");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConverterUserSession.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentCloneRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentCloneRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentContent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentContent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentConvertRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentConvertRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentCustomizeRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentCustomizeRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentDeleteBitmapRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentDeleteBitmapRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentDeploymentFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentDeploymentFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentEstimateTimeToCompleteRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentEstimateTimeToCompleteRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentHelperConverterHelperConverterHelperResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentHelperConverterHelperConverterHelperResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentHelperConverterHelperParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentHelperConverterHelperParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentHelperConverterHelperParamsTargetDiskParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentHelperConverterHelperParamsTargetDiskParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentHelperConverterHelperParamsTargetVolumeParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentHelperConverterHelperParamsTargetVolumeParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentHelperConverterHelperParamsTargetVolumeParamsExtfsFeatures");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentHelperConverterHelperParamsTargetVolumeParamsExtfsFeatures.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentHelperConverterHelperParamsTargetVolumeParamsXfsFeatures");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentHelperConverterHelperParamsTargetVolumeParamsXfsFeatures.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentImpersonateUserRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentImpersonateUserRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInstallAlreadyExistsFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInstallAlreadyExistsFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInstallFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInstallFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInstallOldWinVersionFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInstallOldWinVersionFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInstallRebootPendingFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInstallRebootPendingFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalAttachedDiskSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalAttachedDiskSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalBlockCloningOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalBlockCloningOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalCompatibilityError");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalCompatibilityError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalComputerOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalComputerOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalDeviceDroppedDeviceMappingAlert");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalDeviceDroppedDeviceMappingAlert.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalDeviceMappingAlert");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalDeviceMappingAlert.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalDeviceMappingResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalDeviceMappingResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalDiskAttachPoint");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalDiskAttachPoint.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalDiskAttachPointBusType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalDiskAttachPointBusType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalDiskAttachPointOrigin");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalDiskAttachPointOrigin.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalDiskCreationOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalDiskCreationOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalDiskLayoutInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalDiskLayoutInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalDiskListSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalDiskListSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalDiskSizes");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalDiskSizes.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalDiskSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalDiskSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalExtendedOsInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalExtendedOsInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalForeignSourceVMSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalForeignSourceVMSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalHostedSourceVMSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalHostedSourceVMSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalHostedTargetVMSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalHostedTargetVMSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalHyperVLocalVmSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalHyperVLocalVmSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalHyperVSourceVMSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalHyperVSourceVMSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalIDE2SCSIDeviceMappingAlert");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalIDE2SCSIDeviceMappingAlert.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalImageProcessingOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalImageProcessingOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalLegacyPartition");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalLegacyPartition.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalLiveComputerSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalLiveComputerSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalLiveSourceComputerSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalLiveSourceComputerSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalLocalVirtualDiskSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalLocalVirtualDiskSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalLocalVMOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalLocalVMOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalLocalVmSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalLocalVmSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalLoginCredentials");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalLoginCredentials.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalManagedDiskSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalManagedDiskSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalManagedSourceVMSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalManagedSourceVMSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings2() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalManagedTargetVMSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalManagedTargetVMSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalManagedVMOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalManagedVMOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalManagedVmSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalManagedVmSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalNoGOSIdMappingAlert");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalNoGOSIdMappingAlert.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalNoNetworkConfiguredDeviceMappingAlert");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalNoNetworkConfiguredDeviceMappingAlert.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalObjectLocator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalObjectLocator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalOsInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalOsInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalOsInfoOsFamily");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalOsInfoOsFamily.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalPosixOsInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalPosixOsInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalProxyInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalProxyInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalPvsLocalVmSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalPvsLocalVmSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalPvsSourceVMSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalPvsSourceVMSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalSCSI2IDECdromMappingAlert");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalSCSI2IDECdromMappingAlert.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalServerLocator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalServerLocator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalServiceCredentials");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalServiceCredentials.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalSessionCredentials");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalSessionCredentials.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalSourceComputerSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalSourceComputerSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalSourceVMSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalSourceVMSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalStaticComputerSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalStaticComputerSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalTargetStorageLayout");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalTargetStorageLayout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalTargetStorageLayoutSourceVolumeAttributes");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalTargetStorageLayoutSourceVolumeAttributes.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalTargetStorageLayoutTargetDiskInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalTargetStorageLayoutTargetDiskInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalTargetStorageLayoutTargetVolumeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalTargetStorageLayoutTargetVolumeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalTargetVMSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalTargetVMSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalV2ISourceVMSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalV2ISourceVMSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalVCBSourceVMSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalVCBSourceVMSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalVirtualDiskSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalVirtualDiskSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalVMOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalVMOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalVmSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalVmSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalVMwareSourceVMSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalVMwareSourceVMSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalVolumeBlockCloningOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalVolumeBlockCloningOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalVolumeCloningOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalVolumeCloningOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalVolumeFileCloningOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalVolumeFileCloningOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalVolumeMapping");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalVolumeMapping.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalVolumeMappingNT");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalVolumeMappingNT.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalVolumeMappingW2K");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalVolumeMappingW2K.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalVpcLocalVmSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalVpcLocalVmSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalVPCSourceVMSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalVPCSourceVMSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentInternalWindowsOsInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentInternalWindowsOsInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentLoginWithCertificateRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentLoginWithCertificateRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentManagerAgentDeploymentResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentManagerAgentDeploymentResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentManagerDeploymentStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentManagerDeploymentStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentPassDiskTicketsRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentPassDiskTicketsRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentQueryRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentQueryRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentReconfigRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentReconfigRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentRegisterRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentRegisterRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentSysimgbaseSetResponseRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentSysimgbaseSetResponseRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentUninstallFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentUninstallFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentUnregisterRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentUnregisterRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterAgentValidateTargetRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterAgentValidateTargetRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterBadShareNameFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterBadShareNameFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterBaseConversionParamsUpdateSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterBaseConversionParamsUpdateSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterBasicHardwareInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterBasicHardwareInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterBasicHardwareParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterBasicHardwareParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterBitmapDriverStartFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterBitmapDriverStartFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterBootConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterBootConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterBootConfigInfoBcdEntryInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterBootConfigInfoBcdEntryInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterBootConfigInfoBootIniEntryInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterBootConfigInfoBootIniEntryInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterBootConfigInfoBootLoaderEntryInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterBootConfigInfoBootLoaderEntryInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterBootConfigInfoBootLoaderInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterBootConfigInfoBootLoaderInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterBootConfigInfoBootLoaderLocationInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterBootConfigInfoBootLoaderLocationInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterBootConfigInfoBootLoaderType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterBootConfigInfoBootLoaderType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterBootConfigInfoGrubEntryInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterBootConfigInfoGrubEntryInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCancel");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCancel.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCancelTaskRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCancelTaskRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCannotCreateVmSpecParser");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCannotCreateVmSpecParser.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCheckLicenseFeatureRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCheckLicenseFeatureRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCloneFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCloneFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterClonePreparationFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterClonePreparationFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCloneSynchronizationFileLevelFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCloneSynchronizationFileLevelFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCloneSynchronizationNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCloneSynchronizationNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCloningCapabilities");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCloningCapabilities.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCloningFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCloningFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCloningParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCloningParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterComputerHardwareInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterComputerHardwareInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterComputerInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterComputerInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterComputerOsInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterComputerOsInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterComputerOsInfoBootLoaderInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterComputerOsInfoBootLoaderInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterComputerOsInfoCapabilities");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterComputerOsInfoCapabilities.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterComputerOsInfoLogicalVolumeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterComputerOsInfoLogicalVolumeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterComputerOsInfoOsType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterComputerOsInfoOsType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterComputerOsInfoOsVersion");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterComputerOsInfoOsVersion.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterComputerOsInfoOsVersionOsDistribution");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterComputerOsInfoOsVersionOsDistribution.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterComputerOsInfoVolumeCloneFlags");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterComputerOsInfoVolumeCloneFlags.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterComputerSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpecComputerLocation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterComputerSpecComputerLocation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpecHostedVmLocation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterComputerSpecHostedVmLocation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpecHostedVmLocationVmType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterComputerSpecHostedVmLocationVmType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpecHyperVComputerLocation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterComputerSpecHyperVComputerLocation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpecLiveComputerLocation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterComputerSpecLiveComputerLocation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpecManagedVmLocation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterComputerSpecManagedVmLocation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpecThirdPartyHostedLocation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterComputerSpecThirdPartyHostedLocation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpecVmLocation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterComputerSpecVmLocation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterComputerSpecVMwareHostedVmLocation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterComputerSpecVMwareHostedVmLocation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterConfigOptionsInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterConfigOptionsInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterConfigOptionsInfoOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterConfigOptionsInfoOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterConfigureLicenseSourceRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterConfigureLicenseSourceRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterConnectedToHelperVmServerEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterConnectedToHelperVmServerEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterConnectingLiveIsoEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterConnectingLiveIsoEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterConnectingToHelperVmServerEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterConnectingToHelperVmServerEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings3() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:converter", "ConverterConnectingToHelperVmServerFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterConnectingToHelperVmServerFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterConnectionFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterConnectionFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterConversionParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterConversionParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterConversionRuntimeEnvironmentInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterConversionRuntimeEnvironmentInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterConverterCustomizationFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterConverterCustomizationFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterConverterFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterConverterFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterConverterFileFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterConverterFileFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterConverterManagerConvertResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterConverterManagerConvertResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterConverterSnapshotFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterConverterSnapshotFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterConverterWorkerVmCreationResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterConverterWorkerVmCreationResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterConverterWorkerWorkerCloningResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterConverterWorkerWorkerCloningResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterConverterWorkerWorkerCloningResultIncrementalP2VCloningResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterConverterWorkerWorkerCloningResultIncrementalP2VCloningResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCreateCollectorForEventsRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCreateCollectorForEventsRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCreateCollectorForJobsRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCreateCollectorForJobsRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCreateCollectorForTasksRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCreateCollectorForTasksRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCreateScheduledTaskRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCreateScheduledTaskRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCredentialsConflictFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCredentialsConflictFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationCanceledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationCanceledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationCheckingSysprepFilesEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationCheckingSysprepFilesEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationCompletedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationCompletedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationConnectingToTargetVmEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationConnectingToTargetVmEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationCreatingDeploymentFileEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationCreatingDeploymentFileEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationDeployingSysprepFilesEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationDeployingSysprepFilesEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationFailedAlwaysGenerateSidOnLonghornEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationFailedAlwaysGenerateSidOnLonghornEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationFailedBootrunSetupErrorEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationFailedBootrunSetupErrorEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationFailedBothWorkgroupAndDomainSetEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationFailedBothWorkgroupAndDomainSetEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationFailedEncryptionNotSupportedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationFailedEncryptionNotSupportedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationFailedErrorCreatingDeploymentFileEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationFailedErrorCreatingDeploymentFileEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationFailedErrorDownloadingFileEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationFailedErrorDownloadingFileEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationFailedFileAccessErrorEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationFailedFileAccessErrorEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationFailedInvalidSysprepFilesEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationFailedInvalidSysprepFilesEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationFailedMissingParamEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationFailedMissingParamEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationFailedNicConfigurationEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationFailedNicConfigurationEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationFailedNoPermissionsEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationFailedNoPermissionsEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationFailedNoTargetEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationFailedNoTargetEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationFailedNoWindowsDirectoryEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationFailedNoWindowsDirectoryEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationFailedOnlyIpOrSubnetMaskSetEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationFailedOnlyIpOrSubnetMaskSetEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationFailedOptionNotSupportedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationFailedOptionNotSupportedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationFailedOptionRequiredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationFailedOptionRequiredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationFailedOptionValueNotSupportedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationFailedOptionValueNotSupportedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationFailedUnableToOpenTargetEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationFailedUnableToOpenTargetEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationFailedUnsupportedGuestOsVersionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationFailedUnsupportedGuestOsVersionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationInstallingVMwareToolsEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationInstallingVMwareToolsEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationNoActionRequiredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationNoActionRequiredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationOsInfoFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationOsInfoFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationRemovingSystemRestoreCompletedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationRemovingSystemRestoreCompletedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationSetDefaultWorkgroupEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationSetDefaultWorkgroupEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationStartedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationStartedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationStartingGuestOsCustomizationEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationStartingGuestOsCustomizationEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationStartingRemovingSystemRestoreEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationStartingRemovingSystemRestoreEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterCustomizationSysprepFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterCustomizationSysprepFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDatastoreNotAccessibleFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDatastoreNotAccessibleFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDatastoreReadOnlyFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDatastoreReadOnlyFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDefaultConversionParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDefaultConversionParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDefaultConversionParamsResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDefaultConversionParamsResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDefaultVMReconfigurationParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDefaultVMReconfigurationParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDefaultVMReconfigurationParamsResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDefaultVMReconfigurationParamsResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDeleteBitmapFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDeleteBitmapFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDeleteTaskLogBundleRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDeleteTaskLogBundleRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDescriptionTooLong");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDescriptionTooLong.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDestroyCollectorRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDestroyCollectorRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDeviceAccessDenied");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDeviceAccessDenied.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDiagnosticManagerBundleContent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDiagnosticManagerBundleContent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDiagnosticManagerBundleFormat");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDiagnosticManagerBundleFormat.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDiagnosticManagerTaskLogBundleInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDiagnosticManagerTaskLogBundleInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDiskAttachPoint");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDiskAttachPoint.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDiskAttachPointControllerType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDiskAttachPointControllerType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDiskClonedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDiskClonedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDiskCloneEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDiskCloneEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDiskCloneFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDiskCloneFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDiskCloningEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDiskCloningEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDiskLibConnectionFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDiskLibConnectionFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDiskLockFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDiskLockFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDiskTicketDispatcherDiskTicketInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDiskTicketDispatcherDiskTicketInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterDiskTicketDispatcherDiskTicketRequest");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterDiskTicketDispatcherDiskTicketRequest.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterEfiFirmwareFoundFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterEfiFirmwareFoundFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterEstimateTimeToCompleteRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterEstimateTimeToCompleteRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterEstimationResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterEstimationResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterEvaluationLicenseSource");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterEvaluationLicenseSource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterEventDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterEventDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterEventFilterSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterEventFilterSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterEventFilterSpecByTime");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterEventFilterSpecByTime.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterEventFilterSpecByUsername");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterEventFilterSpecByUsername.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterEventType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterEventType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterFileClonedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterFileClonedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterFileCloneEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterFileCloneEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterFileCloneFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterFileCloneFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterFileCloningEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterFileCloningEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterFileCreationFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterFileCreationFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterFileIOFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterFileIOFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterFileNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterFileNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterFileRemovalFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterFileRemovalFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterFirstRunAlreadyStartedFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterFirstRunAlreadyStartedFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterFolderNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterFolderNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterFormatFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterFormatFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings4() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:converter", "ConverterGeneralEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGeneralEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterGenerateJobLogBundleRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGenerateJobLogBundleRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterGenerateLogBundleRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGenerateLogBundleRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterGenerateTaskLogBundleRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGenerateTaskLogBundleRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterGetChildTaskRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGetChildTaskRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterGetScheduledTaskRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGetScheduledTaskRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterGetSupportedConfigOptionsForManagedRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGetSupportedConfigOptionsForManagedRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterGetSupportedConversionSourcesRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGetSupportedConversionSourcesRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterGetSupportedReconfigurationSourcesRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGetSupportedReconfigurationSourcesRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterGetSupportedTargetsRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGetSupportedTargetsRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterGetTaskInfoRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGetTaskInfoRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterGetTaskSpecRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGetTaskSpecRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterGetVMReconfigurationDefaultsRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGetVMReconfigurationDefaultsRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterGptDiskFoundFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterGptDiskFoundFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHelperConvertRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHelperConvertRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHelperLoginRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHelperLoginRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHelperLogoutRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHelperLogoutRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHelperRetrieveServiceContentRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHelperRetrieveServiceContentRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHelperServiceContent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHelperServiceContent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHelperVmConnectionToSourceFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHelperVmConnectionToSourceFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHelperVmFailedToBootupFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHelperVmFailedToBootupFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHelperVmFailedToObtainIpFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHelperVmFailedToObtainIpFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHelperVmInternalFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHelperVmInternalFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHelperVmNetworkParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHelperVmNetworkParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHelperVmNetworkParamsIpv6ConfigType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHelperVmNetworkParamsIpv6ConfigType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHelperVmNetworkParamsStaticIpv6NetworkParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHelperVmNetworkParamsStaticIpv6NetworkParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHelperVmNetworkParamsStaticNetworkParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHelperVmNetworkParamsStaticNetworkParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHelperVmStaticIpInUseFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHelperVmStaticIpInUseFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHelperVmStaticIpInvalidFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHelperVmStaticIpInvalidFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHostAccessRestrictedFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHostAccessRestrictedFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHostConnectedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHostConnectedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHostConnectFailedAuthenticationEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHostConnectFailedAuthenticationEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHostConnectFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHostConnectFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHostConnectNoPermissionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHostConnectNoPermissionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHostDisconnectedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHostDisconnectedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHostEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHostEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHyperVFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHyperVFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHyperVInvalidInput");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHyperVInvalidInput.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHyperVInventoryInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHyperVInventoryInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHyperVInventoryInfoHyperVInventoryVirtualMachineItem");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHyperVInventoryInfoHyperVInventoryVirtualMachineItem.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHyperVInventoryInfoHyperVInventoryVirtualMachineItemPowerState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHyperVInventoryInfoHyperVInventoryVirtualMachineItemPowerState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHyperVInventoryQueryFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHyperVInventoryQueryFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHyperVNotSupportedFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHyperVNotSupportedFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterHyperVWMIFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterHyperVWMIFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImpersonateRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImpersonateRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImpersonationError");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImpersonationError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImportDestination64BitSupportFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImportDestination64BitSupportFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImportDestinationEfiSupportFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImportDestinationEfiSupportFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImportDestinationFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImportDestinationFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImportDestinationHostDisconnectedFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImportDestinationHostDisconnectedFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImportDestinationHostMaintenanceModeFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImportDestinationHostMaintenanceModeFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImportDestinationNoDatastoreFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImportDestinationNoDatastoreFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImportDestinationNoHostFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImportDestinationNoHostFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImportDestinationNoInventoryFolderFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImportDestinationNoInventoryFolderFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImportDestinationNoResourcePoolFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImportDestinationNoResourcePoolFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImportDestinationVMAlreadyExists");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImportDestinationVMAlreadyExists.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImportSourceFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImportSourceFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImportSourceInvalidConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImportSourceInvalidConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImportSourceLiveNotAdmin");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImportSourceLiveNotAdmin.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImportSourceNoPermission");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImportSourceNoPermission.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImportSourceNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImportSourceNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImportSourceNotRecognized");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImportSourceNotRecognized.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImportSourcePoweredOnFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImportSourcePoweredOnFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImportSourceSuspendedFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImportSourceSuspendedFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImportSourceV2iPassword");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImportSourceV2IPassword.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImportSourceVCBNoCatalog");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImportSourceVCBNoCatalog.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterImportSourceWrongPassword");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterImportSourceWrongPassword.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterIncompatibilityFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterIncompatibilityFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterIncorrectCredentialsFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterIncorrectCredentialsFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterIncrementalP2VCloningParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterIncrementalP2VCloningParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterInstallAgentRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterInstallAgentRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterInstallingAgentOnHostEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterInstallingAgentOnHostEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterInsufficientDiskSpace");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterInsufficientDiskSpace.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterInsufficientHostedDiskSpace");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterInsufficientHostedDiskSpace.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterInsufficientIdeAttachPoints");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterInsufficientIdeAttachPoints.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterInsufficientManagedDiskSpace");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterInsufficientManagedDiskSpace.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterInsufficientMassStorageBusAttachPoints");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterInsufficientMassStorageBusAttachPoints.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterInsufficientScsiAttachPoints");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterInsufficientScsiAttachPoints.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterInvalidTargetProductVersion");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterInvalidTargetProductVersion.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterInvalidVhdFile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterInvalidVhdFile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterInvalidWorkgroupComputerNameFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterInvalidWorkgroupComputerNameFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterIoError");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterIoError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterJobDeactivationFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterJobDeactivationFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterJobFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterJobFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterJobHasActiveTaskFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterJobHasActiveTaskFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterLicenseFeatureInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterLicenseFeatureInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterLicenseInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterLicenseInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterLicenseManagerLicenseKey");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterLicenseManagerLicenseKey.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterLicenseSource");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterLicenseSource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterLinuxPartitioningFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterLinuxPartitioningFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterLocalLicenseSource");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterLocalLicenseSource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterLoginExtensionRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterLoginExtensionRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterLoginRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterLoginRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterLoginSessionRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterLoginSessionRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterLogoutRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterLogoutRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterMalformedDiskFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterMalformedDiskFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterManagedDiskOpenFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterManagedDiskOpenFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterManagedEntityStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterManagedEntityStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterMemoryNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterMemoryNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterMissingConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterMissingConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings5() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNetworkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNetworkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNetworkInfoHostedNicInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNetworkInfoHostedNicInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNetworkInfoHostedNicInfoConnectionType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNetworkInfoHostedNicInfoConnectionType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNetworkInfoLiveNicInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNetworkInfoLiveNicInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNetworkInfoManagedNicInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNetworkInfoManagedNicInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNetworkInfoManagedNicInfoNicControllerType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNetworkInfoManagedNicInfoNicControllerType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNetworkInfoNicInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNetworkInfoNicInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNetworkParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNetworkParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNetworkParamsHostedNicParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNetworkParamsHostedNicParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNetworkParamsManagedNicParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNetworkParamsManagedNicParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNetworkParamsNicParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNetworkParamsNicParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNetworkShareConnectFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNetworkShareConnectFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNetworkShareNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNetworkShareNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNfcConnectionFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNfcConnectionFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNoAttachPointForCdromMigratedToIde");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNoAttachPointForCdromMigratedToIde.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNoAttachPointForDiskMigratedToScsi");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNoAttachPointForDiskMigratedToScsi.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNoDefaultDatastoreFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNoDefaultDatastoreFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNoDefaultHostFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNoDefaultHostFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNoHostConnection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNoHostConnection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNoHostConnectionFromAgent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNoHostConnectionFromAgent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNoHotfixPrerequisiteFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNoHotfixPrerequisiteFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNoLocalAgent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNoLocalAgent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNoPermissionForConnection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNoPermissionForConnection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNoRemoteAgent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNoRemoteAgent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNotSupportedAgent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNotSupportedAgent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNotSupportedConnection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNotSupportedConnection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNotSupportedVolume");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNotSupportedVolume.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNoWritePermissionOnFolder");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNoWritePermissionOnFolder.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNumCoresNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNumCoresNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNumCPUNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNumCPUNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterNumSocketsNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterNumSocketsNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterObtainHelperVmIpFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterObtainHelperVmIpFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterParamsAgentCloningParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterParamsAgentCloningParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterParamsAgentCustomizationParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterParamsAgentCustomizationParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterParamsStorageMapping");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterParamsStorageMapping.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterParamsStorageMappingDiskMapping");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterParamsStorageMappingDiskMapping.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterParamsStorageMappingHashDiskInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterParamsStorageMappingHashDiskInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterParamsStorageMappingVolumeMapping");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterParamsStorageMappingVolumeMapping.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterParamValidationError");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterParamValidationError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPartitioningFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPartitioningFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPlatformError");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPlatformError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPoweredOnEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPoweredOnEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPoweringOnEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPoweringOnEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPoweringOnHelperVmEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPoweringOnHelperVmEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPowerOnEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPowerOnEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPowerOnFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPowerOnFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPowerOnFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPowerOnFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPreserveDriveLettersFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPreserveDriveLettersFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPreserveDriveLettersNotNeededEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPreserveDriveLettersNotNeededEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPreservingDriveLettersEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPreservingDriveLettersEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoCustomizeNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoCustomizeNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoCustomizeRebootTarget");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoCustomizeRebootTarget.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoFileTooLarge");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoFileTooLarge.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoFlatSparseDiskTypeExplanation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoFlatSparseDiskTypeExplanation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoForceTwoGBSplitDisks");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoForceTwoGBSplitDisks.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoInsufficientSpaceError");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoInsufficientSpaceError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoInsufficientSpaceWarning");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoInsufficientSpaceWarning.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoMultiToMultiCpu");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoMultiToMultiCpu.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoMultiToMultiCpuLinux");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoMultiToMultiCpuLinux.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoMultiToSingleCpu");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoMultiToSingleCpu.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoMultiToSingleCpuLinux");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoMultiToSingleCpuLinux.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoMultiToSingleCpuWindows");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoMultiToSingleCpuWindows.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoMultiToSingleCpuWindowsNT");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoMultiToSingleCpuWindowsNT.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoNumCpuMismatch");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoNumCpuMismatch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoPowerOffSourceNotLive");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoPowerOffSourceNotLive.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoPowerOffSourceNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoPowerOffSourceNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoPowerOnTargetNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoPowerOnTargetNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoReconfigExplanation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoReconfigExplanation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoReconfigNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoReconfigNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoRemoveRestorePoints");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoRemoveRestorePoints.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoSeverityLevel");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoSeverityLevel.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoSingleToMultiCpu");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoSingleToMultiCpu.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoSingleToMultiCpuLinux");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoSingleToMultiCpuLinux.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoSingleToMultiCpuWindows2000");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoSingleToMultiCpuWindows2000.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoSkipUnwantedFilesNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoSkipUnwantedFilesNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoStopServicesNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoStopServicesNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoSynchronizationNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoSynchronizationNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoSysprepNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoSysprepNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoToolsNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoToolsNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoToolsRebootTarget");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoToolsRebootTarget.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoUnableToCalculateFreeSpace");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoUnableToCalculateFreeSpace.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterPropertyInfoVolumeBasedSkipResize");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterPropertyInfoVolumeBasedSkipResize.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterQueryBootableSnapshotsRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterQueryBootableSnapshotsRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterQueryEventsRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterQueryEventsRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterQueryFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterQueryFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterQueryHyperVInventoryRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterQueryHyperVInventoryRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterQueryManagerAgentAvailabilityResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterQueryManagerAgentAvailabilityResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterQueryRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterQueryRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReadNextConversionJobsRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReadNextConversionJobsRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReadNextEventsRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReadNextEventsRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReadNextTasksRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReadNextTasksRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReadPreviousConversionJobsRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReadPreviousConversionJobsRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReadPreviousEventsRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReadPreviousEventsRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReadPreviousTasksRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReadPreviousTasksRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterRebootingAgentMachineEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterRebootingAgentMachineEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterRebootMachineRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterRebootMachineRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigPrerequisites");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigPrerequisites.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings6() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigPrerequisitesFileToUpdateInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigPrerequisitesFileToUpdateInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigPrerequisitesHotfixInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigPrerequisitesHotfixInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigPrerequisitesHotfixType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigPrerequisitesHotfixType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigurationApplyingReconfigurations");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigurationApplyingReconfigurations.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigurationCanceledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigurationCanceledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigurationCompletedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigurationCompletedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigurationEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigurationEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigurationFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigurationFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigurationFailedHotfixErrorEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigurationFailedHotfixErrorEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigurationFailedNoPermissionsEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigurationFailedNoPermissionsEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigurationFailedNoTargetEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigurationFailedNoTargetEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigurationFailedNoWindowsDirectoryEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigurationFailedNoWindowsDirectoryEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigurationFailedUnableToLoadReconfigurationDatastoreEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigurationFailedUnableToLoadReconfigurationDatastoreEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigurationFailedUnableToOpenTargetEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigurationFailedUnableToOpenTargetEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigurationFailedVstor2NotRunningEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigurationFailedVstor2NotRunningEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigurationFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigurationFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigurationNoActiveVolumeFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigurationNoActiveVolumeFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigurationNoSystemVolumeFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigurationNoSystemVolumeFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigurationProcessingReconfigurationDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigurationProcessingReconfigurationDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigurationSkippedNoSystemVolumeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigurationSkippedNoSystemVolumeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigurationStartedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigurationStartedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigurationUnsupportedOsFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigurationUnsupportedOsFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterReconfigureScheduledTaskRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterReconfigureScheduledTaskRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterResetCollectorRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterResetCollectorRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterRetrieveServiceContentRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterRetrieveServiceContentRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterRetrieveTaskLogBundleRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterRetrieveTaskLogBundleRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterRetrieveTaskLogBundleUrlRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterRetrieveTaskLogBundleUrlRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterRewindCollectorRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterRewindCollectorRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterRuntimeEnvironmentInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterRuntimeEnvironmentInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterScheduledTaskInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterScheduledTaskInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterScheduledTaskSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterScheduledTaskSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerContent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerContent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerContentVcServerInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerContentVcServerInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionConversionJobInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionConversionJobInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionConversionJobSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionConversionJobSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionConversionParamsUpdateSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionConversionParamsUpdateSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionJobUpdateConversionParamsRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionJobUpdateConversionParamsRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionManagerCreateJobRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionManagerCreateJobRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionManagerDestroyJobRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionManagerDestroyJobRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionManagerGetJobExtraInfoFromScheduledTaskRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionManagerGetJobExtraInfoFromScheduledTaskRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionManagerGetJobExtraInfoRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionManagerGetJobExtraInfoRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionManagerGetJobInfoFromScheduledTaskRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionManagerGetJobInfoFromScheduledTaskRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionManagerGetJobInfoRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionManagerGetJobInfoRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionManagerGetJobSpecFromScheduledTaskRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionManagerGetJobSpecFromScheduledTaskRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionManagerGetJobSpecRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionManagerGetJobSpecRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionP2VSourceModificationSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerConversionP2VSourceModificationSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerJobAbstractConversionBasedJobSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerJobAbstractConversionBasedJobSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerJobJobActiveTaskHandling");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerJobJobActiveTaskHandling.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerJobJobFilterSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerJobJobFilterSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerJobJobFilterSpecByTime");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerJobJobFilterSpecByTime.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerJobJobFilterSpecTimeOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerJobJobFilterSpecTimeOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerJobJobInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerJobJobInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerJobJobInfoState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerJobJobInfoState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerJobJobJobUpdateSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerJobJobJobUpdateSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerJobJobRunSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerJobJobRunSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerJobJobSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerJobJobSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerJobResumeRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerJobResumeRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerJobStopRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerJobStopRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerJobSuspendRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerJobSuspendRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerJobUpdateExtaInfoRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerJobUpdateExtaInfoRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerJobUpdateSpecRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerJobUpdateSpecRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerManagedEntityRenameRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerManagedEntityRenameRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServerStartedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServerStartedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServiceChangeRequest");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServiceChangeRequest.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServiceContent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServiceContent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServiceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServiceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServiceInfoServiceState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServiceInfoServiceState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterServiceStartType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterServiceStartType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSessionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSessionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSessionTerminatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSessionTerminatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSetCollectorPageSizeRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSetCollectorPageSizeRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSetLocaleRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSetLocaleRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSetMaxConnectionRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSetMaxConnectionRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSetMaxTaskRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSetMaxTaskRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterShutdownSourceMachineEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterShutdownSourceMachineEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterShutdownSourceMachineFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterShutdownSourceMachineFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterShutdownSourceMachineSkippedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterShutdownSourceMachineSkippedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSnapshotInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSnapshotInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSnapshotInfoBackupType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSnapshotInfoBackupType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSnapshotInfoSnapshotType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSnapshotInfoSnapshotType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSnapshotNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSnapshotNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSourceSnapshottingCompletedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSourceSnapshottingCompletedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSourceSnapshottingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSourceSnapshottingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSourceSnapshottingStartedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSourceSnapshottingStartedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSourceVmParsingFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSourceVmParsingFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSSLCertificateData");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSSLCertificateData.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSSLCertificateError");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSSLCertificateError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSSLConnectionFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSSLConnectionFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSSLVerificationFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSSLVerificationFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterStoppingServicesCanceledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterStoppingServicesCanceledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterStoppingServicesCompletedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterStoppingServicesCompletedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterStoppingServicesEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterStoppingServicesEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterStoppingServicesFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterStoppingServicesFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterStoppingServicesStartedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterStoppingServicesStartedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterStoppingSingleServiceFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterStoppingSingleServiceFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterStorageCraftSnapshotFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterStorageCraftSnapshotFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterStorageInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterStorageInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterStorageInfoDiskInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterStorageInfoDiskInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterStorageInfoVolumeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterStorageInfoVolumeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterStorageInfoVolumeInfoExtfsFeatures");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterStorageInfoVolumeInfoExtfsFeatures.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings7() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:converter", "ConverterStorageInfoVolumeInfoXfsFeatures");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterStorageInfoVolumeInfoXfsFeatures.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterStorageParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterStorageParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterStorageParamsCloningMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterStorageParamsCloningMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterStorageParamsDiskControllerType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterStorageParamsDiskControllerType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterStorageParamsDiskCreateType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterStorageParamsDiskCreateType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterStorageParamsHostedTargetDiskParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterStorageParamsHostedTargetDiskParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterStorageParamsManagedTargetDiskParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterStorageParamsManagedTargetDiskParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterStorageParamsTargetDiskParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterStorageParamsTargetDiskParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterStorageParamsVolumeCloningParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterStorageParamsVolumeCloningParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSupportedSources");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSupportedSources.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSupportedSourcesSourceType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSupportedSourcesSourceType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSupportedTargets");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSupportedTargets.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSupportedTargetsProductType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSupportedTargetsProductType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSysimgbaseProxySysimgbaseRequest");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSysimgbaseProxySysimgbaseRequest.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSysinfoQueryAuthenticationFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSysinfoQueryAuthenticationFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSysinfoQueryBadThumbprintFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSysinfoQueryBadThumbprintFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSysinfoQueryConnRefusedFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSysinfoQueryConnRefusedFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSysinfoQueryConnTimedOutFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSysinfoQueryConnTimedOutFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSysinfoQueryFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSysinfoQueryFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSysinfoQueryInvalidHostNameFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSysinfoQueryInvalidHostNameFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSysinfoQueryInvalidIpFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSysinfoQueryInvalidIpFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSysinfoQueryLinuxFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSysinfoQueryLinuxFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSysinfoQueryNetworkUnreachFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSysinfoQueryNetworkUnreachFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSysinfoQueryNoBootDirFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSysinfoQueryNoBootDirFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSysinfoQueryNotRootFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSysinfoQueryNotRootFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSysinfoQuerySolarisFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSysinfoQuerySolarisFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSysinfoQueryStorageNotFoundFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSysinfoQueryStorageNotFoundFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSysinfoQueryUnrecognizedBootLoaderFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSysinfoQueryUnrecognizedBootLoaderFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSysinfoQueryWithSudoLinuxFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSysinfoQueryWithSudoLinuxFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSysinfoQueryWithSudoSolarisFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSysinfoQueryWithSudoSolarisFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSysprepUnSupportedGuestFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSysprepUnSupportedGuestFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSysprepUploadFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSysprepUploadFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSystemRebootFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSystemRebootFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterSystemShutdownFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterSystemShutdownFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterTargetSnapshotFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTargetSnapshotFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterTargetVMManagerCreateVMRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTargetVMManagerCreateVMRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterTargetVmParsingFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTargetVmParsingFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterTargetVmRemoveFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTargetVmRemoveFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterTargetVmSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTargetVmSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterTargetVmSpecHostedVmLocation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTargetVmSpecHostedVmLocation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterTargetVmSpecManagedVmLocation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTargetVmSpecManagedVmLocation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterTargetVmSpecProductVersion");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTargetVmSpecProductVersion.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterTargetVmSpecVmLocation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTargetVmSpecVmLocation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterTaskDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTaskDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterTaskEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTaskEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterTaskFilterSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTaskFilterSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterTaskFilterSpecByTime");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTaskFilterSpecByTime.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterTaskFilterSpecByUsername");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTaskFilterSpecByUsername.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterTaskFilterSpecTimeOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTaskFilterSpecTimeOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterTaskInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTaskInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterTaskInfoState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTaskInfoState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterTaskSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTaskSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterTerminateSessionRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTerminateSessionRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterThinProvisioningNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterThinProvisioningNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterThrottlingParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterThrottlingParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterThrottlingParamsCpuThrottling");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterThrottlingParamsCpuThrottling.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterThrottlingParamsUpdateSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterThrottlingParamsUpdateSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterTooManyDisks");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTooManyDisks.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterTransactionParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterTransactionParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnableToAccessRegistry");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnableToAccessRegistry.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnableToGetFreeSpace");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnableToGetFreeSpace.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUninstallAgentFromHostFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUninstallAgentFromHostFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUninstallAgentFromHostSkippedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUninstallAgentFromHostSkippedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUninstallAgentRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUninstallAgentRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUninstallingAgentFromHostEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUninstallingAgentFromHostEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VCreateEfiBootEntryEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VCreateEfiBootEntryEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VCreateEfiBootEntryFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VCreateEfiBootEntryFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VDiskFormatFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VDiskFormatFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VDiskFormattingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VDiskFormattingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VDiskPartitionFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VDiskPartitionFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VDiskPartitioningEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VDiskPartitioningEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VFstabPatchingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VFstabPatchingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VGrubPatchingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VGrubPatchingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VInitrdPatchingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VInitrdPatchingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VNetworkPatchingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VNetworkPatchingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VNetworkPatchingFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VNetworkPatchingFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VReconfiguredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VReconfiguredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VReconfigureFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VReconfigureFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VReconfiguringEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VReconfiguringEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VUserScriptCompletedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VUserScriptCompletedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VUserScriptFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VUserScriptFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VUserScriptStartedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VUserScriptStartedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VVolumeClonedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VVolumeClonedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VVolumeCloneEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VVolumeCloneEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VVolumeCloneFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VVolumeCloneFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnixP2VVolumeCloningEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnixP2VVolumeCloningEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnsupportedDiskSizeForHWv");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnsupportedDiskSizeForHWv.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUnsupportedDiskTypeForHosted");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUnsupportedDiskTypeForHosted.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUpdateBcdFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUpdateBcdFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUpdateBcdNotNeededEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUpdateBcdNotNeededEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUpdateBootIniFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUpdateBootIniFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUpdateBootIniNotNeededEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUpdateBootIniNotNeededEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUpdateBootSectorsDiskInfoFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUpdateBootSectorsDiskInfoFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUpdatingBcdEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUpdatingBcdEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUpdatingBootIniEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUpdatingBootIniEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUpdatingBootSectorsEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUpdatingBootSectorsEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUserAlreadyAuthenticatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUserAlreadyAuthenticatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUserFailedAuthenticationEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUserFailedAuthenticationEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUserLoginEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUserLoginEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings8() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUserLogoutEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUserLogoutEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUserNoPermissionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUserNoPermissionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterUserSession");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterUserSession.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterV2iFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterV2IFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterValidateAgentAvailabilityRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterValidateAgentAvailabilityRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterValidateParamsRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterValidateParamsRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterValidateTargetAndGetDefaultsRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterValidateTargetAndGetDefaultsRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterValidateTargetRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterValidateTargetRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterValidateTargetStorageParamsRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterValidateTargetStorageParamsRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterValidationReport");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterValidationReport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterValidationResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterValidationResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVimConnectionSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVimConnectionSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVimConnectionSpecExtensionServiceCredentials");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVimConnectionSpecExtensionServiceCredentials.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVimConnectionSpecLoginVimCredentials");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVimConnectionSpecLoginVimCredentials.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVimConnectionSpecSessionVimCredentials");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVimConnectionSpecSessionVimCredentials.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVimConnectionSpecVimCredentials");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVimConnectionSpecVimCredentials.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVimSdkFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVimSdkFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVmCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVmCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVmCreateFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVmCreateFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVmCreationFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVmCreationFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVmEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVmEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVmParseFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVmParseFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVMReconfigurationCapabilities");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVMReconfigurationCapabilities.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVmRemovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVmRemovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVolumeBlockLevelCloningBadBlockEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVolumeBlockLevelCloningBadBlockEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVolumeBlockLevelCloningBitmapDeleteFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVolumeBlockLevelCloningBitmapDeleteFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVolumeBlockLevelCloningBitmapMergeFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVolumeBlockLevelCloningBitmapMergeFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVolumeBlockLevelCloningBitmapsIncompatibleEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVolumeBlockLevelCloningBitmapsIncompatibleEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVolumeBlockLevelCloningNoBitmapsActiveEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVolumeBlockLevelCloningNoBitmapsActiveEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVolumeBlockLevelCloningStartedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVolumeBlockLevelCloningStartedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVolumeBlockLevelCloningSynchronizationStartedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVolumeBlockLevelCloningSynchronizationStartedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVolumeCloningCanceledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVolumeCloningCanceledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVolumeCloningCompletedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVolumeCloningCompletedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVolumeCloningEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVolumeCloningEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVolumeCloningFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVolumeCloningFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVolumeCloningFailedNoFileLevelCloningEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVolumeCloningFailedNoFileLevelCloningEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVolumeCloningFailedNoFileLevelCloningForP2VMotionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVolumeCloningFailedNoFileLevelCloningForP2VMotionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVolumeCloningFailedSourceIsLargerEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVolumeCloningFailedSourceIsLargerEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVolumeCloningStartedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVolumeCloningStartedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVolumeFileLevelCloningNetworkThrottlingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVolumeFileLevelCloningNetworkThrottlingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVolumeFileLevelCloningSkippedFileBadBlockEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVolumeFileLevelCloningSkippedFileBadBlockEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVolumeFileLevelCloningSkippedFileEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVolumeFileLevelCloningSkippedFileEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVolumeFileLevelCloningSkippedFileLockedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVolumeFileLevelCloningSkippedFileLockedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVolumeFileLevelCloningStartedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVolumeFileLevelCloningStartedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVSSSnapshotFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVSSSnapshotFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVSSSnapshotInsufficientStorage");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVSSSnapshotInsufficientStorage.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVSSSnapshotMaxReachedFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVSSSnapshotMaxReachedFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVSSSnapshotVolumeNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVSSSnapshotVolumeNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterVstor2NotRunning");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterVstor2NotRunning.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterWaitingForHelperVmEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterWaitingForHelperVmEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterWaitingForHelperVmFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterWaitingForHelperVmFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterWorkerContent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterWorkerContent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterWorkerConvertRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterWorkerConvertRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterWorkerDeleteBitmapRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterWorkerDeleteBitmapRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:converter", "ConverterWorkerEstimateTimeToCompleteRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConverterWorkerEstimateTimeToCompleteRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AboutInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AboutInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AccountCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AccountCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AccountRemovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AccountRemovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AccountUpdatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AccountUpdatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "Action");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.Action.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ActionParameter");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ActionParameter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ActionType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ActionType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ActiveDirectoryFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ActiveDirectoryFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ActiveDirectoryProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ActiveDirectoryProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ActiveVMsBlockingEVC");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ActiveVMsBlockingEVC.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AdminDisabled");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AdminDisabled.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AdminNotDisabled");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AdminNotDisabled.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AdminPasswordNotChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AdminPasswordNotChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AffinityConfigured");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AffinityConfigured.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AffinityType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AffinityType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AfterStartupTaskScheduler");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AfterStartupTaskScheduler.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AgentInstallFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AgentInstallFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AgentInstallFailedReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AgentInstallFailedReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmAcknowledgedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmAcknowledgedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmActionTriggeredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmActionTriggeredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmClearedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmClearedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmEmailCompletedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmEmailCompletedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmEmailFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmEmailFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmExpression");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmExpression.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmReconfiguredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmReconfiguredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmRemovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmRemovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmScriptCompleteEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmScriptCompleteEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmScriptFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmScriptFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmSetting");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmSetting.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmSnmpCompletedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmSnmpCompletedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmSnmpFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmSnmpFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmStatusChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmStatusChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmTriggeringAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmTriggeringAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlarmTriggeringActionTransitionSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlarmTriggeringActionTransitionSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AllVirtualMachinesLicensedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AllVirtualMachinesLicensedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlreadyAuthenticatedSessionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlreadyAuthenticatedSessionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlreadyBeingManaged");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlreadyBeingManaged.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings9() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "AlreadyConnected");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlreadyConnected.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlreadyExists");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlreadyExists.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AlreadyUpgraded");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AlreadyUpgraded.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AndAlarmExpression");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AndAlarmExpression.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AnswerFile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AnswerFile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AnswerFileCreateSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AnswerFileCreateSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AnswerFileOptionsCreateSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AnswerFileOptionsCreateSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AnswerFileSerializedCreateSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AnswerFileSerializedCreateSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AnswerFileStatusError");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AnswerFileStatusError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AnswerFileStatusResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AnswerFileStatusResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AnswerFileUpdateFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AnswerFileUpdateFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AnswerFileUpdateFailure");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AnswerFileUpdateFailure.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ApplicationQuiesceFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ApplicationQuiesceFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ApplyProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ApplyProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ApplyStorageRecommendationResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ApplyStorageRecommendationResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfAlarmAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfAlarmAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfAlarmExpression");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfAlarmExpression.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfAlarmState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfAlarmState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfAlarmTriggeringActionTransitionSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfAlarmTriggeringActionTransitionSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfAnswerFileStatusError");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfAnswerFileStatusError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfAnswerFileStatusResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfAnswerFileStatusResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfAnswerFileUpdateFailure");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfAnswerFileUpdateFailure.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfAnyType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfAnyType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfAnyURI");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfAnyURI.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfApplyProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfApplyProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfAuthorizationPrivilege");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfAuthorizationPrivilege.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfAuthorizationRole");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfAuthorizationRole.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfAutoStartPowerInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfAutoStartPowerInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfBoolean");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfBoolean.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfByte");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfByte.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfCheckResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfCheckResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterActionHistory");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterActionHistory.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterAttemptedVmInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterAttemptedVmInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterDasAamNodeState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterDasAamNodeState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterDasFailoverLevelAdvancedRuntimeInfoVmSlots");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterDasFailoverLevelAdvancedRuntimeInfoVmSlots.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterDasVmConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterDasVmConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterDasVmConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterDasVmConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterDpmHostConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterDpmHostConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterDpmHostConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterDpmHostConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterDrsFaults");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterDrsFaults.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterDrsFaultsFaultsByVm");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterDrsFaultsFaultsByVm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterDrsMigration");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterDrsMigration.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterDrsRecommendation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterDrsRecommendation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterDrsVmConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterDrsVmConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterDrsVmConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterDrsVmConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterEVCManagerCheckResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterEVCManagerCheckResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterFailoverHostAdmissionControlInfoHostStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterFailoverHostAdmissionControlInfoHostStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterGroupInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterGroupInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterGroupSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterGroupSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterHostRecommendation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterHostRecommendation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterIoFilterInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterIoFilterInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterNotAttemptedVmInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterNotAttemptedVmInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterRecommendation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterRecommendation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterRuleInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterRuleInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfClusterRuleSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfClusterRuleSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfComplianceFailure");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfComplianceFailure.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfComplianceLocator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfComplianceLocator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfComplianceResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfComplianceResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfComputeResourceHostSPBMLicenseInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfComputeResourceHostSPBMLicenseInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfConflictingConfigurationConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfConflictingConfigurationConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfCustomFieldDef");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfCustomFieldDef.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfCustomFieldValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfCustomFieldValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfCustomizationAdapterMapping");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfCustomizationAdapterMapping.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfCustomizationIpV6Generator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfCustomizationIpV6Generator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfCustomizationSpecInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfCustomizationSpecInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDasHeartbeatDatastoreInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDasHeartbeatDatastoreInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDatacenterMismatchArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDatacenterMismatchArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDatastoreHostMount");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDatastoreHostMount.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDatastoreMountPathDatastorePair");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDatastoreMountPathDatastorePair.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDiagnosticManagerBundleInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDiagnosticManagerBundleInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDiagnosticManagerLogDescriptor");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDiagnosticManagerLogDescriptor.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDiskChangeExtent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDiskChangeExtent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDistributedVirtualPort");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDistributedVirtualPort.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDistributedVirtualPortgroupInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDistributedVirtualPortgroupInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDistributedVirtualSwitchHostMember");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDistributedVirtualSwitchHostMember.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDistributedVirtualSwitchHostMemberConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDistributedVirtualSwitchHostMemberConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDistributedVirtualSwitchHostMemberPnicSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDistributedVirtualSwitchHostMemberPnicSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDistributedVirtualSwitchHostProductSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDistributedVirtualSwitchHostProductSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDistributedVirtualSwitchInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDistributedVirtualSwitchInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDistributedVirtualSwitchKeyedOpaqueBlob");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDistributedVirtualSwitchKeyedOpaqueBlob.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDistributedVirtualSwitchManagerCompatibilityResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDistributedVirtualSwitchManagerCompatibilityResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDistributedVirtualSwitchManagerHostDvsFilterSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDistributedVirtualSwitchManagerHostDvsFilterSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDistributedVirtualSwitchProductSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDistributedVirtualSwitchProductSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDouble");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDouble.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDVPortConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDVPortConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDVPortgroupConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDVPortgroupConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDvsApplyOperationFaultFaultOnObject");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDvsApplyOperationFaultFaultOnObject.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDvsFilterConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDvsFilterConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDVSHealthCheckConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDVSHealthCheckConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDvsHostInfrastructureTrafficResource");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDvsHostInfrastructureTrafficResource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDvsHostVNicProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDvsHostVNicProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDVSNetworkResourcePool");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDVSNetworkResourcePool.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDVSNetworkResourcePoolConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDVSNetworkResourcePoolConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDvsNetworkRuleQualifier");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDvsNetworkRuleQualifier.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDvsOperationBulkFaultFaultOnHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDvsOperationBulkFaultFaultOnHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDvsOutOfSyncHostArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDvsOutOfSyncHostArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDvsProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDvsProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDvsServiceConsoleVNicProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDvsServiceConsoleVNicProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings10() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDvsTrafficRule");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDvsTrafficRule.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDVSVmVnicNetworkResourcePool");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDVSVmVnicNetworkResourcePool.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDvsVmVnicNetworkResourcePoolRuntimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDvsVmVnicNetworkResourcePoolRuntimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDvsVmVnicResourcePoolConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDvsVmVnicResourcePoolConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDvsVnicAllocatedResource");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDvsVnicAllocatedResource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfDynamicProperty");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfDynamicProperty.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfElementDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfElementDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfEntityBackupConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfEntityBackupConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfEntityPrivilege");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfEntityPrivilege.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfEnumDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfEnumDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfEVCMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfEVCMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfEventAlarmExpressionComparison");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfEventAlarmExpressionComparison.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfEventArgDesc");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfEventArgDesc.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfEventDescriptionEventDetail");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfEventDescriptionEventDetail.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfExtendedEventPair");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfExtendedEventPair.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfExtension");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfExtension.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfExtensionClientInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfExtensionClientInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfExtensionEventTypeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfExtensionEventTypeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfExtensionFaultTypeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfExtensionFaultTypeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfExtensionManagerIpAllocationUsage");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfExtensionManagerIpAllocationUsage.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfExtensionPrivilegeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfExtensionPrivilegeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfExtensionResourceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfExtensionResourceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfExtensionServerInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfExtensionServerInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfExtensionTaskTypeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfExtensionTaskTypeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfExtManagedEntityInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfExtManagedEntityInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfExtSolutionManagerInfoTabInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfExtSolutionManagerInfoTabInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfFaultToleranceDiskSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfFaultToleranceDiskSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfFcoeConfigVlanRange");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfFcoeConfigVlanRange.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfFileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfFileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfFirewallProfileRulesetProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfFirewallProfileRulesetProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfGuestAliases");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfGuestAliases.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfGuestAuthAliasInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfGuestAuthAliasInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfGuestAuthSubject");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfGuestAuthSubject.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfGuestDiskInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfGuestDiskInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfGuestFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfGuestFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfGuestInfoNamespaceGenerationInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfGuestInfoNamespaceGenerationInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfGuestMappedAliases");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfGuestMappedAliases.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfGuestNicInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfGuestNicInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfGuestOsDescriptor");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfGuestOsDescriptor.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfGuestProcessInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfGuestProcessInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfGuestRegKeyRecordSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfGuestRegKeyRecordSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfGuestRegValueSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfGuestRegValueSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfGuestStackInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfGuestStackInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHbrManagerVmReplicationCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHbrManagerVmReplicationCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostAccessControlEntry");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostAccessControlEntry.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostAccountSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostAccountSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostActiveDirectory");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostActiveDirectory.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostAuthenticationStoreInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostAuthenticationStoreInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostBootDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostBootDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostCacheConfigurationInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostCacheConfigurationInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostConnectInfoNetworkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostConnectInfoNetworkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostCpuIdInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostCpuIdInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostCpuPackage");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostCpuPackage.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostDatastoreBrowserSearchResults");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostDatastoreBrowserSearchResults.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostDatastoreConnectInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostDatastoreConnectInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostDatastoreSystemDatastoreResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostDatastoreSystemDatastoreResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostDateTimeSystemTimeZone");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostDateTimeSystemTimeZone.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostDhcpService");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostDhcpService.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostDhcpServiceConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostDhcpServiceConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostDiagnosticPartition");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostDiagnosticPartition.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostDiagnosticPartitionCreateOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostDiagnosticPartitionCreateOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostDiskConfigurationResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostDiskConfigurationResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostDiskMappingPartitionOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostDiskMappingPartitionOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostDiskPartitionAttributes");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostDiskPartitionAttributes.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostDiskPartitionBlockRange");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostDiskPartitionBlockRange.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostDiskPartitionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostDiskPartitionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostFeatureCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostFeatureCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostFeatureMask");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostFeatureMask.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostFeatureVersionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostFeatureVersionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostFileSystemMountInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostFileSystemMountInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostFirewallConfigRuleSetConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostFirewallConfigRuleSetConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostFirewallRule");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostFirewallRule.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostFirewallRuleset");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostFirewallRuleset.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostFirewallRulesetIpNetwork");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostFirewallRulesetIpNetwork.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostGraphicsInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostGraphicsInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostHardwareElementInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostHardwareElementInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostHostBusAdapter");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostHostBusAdapter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostInternetScsiHbaIscsiIpv6Address");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostInternetScsiHbaIscsiIpv6Address.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostInternetScsiHbaParamValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostInternetScsiHbaParamValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostInternetScsiHbaSendTarget");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostInternetScsiHbaSendTarget.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostInternetScsiHbaStaticTarget");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostInternetScsiHbaStaticTarget.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostIoFilterInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostIoFilterInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostIpConfigIpV6Address");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostIpConfigIpV6Address.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostIpRouteEntry");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostIpRouteEntry.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostIpRouteOp");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostIpRouteOp.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostLowLevelProvisioningManagerDiskLayoutSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostLowLevelProvisioningManagerDiskLayoutSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostLowLevelProvisioningManagerFileDeleteResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostLowLevelProvisioningManagerFileDeleteResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostLowLevelProvisioningManagerFileDeleteSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostLowLevelProvisioningManagerFileDeleteSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostLowLevelProvisioningManagerFileReserveResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostLowLevelProvisioningManagerFileReserveResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostLowLevelProvisioningManagerFileReserveSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostLowLevelProvisioningManagerFileReserveSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostLowLevelProvisioningManagerSnapshotLayoutSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostLowLevelProvisioningManagerSnapshotLayoutSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostMemberHealthCheckResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostMemberHealthCheckResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostMemberRuntimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostMemberRuntimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostMultipathInfoLogicalUnit");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostMultipathInfoLogicalUnit.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostMultipathInfoPath");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostMultipathInfoPath.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostMultipathStateInfoPath");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostMultipathStateInfoPath.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostNasVolumeConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostNasVolumeConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings11() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostNatService");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostNatService.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostNatServiceConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostNatServiceConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostNatServicePortForwardSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostNatServicePortForwardSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostNetStackInstance");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostNetStackInstance.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostNetworkConfigNetStackSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostNetworkConfigNetStackSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostNumaNode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostNumaNode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostNumericSensorInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostNumericSensorInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostOpaqueNetworkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostOpaqueNetworkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostOpaqueSwitch");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostOpaqueSwitch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostOpaqueSwitchPhysicalNicZone");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostOpaqueSwitchPhysicalNicZone.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostPatchManagerStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostPatchManagerStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostPatchManagerStatusPrerequisitePatch");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostPatchManagerStatusPrerequisitePatch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostPathSelectionPolicyOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostPathSelectionPolicyOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostPciDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostPciDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostPciPassthruConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostPciPassthruConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostPciPassthruInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostPciPassthruInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostPlacedVirtualNicIdentifier");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostPlacedVirtualNicIdentifier.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostPlugStoreTopologyAdapter");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostPlugStoreTopologyAdapter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostPlugStoreTopologyDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostPlugStoreTopologyDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostPlugStoreTopologyPath");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostPlugStoreTopologyPath.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostPlugStoreTopologyPlugin");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostPlugStoreTopologyPlugin.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostPlugStoreTopologyTarget");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostPlugStoreTopologyTarget.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostPnicNetworkResourceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostPnicNetworkResourceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostPortGroup");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostPortGroup.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostPortGroupConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostPortGroupConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostPortGroupPort");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostPortGroupPort.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostPortGroupProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostPortGroupProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostPowerPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostPowerPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostProtocolEndpoint");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostProtocolEndpoint.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostProxySwitch");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostProxySwitch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostProxySwitchConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostProxySwitchConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostProxySwitchHostLagConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostProxySwitchHostLagConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostRuntimeInfoNetStackInstanceRuntimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostRuntimeInfoNetStackInstanceRuntimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostScsiDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostScsiDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostScsiDiskPartition");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostScsiDiskPartition.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostScsiTopologyInterface");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostScsiTopologyInterface.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostScsiTopologyLun");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostScsiTopologyLun.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostScsiTopologyTarget");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostScsiTopologyTarget.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostService");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostService.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostServiceConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostServiceConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostSnmpDestination");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostSnmpDestination.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostSslThumbprintInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostSslThumbprintInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostStorageArrayTypePolicyOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostStorageArrayTypePolicyOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostStorageElementInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostStorageElementInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostStorageOperationalInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostStorageOperationalInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostStorageSystemDiskLocatorLedResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostStorageSystemDiskLocatorLedResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostStorageSystemScsiLunResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostStorageSystemScsiLunResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostStorageSystemVmfsVolumeResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostStorageSystemVmfsVolumeResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostSystemIdentificationInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostSystemIdentificationInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostSystemResourceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostSystemResourceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostSystemSwapConfigurationSystemSwapOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostSystemSwapConfigurationSystemSwapOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostTpmDigestInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostTpmDigestInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostTpmEventLogEntry");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostTpmEventLogEntry.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostUnresolvedVmfsExtent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostUnresolvedVmfsExtent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostUnresolvedVmfsResolutionResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostUnresolvedVmfsResolutionResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostUnresolvedVmfsResolutionSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostUnresolvedVmfsResolutionSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostUnresolvedVmfsVolume");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostUnresolvedVmfsVolume.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostVFlashManagerVFlashCacheConfigInfoVFlashModuleConfigOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostVFlashManagerVFlashCacheConfigInfoVFlashModuleConfigOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostVirtualNic");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostVirtualNic.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostVirtualNicConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostVirtualNicConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostVirtualNicManagerNicTypeSelection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostVirtualNicManagerNicTypeSelection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostVirtualSwitch");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostVirtualSwitch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostVirtualSwitchConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostVirtualSwitchConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostVmciAccessManagerAccessSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostVmciAccessManagerAccessSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostVmfsRescanResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostVmfsRescanResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostVMotionCompatibility");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostVMotionCompatibility.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostVsanInternalSystemCmmdsQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostVsanInternalSystemCmmdsQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostVsanInternalSystemDeleteVsanObjectsResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostVsanInternalSystemDeleteVsanObjectsResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostVsanInternalSystemVsanObjectOperationResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostVsanInternalSystemVsanObjectOperationResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHostVsanInternalSystemVsanPhysicalDiskDiagnosticsResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHostVsanInternalSystemVsanPhysicalDiskDiagnosticsResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHttpNfcLeaseDatastoreLeaseInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHttpNfcLeaseDatastoreLeaseInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHttpNfcLeaseDeviceUrl");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHttpNfcLeaseDeviceUrl.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHttpNfcLeaseHostInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHttpNfcLeaseHostInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfHttpNfcLeaseManifestEntry");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfHttpNfcLeaseManifestEntry.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfImportOperationBulkFaultFaultOnImport");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfImportOperationBulkFaultFaultOnImport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfImportSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfImportSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfInt");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfInt.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfIoFilterHostIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfIoFilterHostIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfIpPool");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfIpPool.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfIpPoolAssociation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfIpPoolAssociation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfIpPoolManagerIpAllocation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfIpPoolManagerIpAllocation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfIscsiDependencyEntity");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfIscsiDependencyEntity.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfIscsiPortInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfIscsiPortInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfKernelModuleInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfKernelModuleInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfKeyAnyValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfKeyAnyValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfKeyValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfKeyValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfLicenseAssignmentManagerLicenseAssignment");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfLicenseAssignmentManagerLicenseAssignment.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfLicenseAvailabilityInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfLicenseAvailabilityInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfLicenseFeatureInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfLicenseFeatureInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfLicenseManagerLicenseInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfLicenseManagerLicenseInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfLicenseReservationInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfLicenseReservationInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfLocalizableMessage");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfLocalizableMessage.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfLocalizationManagerMessageCatalog");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfLocalizationManagerMessageCatalog.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfLong");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfLong.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfManagedObjectReference");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfManagedObjectReference.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfMethodActionArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfMethodActionArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfMethodFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfMethodFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfMissingObject");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfMissingObject.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfMissingProperty");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfMissingProperty.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfMultipleCertificatesVerifyFaultThumbprintData");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfMultipleCertificatesVerifyFaultThumbprintData.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings12() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfNasStorageProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfNasStorageProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfNetIpConfigInfoIpAddress");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfNetIpConfigInfoIpAddress.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfNetIpConfigSpecIpAddressSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfNetIpConfigSpecIpAddressSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfNetIpRouteConfigInfoIpRoute");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfNetIpRouteConfigInfoIpRoute.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfNetIpRouteConfigSpecIpRouteSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfNetIpRouteConfigSpecIpRouteSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfNetIpStackInfoDefaultRouter");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfNetIpStackInfoDefaultRouter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfNetIpStackInfoNetToMedia");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfNetIpStackInfoNetToMedia.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfNetStackInstanceProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfNetStackInstanceProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfNumericRange");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfNumericRange.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfObjectContent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfObjectContent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfObjectSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfObjectSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfObjectUpdate");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfObjectUpdate.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfOpaqueNetworkTargetInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfOpaqueNetworkTargetInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfOptionDef");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfOptionDef.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfOptionProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfOptionProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfOptionValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfOptionValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfOvfConsumerOstNode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfOvfConsumerOstNode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfOvfConsumerOvfSection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfOvfConsumerOvfSection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfOvfDeploymentOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfOvfDeploymentOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfOvfFile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfOvfFile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfOvfFileItem");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfOvfFileItem.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfOvfNetworkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfOvfNetworkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfOvfNetworkMapping");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfOvfNetworkMapping.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfOvfOptionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfOvfOptionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfOvfResourceMap");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfOvfResourceMap.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPerfCounterInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPerfCounterInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPerfEntityMetricBase");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPerfEntityMetricBase.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPerfInterval");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPerfInterval.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPerfMetricId");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPerfMetricId.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPerfMetricSeries");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPerfMetricSeries.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPerfMetricSeriesCSV");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPerfMetricSeriesCSV.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPerformanceManagerCounterLevelMapping");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPerformanceManagerCounterLevelMapping.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPerfQuerySpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPerfQuerySpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPerfSampleInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPerfSampleInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPermission");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPermission.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPermissionProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPermissionProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPhysicalNic");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPhysicalNic.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPhysicalNicConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPhysicalNicConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPhysicalNicHintInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPhysicalNicHintInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPhysicalNicIpHint");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPhysicalNicIpHint.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPhysicalNicLinkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPhysicalNicLinkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPhysicalNicNameHint");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPhysicalNicNameHint.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPhysicalNicProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPhysicalNicProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPlacementAffinityRule");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPlacementAffinityRule.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPlacementSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPlacementSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPnicUplinkProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPnicUplinkProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPodDiskLocator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPodDiskLocator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPolicyOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPolicyOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPrivilegeAvailability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPrivilegeAvailability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfProductComponentInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfProductComponentInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfProfileApplyProfileProperty");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfProfileApplyProfileProperty.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfProfileDeferredPolicyOptionParameter");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfProfileDeferredPolicyOptionParameter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfProfileDescriptionSection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfProfileDescriptionSection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfProfileExecuteError");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfProfileExecuteError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfProfileExpression");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfProfileExpression.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfProfileExpressionMetadata");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfProfileExpressionMetadata.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfProfileMetadata");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfProfileMetadata.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfProfileMetadataProfileSortSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfProfileMetadataProfileSortSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfProfileParameterMetadata");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfProfileParameterMetadata.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfProfilePolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfProfilePolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfProfilePolicyMetadata");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfProfilePolicyMetadata.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfProfilePolicyOptionMetadata");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfProfilePolicyOptionMetadata.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfProfileProfileStructureProperty");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfProfileProfileStructureProperty.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfProfilePropertyPath");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfProfilePropertyPath.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfProfileUpdateFailedUpdateFailure");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfProfileUpdateFailedUpdateFailure.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPropertyChange");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPropertyChange.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPropertyFilterSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPropertyFilterSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPropertyFilterUpdate");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPropertyFilterUpdate.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfPropertySpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfPropertySpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfReplicationInfoDiskSettings");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfReplicationInfoDiskSettings.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfResourceConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfResourceConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfScheduledTaskDetail");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfScheduledTaskDetail.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfScsiLun");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfScsiLun.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfScsiLunDescriptor");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfScsiLunDescriptor.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfScsiLunDurableName");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfScsiLunDurableName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfSelectionSet");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfSelectionSet.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfSelectionSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfSelectionSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfServiceConsolePortGroupProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfServiceConsolePortGroupProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfServiceLocator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfServiceLocator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfServiceManagerServiceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfServiceManagerServiceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfServiceProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfServiceProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfShort");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfShort.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfStaticRouteProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfStaticRouteProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfStorageDrsOptionSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfStorageDrsOptionSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfStorageDrsPlacementRankVmSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfStorageDrsPlacementRankVmSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfStorageDrsVmConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfStorageDrsVmConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfStorageDrsVmConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfStorageDrsVmConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfStoragePerformanceSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfStoragePerformanceSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfStorageRequirement");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfStorageRequirement.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfString");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfString.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfTag");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfTag.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfTaskInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfTaskInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfTaskInfoState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfTaskInfoState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfTypeDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfTypeDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfUpdateVirtualMachineFilesResultFailedVmFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfUpdateVirtualMachineFilesResultFailedVmFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfUserGroupProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfUserGroupProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfUserProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfUserProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfUserSearchResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfUserSearchResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfUserSession");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfUserSession.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVAppCloneSpecNetworkMappingPair");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVAppCloneSpecNetworkMappingPair.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings13() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVAppCloneSpecResourceMap");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVAppCloneSpecResourceMap.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVAppEntityConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVAppEntityConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVAppOvfSectionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVAppOvfSectionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVAppOvfSectionSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVAppOvfSectionSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVAppProductInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVAppProductInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVAppProductSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVAppProductSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVAppPropertyInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVAppPropertyInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVAppPropertySpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVAppPropertySpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVASAStorageArray");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVASAStorageArray.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVimVasaProviderInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVimVasaProviderInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVimVasaProviderStatePerArray");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVimVasaProviderStatePerArray.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualAppLinkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualAppLinkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualDeviceConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualDeviceConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualDeviceOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualDeviceOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualDiskDeltaDiskFormatsSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualDiskDeltaDiskFormatsSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualDiskId");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualDiskId.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineBootOptionsBootableDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineBootOptionsBootableDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineCdromInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineCdromInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineConfigInfoDatastoreUrlPair");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineConfigInfoDatastoreUrlPair.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineConfigOptionDescriptor");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineConfigOptionDescriptor.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineCpuIdInfoSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineCpuIdInfoSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineDatastoreInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineDatastoreInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineDatastoreVolumeOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineDatastoreVolumeOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineDeviceRuntimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineDeviceRuntimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineDisplayTopology");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineDisplayTopology.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineFeatureRequirement");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineFeatureRequirement.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineFileLayoutDiskLayout");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineFileLayoutDiskLayout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineFileLayoutExDiskLayout");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineFileLayoutExDiskLayout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineFileLayoutExDiskUnit");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineFileLayoutExDiskUnit.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineFileLayoutExFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineFileLayoutExFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineFileLayoutExSnapshotLayout");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineFileLayoutExSnapshotLayout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineFileLayoutSnapshotLayout");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineFileLayoutSnapshotLayout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineFloppyInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineFloppyInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineIdeDiskDeviceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineIdeDiskDeviceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineIdeDiskDevicePartitionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineIdeDiskDevicePartitionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineLegacyNetworkSwitchInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineLegacyNetworkSwitchInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineMessage");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineMessage.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineMetadataManagerVmMetadataInput");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineMetadataManagerVmMetadataInput.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineMetadataManagerVmMetadataResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineMetadataManagerVmMetadataResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineNetworkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineNetworkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineParallelInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineParallelInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachinePciPassthroughInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachinePciPassthroughInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachinePciSharedGpuPassthroughInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachinePciSharedGpuPassthroughInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineProfileSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineProfileSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineRelocateSpecDiskLocator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineRelocateSpecDiskLocator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineScsiDiskDeviceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineScsiDiskDeviceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineScsiPassthroughInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineScsiPassthroughInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineSerialInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineSerialInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineSnapshotTree");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineSnapshotTree.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineSoundInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineSoundInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineSriovInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineSriovInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineUsageOnDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineUsageOnDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineUsbInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineUsbInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineVFlashModuleInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineVFlashModuleInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualMachineVMCIDeviceFilterSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualMachineVMCIDeviceFilterSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualNicManagerNetConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualNicManagerNetConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualSCSISharing");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualSCSISharing.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVirtualSwitchProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVirtualSwitchProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVmEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVmEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVmfsDatastoreOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVmfsDatastoreOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVmPodConfigForPlacement");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVmPodConfigForPlacement.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVmPortGroupProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVmPortGroupProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVMwareDvsLacpGroupConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVMwareDvsLacpGroupConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVMwareDvsLacpGroupSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVMwareDvsLacpGroupSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVMwareDVSPvlanConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVMwareDVSPvlanConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVMwareDVSPvlanMapEntry");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVMwareDVSPvlanMapEntry.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVMwareDVSVspanConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVMwareDVSVspanConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVMwareVspanSession");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVMwareVspanSession.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVnicPortArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVnicPortArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVsanHostConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVsanHostConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVsanHostConfigInfoNetworkInfoPortConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVsanHostConfigInfoNetworkInfoPortConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVsanHostDiskMapInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVsanHostDiskMapInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVsanHostDiskMapping");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVsanHostDiskMapping.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVsanHostDiskMapResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVsanHostDiskMapResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVsanHostDiskResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVsanHostDiskResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVsanHostMembershipInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVsanHostMembershipInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVsanHostRuntimeInfoDiskIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVsanHostRuntimeInfoDiskIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVsanNewPolicyBatch");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVsanNewPolicyBatch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVsanPolicyChangeBatch");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVsanPolicyChangeBatch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVsanPolicySatisfiability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVsanPolicySatisfiability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVsanUpgradeSystemNetworkPartitionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVsanUpgradeSystemNetworkPartitionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVsanUpgradeSystemPreflightCheckIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVsanUpgradeSystemPreflightCheckIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVsanUpgradeSystemUpgradeHistoryItem");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVsanUpgradeSystemUpgradeHistoryItem.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayOfVVolHostPE");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayOfVVolHostPE.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayUpdateOperation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayUpdateOperation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ArrayUpdateSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ArrayUpdateSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AuthenticationProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AuthenticationProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AuthMinimumAdminPermission");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AuthMinimumAdminPermission.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AuthorizationDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AuthorizationDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AuthorizationEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AuthorizationEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AuthorizationPrivilege");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AuthorizationPrivilege.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AuthorizationRole");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AuthorizationRole.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AutoStartAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AutoStartAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AutoStartDefaults");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AutoStartDefaults.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AutoStartPowerInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AutoStartPowerInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "AutoStartWaitHeartbeatSetting");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.AutoStartWaitHeartbeatSetting.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

    }
    private void addBindings14() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "BackupBlobReadFailure");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.BackupBlobReadFailure.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "BackupBlobWriteFailure");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.BackupBlobWriteFailure.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "BadUsernameSessionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.BadUsernameSessionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "BatchResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.BatchResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "BatchResultResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.BatchResultResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "BlockedByFirewall");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.BlockedByFirewall.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "BoolOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.BoolOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "BoolPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.BoolPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CAMServerRefusedConnection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CAMServerRefusedConnection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CanceledHostOperationEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CanceledHostOperationEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CancelRetrievePropertiesExRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CancelRetrievePropertiesExRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CancelWaitForUpdatesRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CancelWaitForUpdatesRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotAccessFile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotAccessFile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotAccessLocalSource");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotAccessLocalSource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotAccessNetwork");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotAccessNetwork.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotAccessVmComponent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotAccessVmComponent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotAccessVmConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotAccessVmConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotAccessVmDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotAccessVmDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotAccessVmDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotAccessVmDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotAddHostWithFTVmAsStandalone");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotAddHostWithFTVmAsStandalone.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotAddHostWithFTVmToDifferentCluster");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotAddHostWithFTVmToDifferentCluster.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotAddHostWithFTVmToNonHACluster");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotAddHostWithFTVmToNonHACluster.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotChangeDrsBehaviorForFtSecondary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotChangeDrsBehaviorForFtSecondary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotChangeHaSettingsForFtSecondary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotChangeHaSettingsForFtSecondary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotChangeVsanClusterUuid");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotChangeVsanClusterUuid.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotChangeVsanNodeUuid");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotChangeVsanNodeUuid.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotComputeFTCompatibleHosts");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotComputeFTCompatibleHosts.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotCreateFile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotCreateFile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotDecryptPasswords");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotDecryptPasswords.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotDeleteFile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotDeleteFile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotDisableDrsOnClusterManagedByVDC");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotDisableDrsOnClusterManagedByVDC.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotDisableDrsOnClustersWithVApps");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotDisableDrsOnClustersWithVApps.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotDisableSnapshot");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotDisableSnapshot.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotDisconnectHostWithFaultToleranceVm");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotDisconnectHostWithFaultToleranceVm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotEnableVmcpForCluster");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotEnableVmcpForCluster.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotEnableVmcpForClusterReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotEnableVmcpForClusterReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotModifyConfigCpuRequirements");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotModifyConfigCpuRequirements.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotMoveFaultToleranceVm");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotMoveFaultToleranceVm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotMoveFaultToleranceVmMoveType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotMoveFaultToleranceVmMoveType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotMoveHostWithFaultToleranceVm");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotMoveHostWithFaultToleranceVm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotMoveVmWithDeltaDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotMoveVmWithDeltaDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotMoveVmWithNativeDeltaDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotMoveVmWithNativeDeltaDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotMoveVsanEnabledHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotMoveVsanEnabledHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotPlaceWithoutPrerequisiteMoves");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotPlaceWithoutPrerequisiteMoves.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotPowerOffVmInCluster");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotPowerOffVmInCluster.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotPowerOffVmInClusterOperation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotPowerOffVmInClusterOperation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotReconfigureVsanWhenHaEnabled");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotReconfigureVsanWhenHaEnabled.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotUseNetwork");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotUseNetwork.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CannotUseNetworkReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CannotUseNetworkReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "Capability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.Capability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CheckForUpdatesRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CheckForUpdatesRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CheckResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CheckResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CheckTestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CheckTestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ChoiceOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ChoiceOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClockSkew");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClockSkew.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CloneFromSnapshotNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CloneFromSnapshotNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterActionHistory");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterActionHistory.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterAffinityRuleSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterAffinityRuleSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterAntiAffinityRuleSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterAntiAffinityRuleSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterAttemptedVmInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterAttemptedVmInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterComplianceCheckedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterComplianceCheckedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterComputeResourceSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterComputeResourceSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterConfigInfoEx");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterConfigInfoEx.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterConfigSpecEx");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterConfigSpecEx.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasAamHostInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasAamHostInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasAamNodeState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasAamNodeState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasAamNodeStateDasState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasAamNodeStateDasState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasAdmissionControlInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasAdmissionControlInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasAdmissionControlPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasAdmissionControlPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasAdvancedRuntimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasAdvancedRuntimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasAdvancedRuntimeInfoVmcpCapabilityInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasAdvancedRuntimeInfoVmcpCapabilityInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasConfigInfoHBDatastoreCandidate");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasConfigInfoHBDatastoreCandidate.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasConfigInfoServiceState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasConfigInfoServiceState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasConfigInfoVmMonitoringState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasConfigInfoVmMonitoringState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasData");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasData.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasDataSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasDataSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasFailoverLevelAdvancedRuntimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasFailoverLevelAdvancedRuntimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasFailoverLevelAdvancedRuntimeInfoHostSlots.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasFailoverLevelAdvancedRuntimeInfoSlotInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasFailoverLevelAdvancedRuntimeInfoVmSlots");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasFailoverLevelAdvancedRuntimeInfoVmSlots.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasFdmAvailabilityState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasFdmAvailabilityState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasFdmHostState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasFdmHostState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasHostInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasHostInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasHostRecommendation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasHostRecommendation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasVmConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasVmConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasVmConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasVmConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasVmSettings");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasVmSettings.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasVmSettingsIsolationResponse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasVmSettingsIsolationResponse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDasVmSettingsRestartPriority");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDasVmSettingsRestartPriority.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDestroyedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDestroyedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDpmConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDpmConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDpmHostConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDpmHostConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDpmHostConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDpmHostConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDrsConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDrsConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDrsFaults");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDrsFaults.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings15() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDrsFaultsFaultsByVirtualDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDrsFaultsFaultsByVirtualDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDrsFaultsFaultsByVm");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDrsFaultsFaultsByVm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDrsMigration");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDrsMigration.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDrsRecommendation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDrsRecommendation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDrsVmConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDrsVmConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterDrsVmConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterDrsVmConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterEnterMaintenanceResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterEnterMaintenanceResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterEVCManagerCheckResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterEVCManagerCheckResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterEVCManagerEVCState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterEVCManagerEVCState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterFailoverHostAdmissionControlInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterFailoverHostAdmissionControlInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterFailoverHostAdmissionControlInfoHostStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterFailoverHostAdmissionControlInfoHostStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterFailoverHostAdmissionControlPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterFailoverHostAdmissionControlPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterFailoverLevelAdmissionControlInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterFailoverLevelAdmissionControlInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterFailoverLevelAdmissionControlPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterFailoverLevelAdmissionControlPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterFailoverResourcesAdmissionControlInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterFailoverResourcesAdmissionControlInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterFailoverResourcesAdmissionControlPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterFailoverResourcesAdmissionControlPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterFixedSizeSlotPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterFixedSizeSlotPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterGroupInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterGroupInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterGroupSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterGroupSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterHostGroup");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterHostGroup.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterHostPowerAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterHostPowerAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterHostRecommendation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterHostRecommendation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterInitialPlacementAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterInitialPlacementAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterIoFilterInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterIoFilterInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterMigrationAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterMigrationAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterNotAttemptedVmInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterNotAttemptedVmInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterOvercommittedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterOvercommittedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterPowerOnVmOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterPowerOnVmOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterPowerOnVmResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterPowerOnVmResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterProfileCompleteConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterProfileCompleteConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterProfileConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterProfileConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterProfileConfigServiceCreateSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterProfileConfigServiceCreateSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterProfileConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterProfileConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterProfileCreateSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterProfileCreateSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterProfileServiceType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterProfileServiceType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterRecommendation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterRecommendation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterReconfiguredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterReconfiguredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterResourceUsageSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterResourceUsageSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterRuleInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterRuleInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterRuleSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterRuleSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterSlotPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterSlotPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterStatusChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterStatusChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterUsageSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterUsageSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterVmComponentProtectionSettings");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterVmComponentProtectionSettings.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterVmComponentProtectionSettingsStorageVmReaction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterVmComponentProtectionSettingsStorageVmReaction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterVmComponentProtectionSettingsVmReactionOnAPDCleared");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterVmComponentProtectionSettingsVmReactionOnAPDCleared.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterVmGroup");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterVmGroup.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterVmHostRuleInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterVmHostRuleInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ClusterVmToolsMonitoringSettings");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ClusterVmToolsMonitoringSettings.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CollectorAddressUnset");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CollectorAddressUnset.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ComplianceFailure");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ComplianceFailure.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ComplianceLocator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ComplianceLocator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ComplianceProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ComplianceProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ComplianceResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ComplianceResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ComplianceResultStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ComplianceResultStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CompositePolicyOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CompositePolicyOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ComputeResourceConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ComputeResourceConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ComputeResourceConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ComputeResourceConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ComputeResourceEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ComputeResourceEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ComputeResourceHostSPBMLicenseInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ComputeResourceHostSPBMLicenseInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ComputeResourceHostSPBMLicenseInfoHostSPBMLicenseState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ComputeResourceHostSPBMLicenseInfoHostSPBMLicenseState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ComputeResourceSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ComputeResourceSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ConcurrentAccess");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConcurrentAccess.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ConfigSpecOperation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConfigSpecOperation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ConfigTarget");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConfigTarget.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ConflictingConfiguration");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConflictingConfiguration.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ConflictingConfigurationConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConflictingConfigurationConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ConflictingDatastoreFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConflictingDatastoreFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ConnectedIso");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ConnectedIso.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ContinueRetrievePropertiesExRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ContinueRetrievePropertiesExRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CpuCompatibilityUnknown");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CpuCompatibilityUnknown.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CpuHotPlugNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CpuHotPlugNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CpuIncompatible");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CpuIncompatible.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CpuIncompatible1ECX");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CpuIncompatible1ECX.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CpuIncompatible81EDX");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CpuIncompatible81EDX.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CreateFilterRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CreateFilterRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CreatePropertyCollectorRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CreatePropertyCollectorRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CreateTaskAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CreateTaskAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomFieldDef");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomFieldDef.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomFieldDefAddedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomFieldDefAddedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomFieldDefEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomFieldDefEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomFieldDefRemovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomFieldDefRemovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomFieldDefRenamedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomFieldDefRenamedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomFieldEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomFieldEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomFieldStringValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomFieldStringValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomFieldValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomFieldValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomFieldValueChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomFieldValueChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationAdapterMapping");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationAdapterMapping.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationAutoIpV6Generator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationAutoIpV6Generator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationCustomIpGenerator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationCustomIpGenerator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationCustomIpV6Generator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationCustomIpV6Generator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationCustomName");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationCustomName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationDhcpIpGenerator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationDhcpIpGenerator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationDhcpIpV6Generator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationDhcpIpV6Generator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationFixedIp");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationFixedIp.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationFixedIpV6");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationFixedIpV6.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings16() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationFixedName");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationFixedName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationGlobalIPSettings");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationGlobalIPSettings.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationGuiRunOnce");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationGuiRunOnce.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationGuiUnattended");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationGuiUnattended.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationIdentification");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationIdentification.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationIdentitySettings");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationIdentitySettings.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationIpGenerator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationIpGenerator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationIPSettings");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationIPSettings.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationIPSettingsIpV6AddressSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationIPSettingsIpV6AddressSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationIpV6Generator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationIpV6Generator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationLicenseDataMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationLicenseDataMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationLicenseFilePrintData");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationLicenseFilePrintData.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationLinuxIdentityFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationLinuxIdentityFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationLinuxOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationLinuxOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationLinuxPrep");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationLinuxPrep.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationName");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationNetBIOSMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationNetBIOSMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationNetworkSetupFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationNetworkSetupFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationPassword");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationPassword.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationPending");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationPending.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationPrefixName");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationPrefixName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationSpecInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationSpecInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationSpecItem");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationSpecItem.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationStartedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationStartedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationStatelessIpV6Generator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationStatelessIpV6Generator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationSucceeded");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationSucceeded.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationSysprep");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationSysprep.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationSysprepFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationSysprepFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationSysprepRebootOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationSysprepRebootOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationSysprepText");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationSysprepText.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationUnknownFailure");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationUnknownFailure.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationUnknownIpGenerator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationUnknownIpGenerator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationUnknownIpV6Generator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationUnknownIpV6Generator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationUnknownName");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationUnknownName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationUserData");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationUserData.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationVirtualMachineName");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationVirtualMachineName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "CustomizationWinOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.CustomizationWinOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DailyTaskScheduler");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DailyTaskScheduler.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DasAdmissionControlDisabledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DasAdmissionControlDisabledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DasAdmissionControlEnabledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DasAdmissionControlEnabledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DasAgentFoundEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DasAgentFoundEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DasAgentUnavailableEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DasAgentUnavailableEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DasClusterIsolatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DasClusterIsolatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DasConfigFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DasConfigFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DasConfigFaultDasConfigFaultReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DasConfigFaultDasConfigFaultReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DasDisabledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DasDisabledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DasEnabledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DasEnabledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DasHeartbeatDatastoreInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DasHeartbeatDatastoreInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DasHostFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DasHostFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DasHostIsolatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DasHostIsolatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DasVmPriority");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DasVmPriority.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatabaseError");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatabaseError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatabaseSizeEstimate");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatabaseSizeEstimate.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatabaseSizeParam");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatabaseSizeParam.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatacenterConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatacenterConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatacenterConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatacenterConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatacenterCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatacenterCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatacenterEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatacenterEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatacenterEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatacenterEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatacenterMismatch");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatacenterMismatch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatacenterMismatchArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatacenterMismatchArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatacenterRenamedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatacenterRenamedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreAccessible");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreAccessible.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreCapacityIncreasedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreCapacityIncreasedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreDestroyedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreDestroyedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreDiscoveredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreDiscoveredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreDuplicatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreDuplicatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreFileCopiedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreFileCopiedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreFileDeletedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreFileDeletedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreFileEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreFileEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreFileMovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreFileMovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreHostMount");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreHostMount.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreIORMReconfiguredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreIORMReconfiguredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreMountPathDatastorePair");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreMountPathDatastorePair.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreNotWritableOnHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreNotWritableOnHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastorePrincipalConfigured");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastorePrincipalConfigured.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreRemovedOnHostEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreRemovedOnHostEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreRenamedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreRenamedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreRenamedOnHostEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreRenamedOnHostEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DatastoreSummaryMaintenanceModeState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DatastoreSummaryMaintenanceModeState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DateTimeProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DateTimeProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DayOfWeek");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DayOfWeek.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DeltaDiskFormatNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DeltaDiskFormatNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "Description");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.Description.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DestinationSwitchFull");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DestinationSwitchFull.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DestinationVsanDisabled");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DestinationVsanDisabled.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DestroyPropertyCollectorRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DestroyPropertyCollectorRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DestroyPropertyFilterRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DestroyPropertyFilterRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DeviceBackedVirtualDiskSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DeviceBackedVirtualDiskSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DeviceBackingNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DeviceBackingNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DeviceControllerNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DeviceControllerNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DeviceHotPlugNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DeviceHotPlugNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings17() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "DeviceNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DeviceNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DeviceNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DeviceNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DeviceNotSupportedReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DeviceNotSupportedReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DeviceUnsupportedForVmPlatform");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DeviceUnsupportedForVmPlatform.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DeviceUnsupportedForVmVersion");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DeviceUnsupportedForVmVersion.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DiagnosticManagerBundleInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DiagnosticManagerBundleInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DiagnosticManagerLogCreator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DiagnosticManagerLogCreator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DiagnosticManagerLogDescriptor");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DiagnosticManagerLogDescriptor.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DiagnosticManagerLogFormat");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DiagnosticManagerLogFormat.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DiagnosticManagerLogHeader");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DiagnosticManagerLogHeader.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DiagnosticPartitionStorageType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DiagnosticPartitionStorageType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DiagnosticPartitionType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DiagnosticPartitionType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DigestNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DigestNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DirectoryNotEmpty");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DirectoryNotEmpty.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DisableAdminNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DisableAdminNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DisallowedChangeByService");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DisallowedChangeByService.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DisallowedChangeByServiceDisallowedChange");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DisallowedChangeByServiceDisallowedChange.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DisallowedDiskModeChange");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DisallowedDiskModeChange.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DisallowedMigrationDeviceAttached");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DisallowedMigrationDeviceAttached.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DisallowedOperationOnFailoverHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DisallowedOperationOnFailoverHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DisconnectedHostsBlockingEVC");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DisconnectedHostsBlockingEVC.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DiskChangeExtent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DiskChangeExtent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DiskChangeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DiskChangeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DiskHasPartitions");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DiskHasPartitions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DiskIsLastRemainingNonSSD");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DiskIsLastRemainingNonSSD.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DiskIsNonLocal");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DiskIsNonLocal.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DiskIsUSB");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DiskIsUSB.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DiskMoveTypeNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DiskMoveTypeNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DiskNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DiskNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DiskTooSmall");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DiskTooSmall.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualPort");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualPort.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualPortgroupInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualPortgroupInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualPortgroupMetaTagName");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualPortgroupMetaTagName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualPortgroupPortgroupType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualPortgroupPortgroupType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchHostInfrastructureTrafficClass");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchHostInfrastructureTrafficClass.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchHostMember");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchHostMember.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchHostMemberBacking");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchHostMemberBacking.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchHostMemberConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchHostMemberConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchHostMemberConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchHostMemberConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchHostMemberHostComponentState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchHostMemberHostComponentState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchHostMemberPnicBacking");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchHostMemberPnicBacking.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchHostMemberPnicSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchHostMemberPnicSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchHostMemberRuntimeState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchHostMemberRuntimeState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchHostProductSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchHostProductSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchKeyedOpaqueBlob");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchKeyedOpaqueBlob.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchManagerCompatibilityResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchManagerCompatibilityResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchManagerDvsProductSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchManagerDvsProductSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchManagerHostArrayFilter");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchManagerHostArrayFilter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchManagerHostContainer");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchManagerHostContainer.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchManagerHostContainerFilter");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchManagerHostContainerFilter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchManagerHostDvsFilterSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchManagerHostDvsFilterSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchManagerHostDvsMembershipFilter");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchManagerHostDvsMembershipFilter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchManagerImportResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchManagerImportResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchNetworkResourceControlVersion");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchNetworkResourceControlVersion.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchNicTeamingPolicyMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchNicTeamingPolicyMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchPortConnectee");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchPortConnectee.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchPortConnecteeConnecteeType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchPortConnecteeConnecteeType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchPortConnection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchPortConnection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchPortCriteria");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchPortCriteria.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchPortStatistics");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchPortStatistics.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchProductSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchProductSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DistributedVirtualSwitchProductSpecOperationType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DistributedVirtualSwitchProductSpecOperationType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DomainNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DomainNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DpmBehavior");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DpmBehavior.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DrsBehavior");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DrsBehavior.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DrsDisabledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DrsDisabledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DrsDisabledOnVm");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DrsDisabledOnVm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DrsEnabledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DrsEnabledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DrsEnteredStandbyModeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DrsEnteredStandbyModeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DrsEnteringStandbyModeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DrsEnteringStandbyModeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DrsExitedStandbyModeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DrsExitedStandbyModeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DrsExitingStandbyModeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DrsExitingStandbyModeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DrsExitStandbyModeFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DrsExitStandbyModeFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DrsInjectorWorkloadCorrelationState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DrsInjectorWorkloadCorrelationState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DrsInvocationFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DrsInvocationFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DrsRecommendationReasonCode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DrsRecommendationReasonCode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DrsRecoveredFromFailureEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DrsRecoveredFromFailureEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DrsResourceConfigureFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DrsResourceConfigureFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DrsResourceConfigureSyncedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DrsResourceConfigureSyncedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DrsRuleComplianceEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DrsRuleComplianceEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DrsRuleViolationEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DrsRuleViolationEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DrsSoftRuleViolationEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DrsSoftRuleViolationEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DrsVmMigratedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DrsVmMigratedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DrsVmotionIncompatibleFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DrsVmotionIncompatibleFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DrsVmPoweredOnEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DrsVmPoweredOnEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DuplicateDisks");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DuplicateDisks.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DuplicateIpDetectedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DuplicateIpDetectedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DuplicateName");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DuplicateName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DuplicateVsanNetworkInterface");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DuplicateVsanNetworkInterface.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvpgImportEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvpgImportEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvpgRestoreEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvpgRestoreEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVPortConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVPortConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVPortConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVPortConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVPortgroupConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVPortgroupConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVPortgroupConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVPortgroupConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVPortgroupCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVPortgroupCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVPortgroupDestroyedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVPortgroupDestroyedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVPortgroupEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVPortgroupEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVPortgroupPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVPortgroupPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings18() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "DVPortgroupReconfiguredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVPortgroupReconfiguredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVPortgroupRenamedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVPortgroupRenamedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVPortgroupSelection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVPortgroupSelection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVPortNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVPortNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVPortSetting");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVPortSetting.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVPortState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVPortState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVPortStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVPortStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVPortStatusVmDirectPathGen2InactiveReasonNetwork");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVPortStatusVmDirectPathGen2InactiveReasonNetwork.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVPortStatusVmDirectPathGen2InactiveReasonOther");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVPortStatusVmDirectPathGen2InactiveReasonOther.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsAcceptNetworkRuleAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsAcceptNetworkRuleAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsApplyOperationFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsApplyOperationFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsApplyOperationFaultFaultOnObject");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsApplyOperationFaultFaultOnObject.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSBackupRestoreCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSBackupRestoreCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSContactInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSContactInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsCopyNetworkRuleAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsCopyNetworkRuleAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSCreateSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSCreateSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsDestroyedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsDestroyedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsDropNetworkRuleAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsDropNetworkRuleAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSFailureCriteria");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSFailureCriteria.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSFeatureCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSFeatureCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsFilterConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsFilterConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsFilterConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsFilterConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsFilterOnFailure");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsFilterOnFailure.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsFilterParameter");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsFilterParameter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsFilterPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsFilterPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsGreEncapNetworkRuleAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsGreEncapNetworkRuleAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSHealthCheckCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSHealthCheckCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSHealthCheckConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSHealthCheckConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsHealthStatusChangeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsHealthStatusChangeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsHostBackInSyncEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsHostBackInSyncEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsHostInfrastructureTrafficResource");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsHostInfrastructureTrafficResource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsHostInfrastructureTrafficResourceAllocation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsHostInfrastructureTrafficResourceAllocation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsHostJoinedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsHostJoinedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsHostLeftEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsHostLeftEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSHostLocalPortInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSHostLocalPortInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsHostStatusUpdated");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsHostStatusUpdated.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsHostVNicProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsHostVNicProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsHostWentOutOfSyncEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsHostWentOutOfSyncEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsImportEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsImportEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsIpNetworkRuleQualifier");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsIpNetworkRuleQualifier.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsIpPort");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsIpPort.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsIpPortRange");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsIpPortRange.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsLogNetworkRuleAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsLogNetworkRuleAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsMacNetworkRuleQualifier");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsMacNetworkRuleQualifier.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsMacRewriteNetworkRuleAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsMacRewriteNetworkRuleAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSManagerDvsConfigTarget");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSManagerDvsConfigTarget.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsMergedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsMergedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSNameArrayUplinkPortPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSNameArrayUplinkPortPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSNetworkResourceManagementCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSNetworkResourceManagementCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSNetworkResourcePool");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSNetworkResourcePool.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSNetworkResourcePoolAllocationInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSNetworkResourcePoolAllocationInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSNetworkResourcePoolConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSNetworkResourcePoolConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsNetworkRuleAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsNetworkRuleAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsNetworkRuleDirectionType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsNetworkRuleDirectionType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsNetworkRuleQualifier");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsNetworkRuleQualifier.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsNotAuthorized");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsNotAuthorized.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsOperationBulkFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsOperationBulkFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsOperationBulkFaultFaultOnHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsOperationBulkFaultFaultOnHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsOutOfSyncHostArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsOutOfSyncHostArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsPortBlockedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsPortBlockedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsPortConnectedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsPortConnectedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsPortCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsPortCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsPortDeletedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsPortDeletedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsPortDisconnectedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsPortDisconnectedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsPortEnteredPassthruEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsPortEnteredPassthruEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsPortExitedPassthruEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsPortExitedPassthruEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsPortJoinPortgroupEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsPortJoinPortgroupEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsPortLeavePortgroupEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsPortLeavePortgroupEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsPortLinkDownEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsPortLinkDownEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsPortLinkUpEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsPortLinkUpEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsPortReconfiguredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsPortReconfiguredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsPortRuntimeChangeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsPortRuntimeChangeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsPortUnblockedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsPortUnblockedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsPortVendorSpecificStateChangeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsPortVendorSpecificStateChangeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsPuntNetworkRuleAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsPuntNetworkRuleAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsRateLimitNetworkRuleAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsRateLimitNetworkRuleAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsReconfiguredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsReconfiguredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsRenamedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsRenamedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsResourceRuntimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsResourceRuntimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsRestoreEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsRestoreEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSRollbackCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSRollbackCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSRuntimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSRuntimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsScopeViolated");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsScopeViolated.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSSecurityPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSSecurityPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSSelection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSSelection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsServiceConsoleVNicProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsServiceConsoleVNicProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsSingleIpPort");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsSingleIpPort.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsSystemTrafficNetworkRuleQualifier");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsSystemTrafficNetworkRuleQualifier.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsTrafficFilterConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsTrafficFilterConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsTrafficFilterConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsTrafficFilterConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings19() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "DvsTrafficRule");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsTrafficRule.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsTrafficRuleset");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsTrafficRuleset.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSTrafficShapingPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSTrafficShapingPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsUpdateTagNetworkRuleAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsUpdateTagNetworkRuleAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsUpgradeAvailableEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsUpgradeAvailableEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsUpgradedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsUpgradedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsUpgradeInProgressEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsUpgradeInProgressEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsUpgradeRejectedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsUpgradeRejectedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSUplinkPortPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSUplinkPortPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSVendorSpecificConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSVendorSpecificConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DVSVmVnicNetworkResourcePool");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DVSVmVnicNetworkResourcePool.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsVmVnicNetworkResourcePoolRuntimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsVmVnicNetworkResourcePoolRuntimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsVmVnicResourceAllocation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsVmVnicResourceAllocation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsVmVnicResourcePoolConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsVmVnicResourcePoolConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsVnicAllocatedResource");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsVnicAllocatedResource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DvsVNicProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DvsVNicProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DynamicArray");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DynamicArray.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DynamicData");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DynamicData.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "DynamicProperty");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.DynamicProperty.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EightHostLimitViolated");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EightHostLimitViolated.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ElementDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ElementDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EnteredMaintenanceModeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EnteredMaintenanceModeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EnteredStandbyModeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EnteredStandbyModeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EnteringMaintenanceModeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EnteringMaintenanceModeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EnteringStandbyModeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EnteringStandbyModeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EntityBackup");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EntityBackup.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EntityBackupConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EntityBackupConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EntityEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EntityEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EntityImportType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EntityImportType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EntityPrivilege");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EntityPrivilege.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EntityType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EntityType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EnumDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EnumDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EnvironmentBrowserConfigOptionQuerySpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EnvironmentBrowserConfigOptionQuerySpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ErrorUpgradeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ErrorUpgradeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EvaluationLicenseSource");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EvaluationLicenseSource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EVCAdmissionFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EVCAdmissionFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EVCAdmissionFailedCPUFeaturesForMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EVCAdmissionFailedCPUFeaturesForMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EVCAdmissionFailedCPUModel");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EVCAdmissionFailedCPUModel.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EVCAdmissionFailedCPUModelForMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EVCAdmissionFailedCPUModelForMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EVCAdmissionFailedCPUVendor");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EVCAdmissionFailedCPUVendor.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EVCAdmissionFailedCPUVendorUnknown");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EVCAdmissionFailedCPUVendorUnknown.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EVCAdmissionFailedHostDisconnected");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EVCAdmissionFailedHostDisconnected.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EVCAdmissionFailedHostSoftware");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EVCAdmissionFailedHostSoftware.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EVCAdmissionFailedHostSoftwareForMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EVCAdmissionFailedHostSoftwareForMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EVCAdmissionFailedVmActive");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EVCAdmissionFailedVmActive.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EVCConfigFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EVCConfigFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EVCMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EVCMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EVCModeIllegalByVendor");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EVCModeIllegalByVendor.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EVCModeUnsupportedByHosts");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EVCModeUnsupportedByHosts.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EVCUnsupportedByHostHardware");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EVCUnsupportedByHostHardware.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EVCUnsupportedByHostSoftware");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EVCUnsupportedByHostSoftware.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "Event");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.Event.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EventAlarmExpression");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EventAlarmExpression.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EventAlarmExpressionComparison");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EventAlarmExpressionComparison.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EventAlarmExpressionComparisonOperator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EventAlarmExpressionComparisonOperator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EventArgDesc");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EventArgDesc.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EventCategory");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EventCategory.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EventDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EventDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EventDescriptionEventDetail");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EventDescriptionEventDetail.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EventEventSeverity");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EventEventSeverity.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EventEx");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EventEx.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EventFilterSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EventFilterSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EventFilterSpecByEntity");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EventFilterSpecByEntity.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EventFilterSpecByTime");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EventFilterSpecByTime.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EventFilterSpecByUsername");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EventFilterSpecByUsername.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "EventFilterSpecRecursionOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.EventFilterSpecRecursionOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExitedStandbyModeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExitedStandbyModeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExitingStandbyModeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExitingStandbyModeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExitMaintenanceModeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExitMaintenanceModeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExitStandbyModeFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExitStandbyModeFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExpiredAddonLicense");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExpiredAddonLicense.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExpiredEditionLicense");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExpiredEditionLicense.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExpiredFeatureLicense");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExpiredFeatureLicense.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExtendedDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExtendedDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExtendedElementDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExtendedElementDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExtendedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExtendedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExtendedEventPair");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExtendedEventPair.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExtendedFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExtendedFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "Extension");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.Extension.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExtensionClientInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExtensionClientInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExtensionEventTypeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExtensionEventTypeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExtensionFaultTypeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExtensionFaultTypeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExtensionHealthInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExtensionHealthInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExtensionManagerIpAllocationUsage");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExtensionManagerIpAllocationUsage.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExtensionOvfConsumerInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExtensionOvfConsumerInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExtensionPrivilegeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExtensionPrivilegeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExtensionResourceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExtensionResourceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExtensionServerInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExtensionServerInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExtensionTaskTypeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExtensionTaskTypeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExtExtendedProductInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExtExtendedProductInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExtManagedEntityInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExtManagedEntityInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExtSolutionManagerInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExtSolutionManagerInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ExtSolutionManagerInfoTabInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ExtSolutionManagerInfoTabInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FailoverLevelRestored");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FailoverLevelRestored.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FailToEnableSPBM");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FailToEnableSPBM.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FailToLockFaultToleranceVMs");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FailToLockFaultToleranceVMs.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FaultToleranceAntiAffinityViolated");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FaultToleranceAntiAffinityViolated.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FaultToleranceCannotEditMem");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FaultToleranceCannotEditMem.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FaultToleranceConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FaultToleranceConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings20() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "FaultToleranceConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FaultToleranceConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FaultToleranceCpuIncompatible");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FaultToleranceCpuIncompatible.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FaultToleranceDiskSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FaultToleranceDiskSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FaultToleranceMetaSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FaultToleranceMetaSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FaultToleranceNeedsThickDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FaultToleranceNeedsThickDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FaultToleranceNotLicensed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FaultToleranceNotLicensed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FaultToleranceNotSameBuild");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FaultToleranceNotSameBuild.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FaultTolerancePrimaryConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FaultTolerancePrimaryConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FaultTolerancePrimaryPowerOnNotAttempted");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FaultTolerancePrimaryPowerOnNotAttempted.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FaultToleranceSecondaryConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FaultToleranceSecondaryConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FaultToleranceSecondaryOpResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FaultToleranceSecondaryOpResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FaultToleranceVMConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FaultToleranceVMConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FaultToleranceVmNotDasProtected");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FaultToleranceVmNotDasProtected.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FcoeConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FcoeConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FcoeConfigFcoeCapabilities");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FcoeConfigFcoeCapabilities.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FcoeConfigFcoeSpecification");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FcoeConfigFcoeSpecification.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FcoeConfigVlanRange");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FcoeConfigVlanRange.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FcoeFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FcoeFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FcoeFaultPnicHasNoPortSet");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FcoeFaultPnicHasNoPortSet.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FeatureRequirementsNotMet");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FeatureRequirementsNotMet.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FibreChannelPortType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FibreChannelPortType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FileAlreadyExists");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FileAlreadyExists.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FileBackedPortNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FileBackedPortNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FileBackedVirtualDiskSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FileBackedVirtualDiskSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FileFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FileFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FileLocked");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FileLocked.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FileNameTooLong");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FileNameTooLong.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FileNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FileNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FileNotWritable");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FileNotWritable.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FileQueryFlags");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FileQueryFlags.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FileSystemMountInfoVStorageSupportStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FileSystemMountInfoVStorageSupportStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FilesystemQuiesceFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FilesystemQuiesceFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FileTooLarge");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FileTooLarge.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FileTransferInformation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FileTransferInformation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FilterInUse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FilterInUse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FirewallProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FirewallProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FirewallProfileRulesetProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FirewallProfileRulesetProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FloatOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FloatOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FloppyImageFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FloppyImageFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FloppyImageFileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FloppyImageFileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FolderEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FolderEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FolderFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FolderFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FolderFileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FolderFileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FtIssuesOnHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FtIssuesOnHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FtIssuesOnHostHostSelectionType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FtIssuesOnHostHostSelectionType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "FullStorageVMotionNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.FullStorageVMotionNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GatewayConnectFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GatewayConnectFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GatewayHostNotReachable");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GatewayHostNotReachable.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GatewayNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GatewayNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GatewayNotReachable");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GatewayNotReachable.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GatewayOperationRefused");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GatewayOperationRefused.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GatewayToHostAuthFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GatewayToHostAuthFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GatewayToHostConnectFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GatewayToHostConnectFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GatewayToHostTrustVerifyFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GatewayToHostTrustVerifyFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GeneralEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GeneralEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GeneralHostErrorEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GeneralHostErrorEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GeneralHostInfoEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GeneralHostInfoEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GeneralHostWarningEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GeneralHostWarningEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GeneralUserEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GeneralUserEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GeneralVmErrorEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GeneralVmErrorEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GeneralVmInfoEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GeneralVmInfoEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GeneralVmWarningEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GeneralVmWarningEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GenericDrsFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GenericDrsFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GenericVmConfigFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GenericVmConfigFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GhostDvsProxySwitchDetectedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GhostDvsProxySwitchDetectedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GhostDvsProxySwitchRemovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GhostDvsProxySwitchRemovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GlobalMessageChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GlobalMessageChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GroupAlarmAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GroupAlarmAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestAliases");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestAliases.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestAuthAliasInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestAuthAliasInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestAuthAnySubject");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestAuthAnySubject.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestAuthentication");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestAuthentication.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestAuthenticationChallenge");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestAuthenticationChallenge.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestAuthNamedSubject");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestAuthNamedSubject.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestAuthSubject");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestAuthSubject.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestComponentsOutOfDate");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestComponentsOutOfDate.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestDiskInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestDiskInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestFileAttributes");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestFileAttributes.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestFileType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestFileType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestInfoAppStateType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestInfoAppStateType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestInfoNamespaceGenerationInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestInfoNamespaceGenerationInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestListFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestListFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestMappedAliases");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestMappedAliases.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestMultipleMappings");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestMultipleMappings.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestNicInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestNicInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestOperationsFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestOperationsFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestOperationsUnavailable");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestOperationsUnavailable.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestOsDescriptor");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestOsDescriptor.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestOsDescriptorFirmwareType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestOsDescriptorFirmwareType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestOsDescriptorSupportLevel");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestOsDescriptorSupportLevel.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestPermissionDenied");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestPermissionDenied.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestPosixFileAttributes");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestPosixFileAttributes.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestProcessInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestProcessInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestProcessNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestProcessNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestProgramSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestProgramSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestRegistryFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestRegistryFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings21() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "GuestRegistryKeyAlreadyExists");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestRegistryKeyAlreadyExists.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestRegistryKeyFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestRegistryKeyFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestRegistryKeyHasSubkeys");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestRegistryKeyHasSubkeys.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestRegistryKeyInvalid");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestRegistryKeyInvalid.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestRegistryKeyParentVolatile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestRegistryKeyParentVolatile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestRegistryValueFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestRegistryValueFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestRegistryValueNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestRegistryValueNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestRegKeyNameSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestRegKeyNameSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestRegKeyRecordSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestRegKeyRecordSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestRegKeySpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestRegKeySpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestRegKeyWowSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestRegKeyWowSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestRegValueBinarySpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestRegValueBinarySpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestRegValueDataSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestRegValueDataSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestRegValueDwordSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestRegValueDwordSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestRegValueExpandStringSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestRegValueExpandStringSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestRegValueMultiStringSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestRegValueMultiStringSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestRegValueNameSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestRegValueNameSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestRegValueQwordSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestRegValueQwordSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestRegValueSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestRegValueSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestRegValueStringSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestRegValueStringSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestScreenInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestScreenInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestStackInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestStackInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestWindowsFileAttributes");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestWindowsFileAttributes.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "GuestWindowsProgramSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.GuestWindowsProgramSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HAErrorsAtDest");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HAErrorsAtDest.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HbrDiskMigrationAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HbrDiskMigrationAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HbrManagerReplicationVmInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HbrManagerReplicationVmInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HbrManagerVmReplicationCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HbrManagerVmReplicationCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HealthStatusChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HealthStatusChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HealthSystemRuntime");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HealthSystemRuntime.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HeterogenousHostsBlockingEVC");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HeterogenousHostsBlockingEVC.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostAccessControlEntry");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostAccessControlEntry.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostAccessMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostAccessMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostAccessRestrictedToManagementServer");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostAccessRestrictedToManagementServer.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostAccountSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostAccountSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostActiveDirectory");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostActiveDirectory.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostActiveDirectoryAuthenticationCertificateDigest");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostActiveDirectoryAuthenticationCertificateDigest.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostActiveDirectoryInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostActiveDirectoryInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostActiveDirectoryInfoDomainMembershipStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostActiveDirectoryInfoDomainMembershipStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostActiveDirectorySpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostActiveDirectorySpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostAddedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostAddedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostAddFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostAddFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostAdminDisableEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostAdminDisableEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostAdminEnableEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostAdminEnableEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostApplyProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostApplyProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostAuthenticationManagerInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostAuthenticationManagerInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostAuthenticationStoreInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostAuthenticationStoreInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostAutoStartManagerConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostAutoStartManagerConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostBIOSInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostBIOSInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostBlockAdapterTargetTransport");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostBlockAdapterTargetTransport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostBlockHba");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostBlockHba.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostBootDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostBootDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostBootDeviceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostBootDeviceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCacheConfigurationInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCacheConfigurationInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCacheConfigurationSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCacheConfigurationSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCapabilityFtUnsupportedReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCapabilityFtUnsupportedReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCapabilityVmDirectPathGen2UnsupportedReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCapabilityVmDirectPathGen2UnsupportedReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCertificateManagerCertificateInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCertificateManagerCertificateInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCertificateManagerCertificateInfoCertificateStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCertificateManagerCertificateInfoCertificateStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCnxFailedAccountFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCnxFailedAccountFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCnxFailedAlreadyManagedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCnxFailedAlreadyManagedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCnxFailedBadCcagentEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCnxFailedBadCcagentEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCnxFailedBadUsernameEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCnxFailedBadUsernameEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCnxFailedBadVersionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCnxFailedBadVersionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCnxFailedCcagentUpgradeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCnxFailedCcagentUpgradeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCnxFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCnxFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCnxFailedNetworkErrorEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCnxFailedNetworkErrorEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCnxFailedNoAccessEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCnxFailedNoAccessEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCnxFailedNoConnectionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCnxFailedNoConnectionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCnxFailedNoLicenseEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCnxFailedNoLicenseEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCnxFailedNotFoundEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCnxFailedNotFoundEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCnxFailedTimeoutEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCnxFailedTimeoutEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCommunication");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCommunication.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostComplianceCheckedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostComplianceCheckedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCompliantEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCompliantEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostConfigAppliedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostConfigAppliedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostConfigChange");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostConfigChange.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostConfigChangeMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostConfigChangeMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostConfigChangeOperation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostConfigChangeOperation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostConfigFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostConfigFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostConfigFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostConfigFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostConfigManager");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostConfigManager.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostConfigSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostConfigSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostConnectedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostConnectedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostConnectFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostConnectFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostConnectInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostConnectInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostConnectInfoNetworkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostConnectInfoNetworkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostConnectionLostEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostConnectionLostEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostConnectSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostConnectSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCpuIdInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCpuIdInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCpuInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCpuInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCpuPackage");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCpuPackage.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCpuPackageVendor");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCpuPackageVendor.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCpuPowerManagementInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCpuPowerManagementInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostCpuPowerManagementInfoPolicyType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostCpuPowerManagementInfoPolicyType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDasDisabledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDasDisabledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDasDisablingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDasDisablingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings22() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "HostDasEnabledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDasEnabledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDasEnablingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDasEnablingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDasErrorEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDasErrorEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDasErrorEventHostDasErrorReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDasErrorEventHostDasErrorReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDasEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDasEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDasOkEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDasOkEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDatastoreBrowserSearchResults");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDatastoreBrowserSearchResults.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDatastoreBrowserSearchSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDatastoreBrowserSearchSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDatastoreConnectInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDatastoreConnectInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDatastoreExistsConnectInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDatastoreExistsConnectInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDatastoreNameConflictConnectInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDatastoreNameConflictConnectInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDatastoreSystemCapabilities");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDatastoreSystemCapabilities.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDatastoreSystemDatastoreResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDatastoreSystemDatastoreResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDatastoreSystemVvolDatastoreSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDatastoreSystemVvolDatastoreSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDateTimeConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDateTimeConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDateTimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDateTimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDateTimeSystemTimeZone");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDateTimeSystemTimeZone.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDhcpService");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDhcpService.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDhcpServiceConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDhcpServiceConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDhcpServiceSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDhcpServiceSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDiagnosticPartition");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDiagnosticPartition.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDiagnosticPartitionCreateDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDiagnosticPartitionCreateDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDiagnosticPartitionCreateOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDiagnosticPartitionCreateOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDiagnosticPartitionCreateSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDiagnosticPartitionCreateSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDigestInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDigestInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDigestInfoDigestMethodType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDigestInfoDigestMethodType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDirectoryStoreInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDirectoryStoreInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDisconnectedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDisconnectedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDisconnectedEventReasonCode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDisconnectedEventReasonCode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDiskConfigurationResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDiskConfigurationResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDiskDimensions");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDiskDimensions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDiskDimensionsChs");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDiskDimensionsChs.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDiskDimensionsLba");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDiskDimensionsLba.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDiskMappingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDiskMappingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDiskMappingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDiskMappingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDiskMappingPartitionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDiskMappingPartitionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDiskMappingPartitionOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDiskMappingPartitionOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDiskPartitionAttributes");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDiskPartitionAttributes.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDiskPartitionBlockRange");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDiskPartitionBlockRange.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDiskPartitionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDiskPartitionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDiskPartitionInfoPartitionFormat");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDiskPartitionInfoPartitionFormat.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDiskPartitionInfoType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDiskPartitionInfoType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDiskPartitionLayout");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDiskPartitionLayout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDiskPartitionSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDiskPartitionSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDnsConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDnsConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostDnsConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostDnsConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostEnableAdminFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostEnableAdminFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostEsxAgentHostManagerConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostEsxAgentHostManagerConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostExtraNetworksEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostExtraNetworksEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFaultToleranceManagerComponentHealthInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFaultToleranceManagerComponentHealthInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFeatureCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFeatureCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFeatureMask");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFeatureMask.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFeatureVersionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFeatureVersionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFeatureVersionKey");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFeatureVersionKey.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFibreChannelHba");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFibreChannelHba.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFibreChannelOverEthernetHba");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFibreChannelOverEthernetHba.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFibreChannelOverEthernetHbaLinkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFibreChannelOverEthernetHbaLinkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFibreChannelOverEthernetTargetTransport");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFibreChannelOverEthernetTargetTransport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFibreChannelTargetTransport");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFibreChannelTargetTransport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFileAccess");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFileAccess.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFileSystemMountInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFileSystemMountInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFileSystemVolume");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFileSystemVolume.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFileSystemVolumeFileSystemType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFileSystemVolumeFileSystemType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFileSystemVolumeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFileSystemVolumeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFirewallConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFirewallConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFirewallConfigRuleSetConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFirewallConfigRuleSetConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFirewallDefaultPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFirewallDefaultPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFirewallInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFirewallInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFirewallRule");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFirewallRule.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFirewallRuleDirection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFirewallRuleDirection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFirewallRulePortType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFirewallRulePortType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFirewallRuleProtocol");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFirewallRuleProtocol.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFirewallRuleset");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFirewallRuleset.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFirewallRulesetIpList");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFirewallRulesetIpList.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFirewallRulesetIpNetwork");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFirewallRulesetIpNetwork.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFirewallRulesetRulesetSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFirewallRulesetRulesetSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostFlagInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostFlagInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostForceMountedInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostForceMountedInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostGatewaySpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostGatewaySpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostGetShortNameFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostGetShortNameFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostGraphicsInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostGraphicsInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostGraphicsInfoGraphicsType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostGraphicsInfoGraphicsType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostHardwareElementInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostHardwareElementInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostHardwareElementStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostHardwareElementStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostHardwareInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostHardwareInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostHardwareStatusInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostHardwareStatusInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostHardwareSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostHardwareSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostHasComponentFailure");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostHasComponentFailure.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostHasComponentFailureHostComponentType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostHasComponentFailureHostComponentType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostHostBusAdapter");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostHostBusAdapter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostHyperThreadScheduleInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostHyperThreadScheduleInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostImageAcceptanceLevel");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostImageAcceptanceLevel.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostImageProfileSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostImageProfileSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInAuditModeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInAuditModeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostIncompatibleForFaultTolerance");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostIncompatibleForFaultTolerance.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostIncompatibleForFaultToleranceReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostIncompatibleForFaultToleranceReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostIncompatibleForRecordReplay");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostIncompatibleForRecordReplay.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings23() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "HostIncompatibleForRecordReplayReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostIncompatibleForRecordReplayReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInDomain");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInDomain.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiHba");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiHba.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiHbaAuthenticationCapabilities");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiHbaAuthenticationCapabilities.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiHbaAuthenticationProperties");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiHbaAuthenticationProperties.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiHbaChapAuthenticationType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiHbaChapAuthenticationType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiHbaDigestCapabilities");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiHbaDigestCapabilities.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiHbaDigestProperties");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiHbaDigestProperties.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiHbaDigestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiHbaDigestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiHbaDiscoveryCapabilities");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiHbaDiscoveryCapabilities.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiHbaDiscoveryProperties");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiHbaDiscoveryProperties.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiHbaIPCapabilities");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiHbaIPCapabilities.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiHbaIPProperties");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiHbaIPProperties.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiHbaIPv6Properties");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiHbaIPv6Properties.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiHbaIscsiIpv6Address");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiHbaIscsiIpv6Address.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiHbaIscsiIpv6AddressAddressConfigurationType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiHbaIscsiIpv6AddressAddressConfigurationType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiHbaIscsiIpv6AddressIPv6AddressOperation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiHbaIscsiIpv6AddressIPv6AddressOperation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiHbaNetworkBindingSupportType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiHbaNetworkBindingSupportType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiHbaParamValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiHbaParamValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiHbaSendTarget");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiHbaSendTarget.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiHbaStaticTarget");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiHbaStaticTarget.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiHbaStaticTargetTargetDiscoveryMethod");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiHbaStaticTargetTargetDiscoveryMethod.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiHbaTargetSet");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiHbaTargetSet.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInternetScsiTargetTransport");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInternetScsiTargetTransport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInventoryFull");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInventoryFull.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInventoryFullEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInventoryFullEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostInventoryUnreadableEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostInventoryUnreadableEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostIoFilterInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostIoFilterInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostIpChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostIpChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostIpConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostIpConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostIpConfigIpV6Address");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostIpConfigIpV6Address.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostIpConfigIpV6AddressConfigType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostIpConfigIpV6AddressConfigType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostIpConfigIpV6AddressConfiguration");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostIpConfigIpV6AddressConfiguration.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostIpConfigIpV6AddressStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostIpConfigIpV6AddressStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostIpInconsistentEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostIpInconsistentEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostIpmiInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostIpmiInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostIpRouteConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostIpRouteConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostIpRouteConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostIpRouteConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostIpRouteEntry");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostIpRouteEntry.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostIpRouteOp");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostIpRouteOp.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostIpRouteTableConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostIpRouteTableConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostIpRouteTableInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostIpRouteTableInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostIpToShortNameFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostIpToShortNameFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostIsolationIpPingFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostIsolationIpPingFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostLicensableResourceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostLicensableResourceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostLicensableResourceKey");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostLicensableResourceKey.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostLicenseConnectInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostLicenseConnectInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostLicenseExpiredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostLicenseExpiredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostLicenseSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostLicenseSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostListSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostListSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostListSummaryGatewaySummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostListSummaryGatewaySummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostListSummaryQuickStats");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostListSummaryQuickStats.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostLocalAuthenticationInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostLocalAuthenticationInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostLocalFileSystemVolume");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostLocalFileSystemVolume.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostLocalFileSystemVolumeSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostLocalFileSystemVolumeSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostLocalPortCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostLocalPortCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostLockdownMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostLockdownMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostLowLevelProvisioningManagerDiskLayoutSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostLowLevelProvisioningManagerDiskLayoutSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostLowLevelProvisioningManagerFileDeleteResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostLowLevelProvisioningManagerFileDeleteResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostLowLevelProvisioningManagerFileDeleteSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostLowLevelProvisioningManagerFileDeleteSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostLowLevelProvisioningManagerFileReserveResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostLowLevelProvisioningManagerFileReserveResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostLowLevelProvisioningManagerFileReserveSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostLowLevelProvisioningManagerFileReserveSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostLowLevelProvisioningManagerFileType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostLowLevelProvisioningManagerFileType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostLowLevelProvisioningManagerReloadTarget");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostLowLevelProvisioningManagerReloadTarget.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostLowLevelProvisioningManagerSnapshotLayoutSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostLowLevelProvisioningManagerSnapshotLayoutSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostLowLevelProvisioningManagerVmMigrationStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostLowLevelProvisioningManagerVmMigrationStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostLowLevelProvisioningManagerVmRecoveryInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostLowLevelProvisioningManagerVmRecoveryInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostMaintenanceSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostMaintenanceSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostMemberHealthCheckResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostMemberHealthCheckResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostMemberRuntimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostMemberRuntimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostMemberUplinkHealthCheckResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostMemberUplinkHealthCheckResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostMemoryProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostMemoryProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostMemorySpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostMemorySpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostMissingNetworksEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostMissingNetworksEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostMonitoringStateChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostMonitoringStateChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostMountInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostMountInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostMountInfoInaccessibleReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostMountInfoInaccessibleReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostMountMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostMountMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostMultipathInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostMultipathInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostMultipathInfoFixedLogicalUnitPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostMultipathInfoFixedLogicalUnitPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostMultipathInfoLogicalUnit");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostMultipathInfoLogicalUnit.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostMultipathInfoLogicalUnitPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostMultipathInfoLogicalUnitPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostMultipathInfoLogicalUnitStorageArrayTypePolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostMultipathInfoLogicalUnitStorageArrayTypePolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostMultipathInfoPath");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostMultipathInfoPath.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostMultipathStateInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostMultipathStateInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostMultipathStateInfoPath");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostMultipathStateInfoPath.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNasVolume");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNasVolume.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNasVolumeConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNasVolumeConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNasVolumeSecurityType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNasVolumeSecurityType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNasVolumeSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNasVolumeSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNasVolumeUserInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNasVolumeUserInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNatService");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNatService.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNatServiceConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNatServiceConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNatServiceNameServiceSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNatServiceNameServiceSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNatServicePortForwardSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNatServicePortForwardSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNatServiceSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNatServiceSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNetCapabilities");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNetCapabilities.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNetOffloadCapabilities");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNetOffloadCapabilities.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNetStackInstance");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNetStackInstance.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNetStackInstanceCongestionControlAlgorithmType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNetStackInstanceCongestionControlAlgorithmType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

    }
    private void addBindings24() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "HostNetStackInstanceSystemStackKey");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNetStackInstanceSystemStackKey.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNetworkConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNetworkConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNetworkConfigNetStackSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNetworkConfigNetStackSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNetworkConfigResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNetworkConfigResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNetworkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNetworkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNetworkPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNetworkPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNetworkResourceRuntime");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNetworkResourceRuntime.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNetworkSecurityPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNetworkSecurityPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNetworkTrafficShapingPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNetworkTrafficShapingPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNewNetworkConnectInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNewNetworkConnectInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNicFailureCriteria");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNicFailureCriteria.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNicOrderPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNicOrderPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNicTeamingPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNicTeamingPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNoAvailableNetworksEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNoAvailableNetworksEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNoHAEnabledPortGroupsEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNoHAEnabledPortGroupsEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNonCompliantEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNonCompliantEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNoRedundantManagementNetworkEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNoRedundantManagementNetworkEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNotConnected");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNotConnected.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNotInClusterEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNotInClusterEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNotReachable");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNotReachable.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNtpConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNtpConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNumaInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNumaInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNumaNode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNumaNode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNumericSensorHealthState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNumericSensorHealthState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNumericSensorInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNumericSensorInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostNumericSensorType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostNumericSensorType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostOpaqueNetworkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostOpaqueNetworkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostOpaqueSwitch");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostOpaqueSwitch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostOpaqueSwitchOpaqueSwitchState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostOpaqueSwitchOpaqueSwitchState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostOpaqueSwitchPhysicalNicZone");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostOpaqueSwitchPhysicalNicZone.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostOvercommittedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostOvercommittedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostParallelScsiHba");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostParallelScsiHba.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostParallelScsiTargetTransport");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostParallelScsiTargetTransport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPatchManagerInstallState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPatchManagerInstallState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPatchManagerIntegrityStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPatchManagerIntegrityStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPatchManagerLocator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPatchManagerLocator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPatchManagerPatchManagerOperationSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPatchManagerPatchManagerOperationSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPatchManagerReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPatchManagerReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPatchManagerResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPatchManagerResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPatchManagerStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPatchManagerStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPatchManagerStatusPrerequisitePatch");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPatchManagerStatusPrerequisitePatch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPathSelectionPolicyOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPathSelectionPolicyOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPciDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPciDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPciPassthruConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPciPassthruConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPciPassthruInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPciPassthruInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPlacedVirtualNicIdentifier");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPlacedVirtualNicIdentifier.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPlugStoreTopology");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPlugStoreTopology.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPlugStoreTopologyAdapter");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPlugStoreTopologyAdapter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPlugStoreTopologyDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPlugStoreTopologyDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPlugStoreTopologyPath");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPlugStoreTopologyPath.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPlugStoreTopologyPlugin");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPlugStoreTopologyPlugin.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPlugStoreTopologyTarget");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPlugStoreTopologyTarget.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPnicNetworkResourceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPnicNetworkResourceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPortGroup");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPortGroup.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPortGroupConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPortGroupConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPortGroupPort");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPortGroupPort.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPortGroupProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPortGroupProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPortGroupSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPortGroupSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPosixAccountSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPosixAccountSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPowerOperationType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPowerOperationType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPowerOpFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPowerOpFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPowerPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPowerPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostPrimaryAgentNotShortNameEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostPrimaryAgentNotShortNameEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostProfileAppliedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostProfileAppliedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostProfileCompleteConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostProfileCompleteConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostProfileConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostProfileConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostProfileConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostProfileConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostProfileHostBasedConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostProfileHostBasedConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostProfileManagerAnswerFileStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostProfileManagerAnswerFileStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostProfileManagerConfigTaskList");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostProfileManagerConfigTaskList.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostProfileManagerTaskListRequirement");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostProfileManagerTaskListRequirement.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostProfileSerializedHostProfileSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostProfileSerializedHostProfileSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostProtocolEndpoint");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostProtocolEndpoint.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostProtocolEndpointPEType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostProtocolEndpointPEType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostProxySwitch");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostProxySwitch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostProxySwitchConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostProxySwitchConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostProxySwitchHostLagConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostProxySwitchHostLagConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostProxySwitchSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostProxySwitchSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostReconnectionFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostReconnectionFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostReliableMemoryInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostReliableMemoryInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostRemovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostRemovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostReplayUnsupportedReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostReplayUnsupportedReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostResignatureRescanResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostResignatureRescanResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostRuntimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostRuntimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostRuntimeInfoNetStackInstanceRuntimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostRuntimeInfoNetStackInstanceRuntimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostRuntimeInfoNetStackInstanceRuntimeInfoState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostRuntimeInfoNetStackInstanceRuntimeInfoState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostRuntimeInfoNetworkRuntimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostRuntimeInfoNetworkRuntimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostScsiDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostScsiDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostScsiDiskPartition");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostScsiDiskPartition.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostScsiTopology");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostScsiTopology.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostScsiTopologyInterface");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostScsiTopologyInterface.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostScsiTopologyLun");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostScsiTopologyLun.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostScsiTopologyTarget");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostScsiTopologyTarget.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSecuritySpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSecuritySpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostService");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostService.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostServiceConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostServiceConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostServiceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostServiceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostServicePolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostServicePolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostServiceSourcePackage");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostServiceSourcePackage.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostServiceTicket");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostServiceTicket.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings25() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "HostShortNameInconsistentEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostShortNameInconsistentEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostShortNameToIpFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostShortNameToIpFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostShutdownEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostShutdownEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSnmpAgentCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSnmpAgentCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSnmpConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSnmpConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSnmpDestination");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSnmpDestination.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSnmpSystemAgentLimits");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSnmpSystemAgentLimits.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSriovConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSriovConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSriovInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSriovInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSslThumbprintInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSslThumbprintInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostStandbyMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostStandbyMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostStatusChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostStatusChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostStorageArrayTypePolicyOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostStorageArrayTypePolicyOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostStorageDeviceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostStorageDeviceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostStorageElementInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostStorageElementInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostStorageOperationalInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostStorageOperationalInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostStorageSystemDiskLocatorLedResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostStorageSystemDiskLocatorLedResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostStorageSystemScsiLunResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostStorageSystemScsiLunResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostStorageSystemVmfsVolumeResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostStorageSystemVmfsVolumeResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSyncFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSyncFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSystemConnectionState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSystemConnectionState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSystemHealthInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSystemHealthInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSystemIdentificationInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSystemIdentificationInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSystemIdentificationInfoIdentifier");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSystemIdentificationInfoIdentifier.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSystemInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSystemInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSystemPowerState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSystemPowerState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSystemReconnectSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSystemReconnectSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSystemResourceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSystemResourceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSystemSwapConfiguration");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSystemSwapConfiguration.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSystemSwapConfigurationDatastoreOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSystemSwapConfigurationDatastoreOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSystemSwapConfigurationDisabledOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSystemSwapConfigurationDisabledOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSystemSwapConfigurationHostCacheOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSystemSwapConfigurationHostCacheOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSystemSwapConfigurationHostLocalSwapOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSystemSwapConfigurationHostLocalSwapOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostSystemSwapConfigurationSystemSwapOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostSystemSwapConfigurationSystemSwapOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostTargetTransport");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostTargetTransport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostTpmAttestationReport");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostTpmAttestationReport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostTpmBootSecurityOptionEventDetails");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostTpmBootSecurityOptionEventDetails.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostTpmCommandEventDetails");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostTpmCommandEventDetails.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostTpmDigestInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostTpmDigestInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostTpmEventDetails");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostTpmEventDetails.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostTpmEventLogEntry");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostTpmEventLogEntry.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostTpmOptionEventDetails");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostTpmOptionEventDetails.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostTpmSoftwareComponentEventDetails");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostTpmSoftwareComponentEventDetails.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostUnresolvedVmfsExtent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostUnresolvedVmfsExtent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostUnresolvedVmfsExtentUnresolvedReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostUnresolvedVmfsExtentUnresolvedReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostUnresolvedVmfsResignatureSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostUnresolvedVmfsResignatureSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostUnresolvedVmfsResolutionResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostUnresolvedVmfsResolutionResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostUnresolvedVmfsResolutionSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostUnresolvedVmfsResolutionSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostUnresolvedVmfsResolutionSpecVmfsUuidResolution");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostUnresolvedVmfsResolutionSpecVmfsUuidResolution.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostUnresolvedVmfsVolume");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostUnresolvedVmfsVolume.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostUnresolvedVmfsVolumeResolveStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostUnresolvedVmfsVolumeResolveStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostUpgradeFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostUpgradeFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostUserWorldSwapNotEnabledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostUserWorldSwapNotEnabledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVfatVolume");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVfatVolume.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVffsSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVffsSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVffsVolume");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVffsVolume.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVFlashManagerVFlashCacheConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVFlashManagerVFlashCacheConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVFlashManagerVFlashCacheConfigInfoVFlashModuleConfigOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVFlashManagerVFlashCacheConfigInfoVFlashModuleConfigOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVFlashManagerVFlashCacheConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVFlashManagerVFlashCacheConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVFlashManagerVFlashConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVFlashManagerVFlashConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVFlashManagerVFlashResourceConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVFlashManagerVFlashResourceConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVFlashManagerVFlashResourceConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVFlashManagerVFlashResourceConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVFlashManagerVFlashResourceRunTimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVFlashManagerVFlashResourceRunTimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVFlashResourceConfigurationResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVFlashResourceConfigurationResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVirtualNic");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVirtualNic.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVirtualNicConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVirtualNicConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVirtualNicConnection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVirtualNicConnection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVirtualNicManagerInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVirtualNicManagerInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVirtualNicManagerNicType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVirtualNicManagerNicType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVirtualNicManagerNicTypeSelection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVirtualNicManagerNicTypeSelection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVirtualNicOpaqueNetworkSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVirtualNicOpaqueNetworkSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVirtualNicSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVirtualNicSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVirtualSwitch");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVirtualSwitch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVirtualSwitchAutoBridge");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVirtualSwitchAutoBridge.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVirtualSwitchBeaconConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVirtualSwitchBeaconConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVirtualSwitchBondBridge");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVirtualSwitchBondBridge.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVirtualSwitchBridge");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVirtualSwitchBridge.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVirtualSwitchConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVirtualSwitchConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVirtualSwitchSimpleBridge");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVirtualSwitchSimpleBridge.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVirtualSwitchSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVirtualSwitchSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVmciAccessManagerAccessSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVmciAccessManagerAccessSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVmciAccessManagerMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVmciAccessManagerMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVmfsRescanResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVmfsRescanResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVmfsSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVmfsSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVmfsVolume");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVmfsVolume.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVMotionCompatibility");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVMotionCompatibility.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVMotionConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVMotionConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVMotionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVMotionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVMotionNetConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVMotionNetConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVnicConnectedToCustomizedDVPortEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVnicConnectedToCustomizedDVPortEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVsanInternalSystemCmmdsQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVsanInternalSystemCmmdsQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVsanInternalSystemDeleteVsanObjectsResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVsanInternalSystemDeleteVsanObjectsResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVsanInternalSystemVsanObjectOperationResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVsanInternalSystemVsanObjectOperationResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVsanInternalSystemVsanPhysicalDiskDiagnosticsResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVsanInternalSystemVsanPhysicalDiskDiagnosticsResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVvolVolume");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVvolVolume.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostVvolVolumeSpecification");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostVvolVolumeSpecification.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostWwnChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostWwnChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HostWwnConflictEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HostWwnConflictEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HotSnapshotMoveNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HotSnapshotMoveNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HourlyTaskScheduler");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HourlyTaskScheduler.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings26() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "HttpNfcLeaseDatastoreLeaseInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HttpNfcLeaseDatastoreLeaseInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HttpNfcLeaseDeviceUrl");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HttpNfcLeaseDeviceUrl.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HttpNfcLeaseHostInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HttpNfcLeaseHostInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HttpNfcLeaseInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HttpNfcLeaseInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HttpNfcLeaseManifestEntry");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HttpNfcLeaseManifestEntry.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "HttpNfcLeaseState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.HttpNfcLeaseState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IDEDiskNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IDEDiskNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ImportHostAddFailure");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ImportHostAddFailure.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ImportOperationBulkFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ImportOperationBulkFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ImportOperationBulkFaultFaultOnImport");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ImportOperationBulkFaultFaultOnImport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ImportSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ImportSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InaccessibleDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InaccessibleDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InaccessibleFTMetadataDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InaccessibleFTMetadataDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InaccessibleVFlashSource");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InaccessibleVFlashSource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IncompatibleDefaultDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IncompatibleDefaultDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IncompatibleHostForFtSecondary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IncompatibleHostForFtSecondary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IncompatibleHostForVmReplication");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IncompatibleHostForVmReplication.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IncompatibleHostForVmReplicationIncompatibleReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IncompatibleHostForVmReplicationIncompatibleReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IncompatibleSetting");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IncompatibleSetting.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IncorrectFileType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IncorrectFileType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IncorrectHostInformation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IncorrectHostInformation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IncorrectHostInformationEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IncorrectHostInformationEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IndependentDiskVMotionNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IndependentDiskVMotionNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InfoUpgradeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InfoUpgradeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InheritablePolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InheritablePolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InsufficientAgentVmsDeployed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InsufficientAgentVmsDeployed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InsufficientCpuResourcesFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InsufficientCpuResourcesFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InsufficientDisks");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InsufficientDisks.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InsufficientFailoverResourcesEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InsufficientFailoverResourcesEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InsufficientFailoverResourcesFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InsufficientFailoverResourcesFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InsufficientGraphicsResourcesFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InsufficientGraphicsResourcesFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InsufficientHostCapacityFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InsufficientHostCapacityFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InsufficientHostCpuCapacityFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InsufficientHostCpuCapacityFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InsufficientHostMemoryCapacityFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InsufficientHostMemoryCapacityFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InsufficientMemoryResourcesFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InsufficientMemoryResourcesFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InsufficientNetworkCapacity");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InsufficientNetworkCapacity.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InsufficientNetworkResourcePoolCapacity");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InsufficientNetworkResourcePoolCapacity.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InsufficientPerCpuCapacity");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InsufficientPerCpuCapacity.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InsufficientResourcesFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InsufficientResourcesFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InsufficientStandbyCpuResource");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InsufficientStandbyCpuResource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InsufficientStandbyMemoryResource");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InsufficientStandbyMemoryResource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InsufficientStandbyResource");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InsufficientStandbyResource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InsufficientStorageIops");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InsufficientStorageIops.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InsufficientStorageSpace");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InsufficientStorageSpace.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InsufficientVFlashResourcesFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InsufficientVFlashResourcesFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InternetScsiSnsDiscoveryMethod");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InternetScsiSnsDiscoveryMethod.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IntExpression");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IntExpression.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IntOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IntOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IntPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IntPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InUseFeatureManipulationDisallowed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InUseFeatureManipulationDisallowed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidAffinitySettingFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidAffinitySettingFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidBmcRole");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidBmcRole.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidBundle");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidBundle.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidCAMCertificate");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidCAMCertificate.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidCAMServer");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidCAMServer.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidClientCertificate");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidClientCertificate.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidCollectorVersion");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidCollectorVersion.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidController");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidDasConfigArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidDasConfigArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidDasConfigArgumentEntryForInvalidArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidDasConfigArgumentEntryForInvalidArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidDasRestartPriorityForFtVm");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidDasRestartPriorityForFtVm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidDatastorePath");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidDatastorePath.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidDatastoreState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidDatastoreState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidDeviceBacking");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidDeviceBacking.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidDeviceOperation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidDeviceOperation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidDeviceSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidDeviceSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidDiskFormat");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidDiskFormat.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidDrsBehaviorForFtVm");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidDrsBehaviorForFtVm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidEditionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidEditionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidEditionLicense");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidEditionLicense.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidFolder");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidFolder.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidFormat");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidFormat.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidGuestLogin");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidGuestLogin.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidHostConnectionState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidHostConnectionState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidHostName");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidHostName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidHostState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidHostState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidIndexArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidIndexArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidIpfixConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidIpfixConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidIpmiLoginInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidIpmiLoginInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidIpmiMacAddress");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidIpmiMacAddress.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidLicense");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidLicense.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidLocale");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidLocale.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidLogin");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidLogin.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidName");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidNasCredentials");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidNasCredentials.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidNetworkInType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidNetworkInType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidNetworkResource");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidNetworkResource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidOperationOnSecondaryVm");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidOperationOnSecondaryVm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidPowerState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidPowerState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidPrivilege");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidPrivilege.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidProfileReferenceHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidProfileReferenceHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidProfileReferenceHostReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidProfileReferenceHostReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidProperty");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidProperty.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidPropertyType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidPropertyType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidPropertyValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidPropertyValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidRequest");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidRequest.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidResourcePoolStructureFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidResourcePoolStructureFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings27() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidSnapshotFormat");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidSnapshotFormat.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InvalidVmConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InvalidVmConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InventoryDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InventoryDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "InventoryHasStandardAloneHosts");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.InventoryHasStandardAloneHosts.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IoFilterHostIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IoFilterHostIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IoFilterInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IoFilterInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IoFilterOperation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IoFilterOperation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IoFilterQueryIssueResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IoFilterQueryIssueResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IORMNotSupportedHostOnDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IORMNotSupportedHostOnDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IpAddress");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IpAddress.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IpAddressProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IpAddressProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IpHostnameGeneratorError");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IpHostnameGeneratorError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IpPool");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IpPool.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IpPoolAssociation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IpPoolAssociation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IpPoolIpPoolConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IpPoolIpPoolConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IpPoolManagerIpAllocation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IpPoolManagerIpAllocation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IpRange");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IpRange.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IpRouteProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IpRouteProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IScsiBootFailureEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IScsiBootFailureEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IscsiDependencyEntity");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IscsiDependencyEntity.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IscsiFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IscsiFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IscsiFaultInvalidVnic");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IscsiFaultInvalidVnic.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IscsiFaultPnicInUse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IscsiFaultPnicInUse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IscsiFaultVnicAlreadyBound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IscsiFaultVnicAlreadyBound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IscsiFaultVnicHasActivePaths");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IscsiFaultVnicHasActivePaths.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IscsiFaultVnicHasMultipleUplinks");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IscsiFaultVnicHasMultipleUplinks.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IscsiFaultVnicHasNoUplinks");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IscsiFaultVnicHasNoUplinks.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IscsiFaultVnicHasWrongUplink");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IscsiFaultVnicHasWrongUplink.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IscsiFaultVnicInUse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IscsiFaultVnicInUse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IscsiFaultVnicIsLastPath");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IscsiFaultVnicIsLastPath.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IscsiFaultVnicNotBound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IscsiFaultVnicNotBound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IscsiFaultVnicNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IscsiFaultVnicNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IscsiMigrationDependency");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IscsiMigrationDependency.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IscsiPortInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IscsiPortInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IscsiPortInfoPathStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IscsiPortInfoPathStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IscsiStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IscsiStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IsoImageFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IsoImageFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "IsoImageFileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.IsoImageFileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "KernelModuleInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.KernelModuleInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "KernelModuleSectionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.KernelModuleSectionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "KeyAnyValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.KeyAnyValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "KeyValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.KeyValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LargeRDMConversionNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LargeRDMConversionNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LargeRDMNotSupportedOnDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LargeRDMNotSupportedOnDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LatencySensitivity");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LatencySensitivity.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LatencySensitivitySensitivityLevel");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LatencySensitivitySensitivityLevel.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LegacyNetworkInterfaceInUse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LegacyNetworkInterfaceInUse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseAssignmentFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseAssignmentFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseAssignmentFailedReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseAssignmentFailedReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseAssignmentManagerLicenseAssignment");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseAssignmentManagerLicenseAssignment.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseAvailabilityInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseAvailabilityInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseDiagnostics");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseDiagnostics.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseDowngradeDisallowed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseDowngradeDisallowed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseEntityNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseEntityNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseExpired");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseExpired.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseExpiredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseExpiredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseFeatureInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseFeatureInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseFeatureInfoSourceRestriction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseFeatureInfoSourceRestriction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseFeatureInfoState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseFeatureInfoState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseFeatureInfoUnit");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseFeatureInfoUnit.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseKeyEntityMismatch");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseKeyEntityMismatch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseManagerEvaluationInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseManagerEvaluationInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseManagerLicenseInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseManagerLicenseInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseManagerLicenseKey");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseManagerLicenseKey.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseManagerState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseManagerState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseNonComplianceEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseNonComplianceEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseReservationInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseReservationInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseReservationInfoState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseReservationInfoState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseRestricted");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseRestricted.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseRestrictedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseRestrictedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseServerAvailableEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseServerAvailableEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseServerSource");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseServerSource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseServerUnavailable");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseServerUnavailable.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseServerUnavailableEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseServerUnavailableEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseSource");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseSource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseSourceUnavailable");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseSourceUnavailable.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LicenseUsageInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LicenseUsageInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LimitExceeded");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LimitExceeded.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LinkDiscoveryProtocolConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LinkDiscoveryProtocolConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LinkDiscoveryProtocolConfigOperationType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LinkDiscoveryProtocolConfigOperationType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LinkDiscoveryProtocolConfigProtocolType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LinkDiscoveryProtocolConfigProtocolType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LinkLayerDiscoveryProtocolInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LinkLayerDiscoveryProtocolInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LinkProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LinkProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LinuxVolumeNotClean");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LinuxVolumeNotClean.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LocalDatastoreCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LocalDatastoreCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LocalDatastoreInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LocalDatastoreInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LocalizableMessage");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LocalizableMessage.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LocalizationManagerMessageCatalog");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LocalizationManagerMessageCatalog.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LocalizedMethodFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LocalizedMethodFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LocalLicenseSource");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LocalLicenseSource.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LocalTSMEnabledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LocalTSMEnabledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LockerMisconfiguredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LockerMisconfiguredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LockerReconfiguredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LockerReconfiguredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LogBundlingFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LogBundlingFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LongOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LongOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "LongPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.LongPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MacAddress");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MacAddress.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings28() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "MacRange");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MacRange.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MaintenanceModeFileMove");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MaintenanceModeFileMove.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ManagedByInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ManagedByInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ManagedEntityEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ManagedEntityEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ManagedEntityStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ManagedEntityStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ManagedObjectNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ManagedObjectNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ManagedObjectReference");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ManagedObjectReference.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(org.apache.axis.encoding.ser.BaseSerializerFactory.createFactory(org.apache.axis.encoding.ser.SimpleSerializerFactory.class, cls, qName));
            cachedDeserFactories.add(org.apache.axis.encoding.ser.BaseDeserializerFactory.createFactory(org.apache.axis.encoding.ser.SimpleDeserializerFactory.class, cls, qName));

            qName = new javax.xml.namespace.QName("urn:vim25", "MemoryFileFormatNotSupportedByDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MemoryFileFormatNotSupportedByDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MemoryHotPlugNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MemoryHotPlugNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MemorySizeNotRecommended");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MemorySizeNotRecommended.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MemorySizeNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MemorySizeNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MemorySizeNotSupportedByDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MemorySizeNotSupportedByDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MemorySnapshotOnIndependentDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MemorySnapshotOnIndependentDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MethodAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MethodAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MethodActionArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MethodActionArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MethodAlreadyDisabledFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MethodAlreadyDisabledFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MethodDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MethodDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MethodDisabled");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MethodDisabled.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MethodFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MethodFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MethodNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MethodNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MetricAlarmExpression");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MetricAlarmExpression.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MetricAlarmOperator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MetricAlarmOperator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MigrationDisabled");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MigrationDisabled.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MigrationErrorEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MigrationErrorEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MigrationEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MigrationEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MigrationFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MigrationFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MigrationFeatureNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MigrationFeatureNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MigrationHostErrorEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MigrationHostErrorEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MigrationHostWarningEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MigrationHostWarningEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MigrationNotReady");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MigrationNotReady.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MigrationResourceErrorEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MigrationResourceErrorEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MigrationResourceWarningEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MigrationResourceWarningEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MigrationWarningEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MigrationWarningEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MismatchedBundle");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MismatchedBundle.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MismatchedNetworkPolicies");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MismatchedNetworkPolicies.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MismatchedVMotionNetworkNames");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MismatchedVMotionNetworkNames.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MissingBmcSupport");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MissingBmcSupport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MissingController");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MissingController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MissingIpPool");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MissingIpPool.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MissingLinuxCustResources");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MissingLinuxCustResources.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MissingNetworkIpConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MissingNetworkIpConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MissingObject");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MissingObject.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MissingPowerOffConfiguration");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MissingPowerOffConfiguration.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MissingPowerOnConfiguration");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MissingPowerOnConfiguration.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MissingProperty");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MissingProperty.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MissingWindowsCustResources");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MissingWindowsCustResources.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MksConnectionLimitReached");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MksConnectionLimitReached.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ModeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ModeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MonthlyByDayTaskScheduler");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MonthlyByDayTaskScheduler.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MonthlyByWeekdayTaskScheduler");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MonthlyByWeekdayTaskScheduler.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MonthlyTaskScheduler");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MonthlyTaskScheduler.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MountError");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MountError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MtuMatchEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MtuMatchEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MtuMismatchEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MtuMismatchEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MultipathState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MultipathState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MultipleCertificatesVerifyFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MultipleCertificatesVerifyFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MultipleCertificatesVerifyFaultThumbprintData");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MultipleCertificatesVerifyFaultThumbprintData.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MultipleSnapshotsNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MultipleSnapshotsNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "MultiWriterNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.MultiWriterNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NamePasswordAuthentication");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NamePasswordAuthentication.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NamespaceFull");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NamespaceFull.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NamespaceLimitReached");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NamespaceLimitReached.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NamespaceWriteProtected");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NamespaceWriteProtected.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NasConfigFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NasConfigFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NasConnectionLimitReached");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NasConnectionLimitReached.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NASDatastoreCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NASDatastoreCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NasDatastoreInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NasDatastoreInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NasSessionCredentialConflict");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NasSessionCredentialConflict.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NasStorageProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NasStorageProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NasVolumeNotMounted");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NasVolumeNotMounted.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NegatableExpression");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NegatableExpression.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetBIOSConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetBIOSConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetBIOSConfigInfoMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetBIOSConfigInfoMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetDhcpConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetDhcpConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetDhcpConfigInfoDhcpOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetDhcpConfigInfoDhcpOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetDhcpConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetDhcpConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetDhcpConfigSpecDhcpOptionsSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetDhcpConfigSpecDhcpOptionsSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetDnsConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetDnsConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetDnsConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetDnsConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetIpConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetIpConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetIpConfigInfoIpAddress");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetIpConfigInfoIpAddress.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetIpConfigInfoIpAddressOrigin");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetIpConfigInfoIpAddressOrigin.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetIpConfigInfoIpAddressStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetIpConfigInfoIpAddressStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetIpConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetIpConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetIpConfigSpecIpAddressSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetIpConfigSpecIpAddressSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetIpRouteConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetIpRouteConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetIpRouteConfigInfoGateway");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetIpRouteConfigInfoGateway.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetIpRouteConfigInfoIpRoute");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetIpRouteConfigInfoIpRoute.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetIpRouteConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetIpRouteConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetIpRouteConfigSpecGatewaySpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetIpRouteConfigSpecGatewaySpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetIpRouteConfigSpecIpRouteSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetIpRouteConfigSpecIpRouteSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetIpStackInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetIpStackInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetIpStackInfoDefaultRouter");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetIpStackInfoDefaultRouter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetIpStackInfoEntryType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetIpStackInfoEntryType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetIpStackInfoNetToMedia");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetIpStackInfoNetToMedia.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetIpStackInfoPreference");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetIpStackInfoPreference.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetStackInstanceProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetStackInstanceProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetworkCopyFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetworkCopyFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetworkDisruptedAndConfigRolledBack");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetworkDisruptedAndConfigRolledBack.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetworkEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetworkEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings29() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "NetworkInaccessible");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetworkInaccessible.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetworkPolicyProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetworkPolicyProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetworkProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetworkProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetworkProfileDnsConfigProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetworkProfileDnsConfigProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetworkRollbackEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetworkRollbackEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetworksMayNotBeTheSame");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetworksMayNotBeTheSame.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NetworkSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NetworkSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NicSettingMismatch");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NicSettingMismatch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoAccessUserEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoAccessUserEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoActiveHostInCluster");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoActiveHostInCluster.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoAvailableIp");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoAvailableIp.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoClientCertificate");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoClientCertificate.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoCompatibleDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoCompatibleDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoCompatibleHardAffinityHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoCompatibleHardAffinityHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoCompatibleHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoCompatibleHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoCompatibleHostWithAccessToDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoCompatibleHostWithAccessToDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoCompatibleSoftAffinityHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoCompatibleSoftAffinityHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoConnectedDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoConnectedDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoDatastoresConfiguredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoDatastoresConfiguredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoDiskFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoDiskFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoDiskSpace");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoDiskSpace.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoDisksToCustomize");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoDisksToCustomize.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoGateway");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoGateway.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoGuestHeartbeat");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoGuestHeartbeat.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoHostSuitableForFtSecondary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoHostSuitableForFtSecondary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoLicenseEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoLicenseEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoLicenseServerConfigured");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoLicenseServerConfigured.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoMaintenanceModeDrsRecommendationForVM");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoMaintenanceModeDrsRecommendationForVM.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NonADUserRequired");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NonADUserRequired.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NonHomeRDMVMotionNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NonHomeRDMVMotionNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NonPersistentDisksNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NonPersistentDisksNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NonVIWorkloadDetectedOnDatastoreEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NonVIWorkloadDetectedOnDatastoreEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NonVmwareOuiMacNotSupportedHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NonVmwareOuiMacNotSupportedHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoPeerHostFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoPeerHostFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoPermission");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoPermission.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoPermissionOnAD");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoPermissionOnAD.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoPermissionOnHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoPermissionOnHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoPermissionOnNasVolume");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoPermissionOnNasVolume.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoSubjectName");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoSubjectName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotADirectory");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotADirectory.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotAFile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotAFile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotAuthenticated");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotAuthenticated.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotEnoughCpus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotEnoughCpus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotEnoughLicenses");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotEnoughLicenses.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotEnoughLogicalCpus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotEnoughLogicalCpus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotEnoughResourcesToStartVmEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotEnoughResourcesToStartVmEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotImplemented");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotImplemented.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotSupportedDeviceForFT");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotSupportedDeviceForFT.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotSupportedDeviceForFTDeviceType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotSupportedDeviceForFTDeviceType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotSupportedHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotSupportedHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotSupportedHostForChecksum");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotSupportedHostForChecksum.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotSupportedHostForVFlash");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotSupportedHostForVFlash.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotSupportedHostForVmcp");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotSupportedHostForVmcp.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotSupportedHostForVmemFile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotSupportedHostForVmemFile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotSupportedHostForVsan");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotSupportedHostForVsan.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotSupportedHostInCluster");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotSupportedHostInCluster.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotSupportedHostInDvs");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotSupportedHostInDvs.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotSupportedHostInHACluster");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotSupportedHostInHACluster.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NotUserConfigurableProperty");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NotUserConfigurableProperty.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoVcManagedIpConfigured");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoVcManagedIpConfigured.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoVirtualNic");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoVirtualNic.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NoVmInVApp");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NoVmInVApp.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NumericRange");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NumericRange.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NumPortsProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NumPortsProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NumVirtualCoresPerSocketNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NumVirtualCoresPerSocketNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NumVirtualCpusExceedsLimit");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NumVirtualCpusExceedsLimit.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NumVirtualCpusIncompatible");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NumVirtualCpusIncompatible.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NumVirtualCpusIncompatibleReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NumVirtualCpusIncompatibleReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "NumVirtualCpusNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.NumVirtualCpusNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ObjectContent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ObjectContent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ObjectSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ObjectSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ObjectUpdate");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ObjectUpdate.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ObjectUpdateKind");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ObjectUpdateKind.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OnceTaskScheduler");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OnceTaskScheduler.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OpaqueNetworkSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OpaqueNetworkSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OpaqueNetworkTargetInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OpaqueNetworkTargetInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OperationDisabledByGuest");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OperationDisabledByGuest.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OperationDisallowedOnHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OperationDisallowedOnHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OperationNotSupportedByGuest");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OperationNotSupportedByGuest.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OptionDef");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OptionDef.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OptionProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OptionProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OptionType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OptionType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OptionValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OptionValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OrAlarmExpression");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OrAlarmExpression.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OutOfBounds");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OutOfBounds.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OutOfSyncDvsHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OutOfSyncDvsHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfAttribute");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfAttribute.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfConnectedDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfConnectedDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfConnectedDeviceFloppy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfConnectedDeviceFloppy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfConnectedDeviceIso");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfConnectedDeviceIso.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfConstraint");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfConstraint.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfConsumerCallbackFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfConsumerCallbackFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfConsumerCommunicationError");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfConsumerCommunicationError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfConsumerFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfConsumerFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfConsumerInvalidSection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfConsumerInvalidSection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfConsumerOstNode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfConsumerOstNode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfConsumerOstNodeType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfConsumerOstNodeType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

    }
    private void addBindings30() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "OvfConsumerOvfSection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfConsumerOvfSection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfConsumerPowerOnFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfConsumerPowerOnFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfConsumerUndeclaredSection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfConsumerUndeclaredSection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfConsumerUndefinedPrefix");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfConsumerUndefinedPrefix.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfConsumerValidationFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfConsumerValidationFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfCpuCompatibility");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfCpuCompatibility.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfCpuCompatibilityCheckNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfCpuCompatibilityCheckNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfCreateDescriptorParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfCreateDescriptorParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfCreateDescriptorResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfCreateDescriptorResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfCreateImportSpecParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfCreateImportSpecParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfCreateImportSpecParamsDiskProvisioningType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfCreateImportSpecParamsDiskProvisioningType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfCreateImportSpecResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfCreateImportSpecResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfDeploymentOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfDeploymentOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfDiskMappingNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfDiskMappingNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfDiskOrderConstraint");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfDiskOrderConstraint.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfDuplicatedElementBoundary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfDuplicatedElementBoundary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfDuplicatedPropertyIdExport");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfDuplicatedPropertyIdExport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfDuplicatedPropertyIdImport");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfDuplicatedPropertyIdImport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfDuplicateElement");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfDuplicateElement.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfElement");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfElement.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfElementInvalidValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfElementInvalidValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfExport");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfExport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfExportFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfExportFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfFile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfFile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfFileItem");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfFileItem.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfHardwareCheck");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfHardwareCheck.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfHardwareExport");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfHardwareExport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfHostResourceConstraint");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfHostResourceConstraint.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfHostValueNotParsed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfHostValueNotParsed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfImport");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfImport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfImportFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfImportFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfInternalError");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfInternalError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfInvalidPackage");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfInvalidPackage.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfInvalidValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfInvalidValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfInvalidValueConfiguration");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfInvalidValueConfiguration.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfInvalidValueEmpty");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfInvalidValueEmpty.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfInvalidValueFormatMalformed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfInvalidValueFormatMalformed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfInvalidValueReference");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfInvalidValueReference.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfInvalidVmName");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfInvalidVmName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfManagerCommonParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfManagerCommonParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfMappedOsId");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfMappedOsId.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfMissingAttribute");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfMissingAttribute.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfMissingElement");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfMissingElement.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfMissingElementNormalBoundary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfMissingElementNormalBoundary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfMissingHardware");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfMissingHardware.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfNetworkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfNetworkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfNetworkMapping");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfNetworkMapping.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfNetworkMappingNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfNetworkMappingNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfNoHostNic");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfNoHostNic.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfNoSpaceOnController");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfNoSpaceOnController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfNoSupportedHardwareFamily");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfNoSupportedHardwareFamily.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfOptionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfOptionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfParseDescriptorParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfParseDescriptorParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfParseDescriptorResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfParseDescriptorResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfProperty");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfProperty.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfPropertyExport");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfPropertyExport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfPropertyNetwork");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfPropertyNetwork.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfPropertyNetworkExport");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfPropertyNetworkExport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfPropertyQualifier");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfPropertyQualifier.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfPropertyQualifierDuplicate");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfPropertyQualifierDuplicate.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfPropertyQualifierIgnored");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfPropertyQualifierIgnored.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfPropertyType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfPropertyType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfPropertyValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfPropertyValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfResourceMap");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfResourceMap.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfSystemFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfSystemFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfToXmlUnsupportedElement");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfToXmlUnsupportedElement.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfUnableToExportDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfUnableToExportDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfUnexpectedElement");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfUnexpectedElement.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfUnknownDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfUnknownDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfUnknownDeviceBacking");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfUnknownDeviceBacking.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfUnknownEntity");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfUnknownEntity.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfUnsupportedAttribute");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfUnsupportedAttribute.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfUnsupportedAttributeValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfUnsupportedAttributeValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfUnsupportedDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfUnsupportedDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfUnsupportedDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfUnsupportedDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfUnsupportedDeviceExport");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfUnsupportedDeviceExport.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfUnsupportedDiskProvisioning");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfUnsupportedDiskProvisioning.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfUnsupportedElement");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfUnsupportedElement.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfUnsupportedElementValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfUnsupportedElementValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfUnsupportedPackage");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfUnsupportedPackage.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfUnsupportedSection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfUnsupportedSection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfUnsupportedSubType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfUnsupportedSubType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfUnsupportedType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfUnsupportedType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfValidateHostParams");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfValidateHostParams.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfValidateHostResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfValidateHostResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfWrongElement");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfWrongElement.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfWrongNamespace");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfWrongNamespace.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "OvfXmlFormat");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.OvfXmlFormat.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ParaVirtualSCSIController");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ParaVirtualSCSIController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ParaVirtualSCSIControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ParaVirtualSCSIControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PasswordField");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PasswordField.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PatchAlreadyInstalled");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PatchAlreadyInstalled.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PatchBinariesNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PatchBinariesNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PatchInstallFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PatchInstallFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PatchIntegrityError");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PatchIntegrityError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PatchMetadataCorrupted");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PatchMetadataCorrupted.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PatchMetadataInvalid");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PatchMetadataInvalid.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PatchMetadataNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PatchMetadataNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PatchMissingDependencies");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PatchMissingDependencies.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings31() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "PatchNotApplicable");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PatchNotApplicable.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PatchSuperseded");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PatchSuperseded.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PerfCompositeMetric");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PerfCompositeMetric.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PerfCounterInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PerfCounterInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PerfEntityMetric");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PerfEntityMetric.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PerfEntityMetricBase");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PerfEntityMetricBase.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PerfEntityMetricCSV");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PerfEntityMetricCSV.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PerfFormat");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PerfFormat.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PerfInterval");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PerfInterval.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PerfMetricId");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PerfMetricId.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PerfMetricIntSeries");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PerfMetricIntSeries.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PerfMetricSeries");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PerfMetricSeries.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PerfMetricSeriesCSV");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PerfMetricSeriesCSV.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PerformanceDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PerformanceDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PerformanceManagerCounterLevelMapping");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PerformanceManagerCounterLevelMapping.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PerformanceManagerUnit");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PerformanceManagerUnit.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PerformanceStatisticsDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PerformanceStatisticsDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PerfProviderSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PerfProviderSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PerfQuerySpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PerfQuerySpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PerfSampleInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PerfSampleInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PerfStatsType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PerfStatsType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PerfSummaryType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PerfSummaryType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "Permission");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.Permission.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PermissionAddedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PermissionAddedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PermissionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PermissionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PermissionProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PermissionProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PermissionRemovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PermissionRemovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PermissionUpdatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PermissionUpdatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PhysCompatRDMNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PhysCompatRDMNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PhysicalNic");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PhysicalNic.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PhysicalNicCdpDeviceCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PhysicalNicCdpDeviceCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PhysicalNicCdpInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PhysicalNicCdpInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PhysicalNicConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PhysicalNicConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PhysicalNicHint");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PhysicalNicHint.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PhysicalNicHintInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PhysicalNicHintInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PhysicalNicIpHint");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PhysicalNicIpHint.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PhysicalNicLinkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PhysicalNicLinkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PhysicalNicNameHint");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PhysicalNicNameHint.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PhysicalNicProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PhysicalNicProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PhysicalNicResourcePoolSchedulerDisallowedReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PhysicalNicResourcePoolSchedulerDisallowedReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PhysicalNicSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PhysicalNicSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PhysicalNicVmDirectPathGen2SupportedMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PhysicalNicVmDirectPathGen2SupportedMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PlacementAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PlacementAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PlacementAffinityRule");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PlacementAffinityRule.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PlacementAffinityRuleRuleScope");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PlacementAffinityRuleRuleScope.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PlacementAffinityRuleRuleType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PlacementAffinityRuleRuleType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PlacementRankResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PlacementRankResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PlacementRankSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PlacementRankSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PlacementResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PlacementResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PlacementSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PlacementSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PlacementSpecPlacementType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PlacementSpecPlacementType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PlatformConfigFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PlatformConfigFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PnicUplinkProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PnicUplinkProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PodDiskLocator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PodDiskLocator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PodStorageDrsEntry");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PodStorageDrsEntry.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PolicyOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PolicyOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PortGroupConnecteeType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PortGroupConnecteeType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PortGroupProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PortGroupProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PosixUserSearchResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PosixUserSearchResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PowerOnFtSecondaryFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PowerOnFtSecondaryFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PowerOnFtSecondaryTimedout");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PowerOnFtSecondaryTimedout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PowerSystemCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PowerSystemCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PowerSystemInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PowerSystemInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PrivilegeAvailability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PrivilegeAvailability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PrivilegePolicyDef");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PrivilegePolicyDef.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProductComponentInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProductComponentInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileApplyProfileElement");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileApplyProfileElement.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileApplyProfileProperty");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileApplyProfileProperty.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileAssociatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileAssociatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileCompositeExpression");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileCompositeExpression.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileCompositePolicyOptionMetadata");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileCompositePolicyOptionMetadata.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileCreateSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileCreateSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileDeferredPolicyOptionParameter");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileDeferredPolicyOptionParameter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileDescriptionSection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileDescriptionSection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileDissociatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileDissociatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileExecuteError");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileExecuteError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileExecuteResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileExecuteResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileExecuteResultStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileExecuteResultStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileExpression");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileExpression.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileExpressionMetadata");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileExpressionMetadata.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileMetadata");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileMetadata.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileMetadataProfileSortSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileMetadataProfileSortSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileNumericComparator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileNumericComparator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileParameterMetadata");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileParameterMetadata.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfilePolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfilePolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfilePolicyMetadata");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfilePolicyMetadata.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfilePolicyOptionMetadata");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfilePolicyOptionMetadata.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileProfileStructure");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileProfileStructure.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileProfileStructureProperty");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileProfileStructureProperty.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfilePropertyPath");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfilePropertyPath.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileReferenceHostChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileReferenceHostChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileRemovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileRemovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileSerializedCreateSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileSerializedCreateSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileSimpleExpression");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileSimpleExpression.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings32() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileUpdateFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileUpdateFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ProfileUpdateFailedUpdateFailure");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ProfileUpdateFailedUpdateFailure.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PropertyChange");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PropertyChange.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PropertyChangeOp");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PropertyChangeOp.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PropertyFilterSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PropertyFilterSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PropertyFilterUpdate");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PropertyFilterUpdate.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "PropertySpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.PropertySpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "QuestionPending");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.QuestionPending.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "QuiesceDatastoreIOForHAFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.QuiesceDatastoreIOForHAFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "QuiesceMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.QuiesceMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RawDiskNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RawDiskNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RDMConversionNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RDMConversionNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RDMNotPreserved");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RDMNotPreserved.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RDMNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RDMNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RDMNotSupportedOnDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RDMNotSupportedOnDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RDMPointsToInaccessibleDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RDMPointsToInaccessibleDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ReadHostResourcePoolTreeFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ReadHostResourcePoolTreeFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ReadOnlyDisksWithLegacyDestination");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ReadOnlyDisksWithLegacyDestination.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RebootRequired");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RebootRequired.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RecommendationReasonCode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RecommendationReasonCode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RecommendationType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RecommendationType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RecordReplayDisabled");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RecordReplayDisabled.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RecoveryEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RecoveryEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RecurrentTaskScheduler");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RecurrentTaskScheduler.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RemoteDeviceNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RemoteDeviceNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RemoteTSMEnabledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RemoteTSMEnabledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RemoveFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RemoveFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ReplicationConfigFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ReplicationConfigFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ReplicationConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ReplicationConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ReplicationDiskConfigFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ReplicationDiskConfigFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ReplicationDiskConfigFaultReasonForFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ReplicationDiskConfigFaultReasonForFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ReplicationFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ReplicationFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ReplicationIncompatibleWithFT");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ReplicationIncompatibleWithFT.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ReplicationInfoDiskSettings");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ReplicationInfoDiskSettings.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ReplicationInvalidOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ReplicationInvalidOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ReplicationNotSupportedOnHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ReplicationNotSupportedOnHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ReplicationVmConfigFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ReplicationVmConfigFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ReplicationVmConfigFaultReasonForFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ReplicationVmConfigFaultReasonForFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ReplicationVmFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ReplicationVmFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ReplicationVmFaultReasonForFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ReplicationVmFaultReasonForFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ReplicationVmInProgressFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ReplicationVmInProgressFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ReplicationVmInProgressFaultActivity");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ReplicationVmInProgressFaultActivity.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ReplicationVmProgressInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ReplicationVmProgressInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ReplicationVmState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ReplicationVmState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RequestCanceled");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RequestCanceled.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ResourceAllocationInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ResourceAllocationInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ResourceAllocationOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ResourceAllocationOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ResourceConfigOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ResourceConfigOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ResourceConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ResourceConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ResourceInUse");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ResourceInUse.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ResourceNotAvailable");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ResourceNotAvailable.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ResourcePoolCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ResourcePoolCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ResourcePoolDestroyedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ResourcePoolDestroyedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ResourcePoolEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ResourcePoolEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ResourcePoolEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ResourcePoolEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ResourcePoolMovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ResourcePoolMovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ResourcePoolQuickStats");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ResourcePoolQuickStats.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ResourcePoolReconfiguredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ResourcePoolReconfiguredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ResourcePoolResourceUsage");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ResourcePoolResourceUsage.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ResourcePoolRuntimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ResourcePoolRuntimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ResourcePoolSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ResourcePoolSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ResourceViolatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ResourceViolatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RestrictedByAdministrator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RestrictedByAdministrator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RestrictedVersion");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RestrictedVersion.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RetrieveOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RetrieveOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RetrievePropertiesExRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RetrievePropertiesExRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RetrievePropertiesRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RetrievePropertiesRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RetrieveResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RetrieveResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RoleAddedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RoleAddedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RoleEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RoleEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RoleEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RoleEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RoleRemovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RoleRemovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RoleUpdatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RoleUpdatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RollbackEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RollbackEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RollbackFailure");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RollbackFailure.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RuleViolation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RuleViolation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RunScriptAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RunScriptAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "RuntimeFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.RuntimeFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SAMLTokenAuthentication");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SAMLTokenAuthentication.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScheduledHardwareUpgradeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScheduledHardwareUpgradeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScheduledHardwareUpgradeInfoHardwareUpgradePolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScheduledHardwareUpgradeInfoHardwareUpgradePolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScheduledHardwareUpgradeInfoHardwareUpgradeStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScheduledHardwareUpgradeInfoHardwareUpgradeStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskCompletedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScheduledTaskCompletedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScheduledTaskCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScheduledTaskDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskDetail");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScheduledTaskDetail.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskEmailCompletedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScheduledTaskEmailCompletedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskEmailFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScheduledTaskEmailFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScheduledTaskEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScheduledTaskEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScheduledTaskFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScheduledTaskInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskReconfiguredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScheduledTaskReconfiguredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskRemovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScheduledTaskRemovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScheduledTaskSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScheduledTaskStartedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScheduledTaskStartedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScsiLun");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScsiLun.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScsiLunCapabilities");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScsiLunCapabilities.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScsiLunDescriptor");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScsiLunDescriptor.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScsiLunDescriptorQuality");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScsiLunDescriptorQuality.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

    }
    private void addBindings33() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "ScsiLunDurableName");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScsiLunDurableName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScsiLunState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScsiLunState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScsiLunType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScsiLunType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ScsiLunVStorageSupportStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ScsiLunVStorageSupportStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SecondaryVmAlreadyDisabled");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SecondaryVmAlreadyDisabled.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SecondaryVmAlreadyEnabled");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SecondaryVmAlreadyEnabled.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SecondaryVmAlreadyRegistered");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SecondaryVmAlreadyRegistered.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SecondaryVmNotRegistered");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SecondaryVmNotRegistered.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SecurityError");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SecurityError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SecurityProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SecurityProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SelectionSet");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SelectionSet.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SelectionSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SelectionSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SendEmailAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SendEmailAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SendSNMPAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SendSNMPAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ServerLicenseExpiredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ServerLicenseExpiredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ServerStartedSessionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ServerStartedSessionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ServiceConsolePortGroupProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ServiceConsolePortGroupProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ServiceConsoleReservationInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ServiceConsoleReservationInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ServiceContent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ServiceContent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ServiceLocator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ServiceLocator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ServiceLocatorCredential");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ServiceLocatorCredential.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ServiceLocatorNamePassword");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ServiceLocatorNamePassword.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ServiceLocatorSAMLCredential");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ServiceLocatorSAMLCredential.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ServiceManagerServiceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ServiceManagerServiceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ServiceProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ServiceProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SeSparseVirtualDiskSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SeSparseVirtualDiskSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SessionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SessionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SessionManagerGenericServiceTicket");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SessionManagerGenericServiceTicket.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SessionManagerHttpServiceRequestSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SessionManagerHttpServiceRequestSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SessionManagerHttpServiceRequestSpecMethod");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SessionManagerHttpServiceRequestSpecMethod.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SessionManagerLocalTicket");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SessionManagerLocalTicket.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SessionManagerServiceRequestSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SessionManagerServiceRequestSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SessionManagerVmomiServiceRequestSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SessionManagerVmomiServiceRequestSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SessionTerminatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SessionTerminatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SharedBusControllerNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SharedBusControllerNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SharesInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SharesInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SharesLevel");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SharesLevel.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SharesOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SharesOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ShrinkDiskFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ShrinkDiskFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SimpleCommandEncoding");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SimpleCommandEncoding.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SingleIp");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SingleIp.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SingleMac");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SingleMac.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SlpDiscoveryMethod");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SlpDiscoveryMethod.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SnapshotCloneNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SnapshotCloneNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SnapshotCopyNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SnapshotCopyNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SnapshotDisabled");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SnapshotDisabled.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SnapshotFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SnapshotFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SnapshotIncompatibleDeviceInVm");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SnapshotIncompatibleDeviceInVm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SnapshotLocked");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SnapshotLocked.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SnapshotMoveFromNonHomeNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SnapshotMoveFromNonHomeNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SnapshotMoveNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SnapshotMoveNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SnapshotMoveToNonHomeNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SnapshotMoveToNonHomeNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SnapshotNoChange");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SnapshotNoChange.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SnapshotRevertIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SnapshotRevertIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SoftRuleVioCorrectionDisallowed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SoftRuleVioCorrectionDisallowed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SoftRuleVioCorrectionImpact");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SoftRuleVioCorrectionImpact.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SsdDiskNotAvailable");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SsdDiskNotAvailable.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SSLDisabledFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SSLDisabledFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SSLVerifyFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SSLVerifyFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SSPIAuthentication");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SSPIAuthentication.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SSPIChallenge");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SSPIChallenge.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StateAlarmExpression");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StateAlarmExpression.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StateAlarmOperator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StateAlarmOperator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StaticRouteProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StaticRouteProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsAutomationConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsAutomationConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsCannotMoveDiskInMultiWriterMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsCannotMoveDiskInMultiWriterMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsCannotMoveFTVm");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsCannotMoveFTVm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsCannotMoveIndependentDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsCannotMoveIndependentDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsCannotMoveManuallyPlacedSwapFile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsCannotMoveManuallyPlacedSwapFile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsCannotMoveManuallyPlacedVm");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsCannotMoveManuallyPlacedVm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsCannotMoveSharedDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsCannotMoveSharedDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsCannotMoveTemplate");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsCannotMoveTemplate.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsCannotMoveVmInUserFolder");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsCannotMoveVmInUserFolder.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsCannotMoveVmWithMountedCDROM");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsCannotMoveVmWithMountedCDROM.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsCannotMoveVmWithNoFilesInLayout");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsCannotMoveVmWithNoFilesInLayout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsDatacentersCannotShareDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsDatacentersCannotShareDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsDisabledOnVm");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsDisabledOnVm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsHbrDiskNotMovable");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsHbrDiskNotMovable.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsHmsMoveInProgress");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsHmsMoveInProgress.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsHmsUnreachable");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsHmsUnreachable.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsIolbDisabledInternally");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsIolbDisabledInternally.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsIoLoadBalanceConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsIoLoadBalanceConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsOptionSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsOptionSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsPlacementRankVmSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsPlacementRankVmSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsPodConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsPodConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsPodConfigInfoBehavior");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsPodConfigInfoBehavior.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsPodConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsPodConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsPodSelectionSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsPodSelectionSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsRelocateDisabled");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsRelocateDisabled.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsSpaceLoadBalanceConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsSpaceLoadBalanceConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsSpaceLoadBalanceConfigSpaceThresholdMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsSpaceLoadBalanceConfigSpaceThresholdMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsStaleHmsCollection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsStaleHmsCollection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsUnableToMoveFiles");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsUnableToMoveFiles.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsVmConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsVmConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageDrsVmConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageDrsVmConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageIOAllocationInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageIOAllocationInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageIOAllocationOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageIOAllocationOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageIORMConfigOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageIORMConfigOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings34() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "StorageIORMConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageIORMConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageIORMInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageIORMInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageIORMThresholdMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageIORMThresholdMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageMigrationAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageMigrationAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StoragePerformanceSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StoragePerformanceSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StoragePlacementAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StoragePlacementAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StoragePlacementResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StoragePlacementResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StoragePlacementSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StoragePlacementSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StoragePlacementSpecPlacementType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StoragePlacementSpecPlacementType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StoragePodSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StoragePodSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageRequirement");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageRequirement.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageResourceManagerStorageProfileStatistics");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageResourceManagerStorageProfileStatistics.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageVmotionIncompatible");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageVmotionIncompatible.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StorageVMotionNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StorageVMotionNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StringExpression");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StringExpression.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StringOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StringOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "StringPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.StringPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SuspendedRelocateNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SuspendedRelocateNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SwapDatastoreNotWritableOnHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SwapDatastoreNotWritableOnHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SwapDatastoreUnset");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SwapDatastoreUnset.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SwapPlacementOverrideNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SwapPlacementOverrideNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SwitchIpUnset");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SwitchIpUnset.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SwitchNotInUpgradeMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SwitchNotInUpgradeMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "SystemError");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.SystemError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "Tag");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.Tag.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TaskDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TaskDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TaskEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TaskEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TaskFilterSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TaskFilterSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TaskFilterSpecByEntity");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TaskFilterSpecByEntity.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TaskFilterSpecByTime");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TaskFilterSpecByTime.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TaskFilterSpecByUsername");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TaskFilterSpecByUsername.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TaskFilterSpecRecursionOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TaskFilterSpecRecursionOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TaskFilterSpecTimeOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TaskFilterSpecTimeOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TaskInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TaskInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TaskInfoState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TaskInfoState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TaskInProgress");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TaskInProgress.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TaskReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TaskReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TaskReasonAlarm");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TaskReasonAlarm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TaskReasonSchedule");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TaskReasonSchedule.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TaskReasonSystem");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TaskReasonSystem.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TaskReasonUser");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TaskReasonUser.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TaskScheduler");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TaskScheduler.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TaskTimeoutEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TaskTimeoutEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TeamingMatchEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TeamingMatchEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TeamingMisMatchEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TeamingMisMatchEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TemplateBeingUpgradedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TemplateBeingUpgradedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TemplateConfigFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TemplateConfigFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TemplateConfigFileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TemplateConfigFileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TemplateUpgradedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TemplateUpgradedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TemplateUpgradeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TemplateUpgradeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TemplateUpgradeFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TemplateUpgradeFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ThirdPartyLicenseAssignmentFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ThirdPartyLicenseAssignmentFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ThirdPartyLicenseAssignmentFailedReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ThirdPartyLicenseAssignmentFailedReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TicketedSessionAuthentication");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TicketedSessionAuthentication.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "Timedout");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.Timedout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TimedOutHostOperationEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TimedOutHostOperationEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ToolsAlreadyUpgraded");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ToolsAlreadyUpgraded.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ToolsAutoUpgradeNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ToolsAutoUpgradeNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ToolsConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ToolsConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ToolsConfigInfoToolsLastInstallInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ToolsConfigInfoToolsLastInstallInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ToolsImageCopyFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ToolsImageCopyFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ToolsImageNotAvailable");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ToolsImageNotAvailable.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ToolsImageSignatureCheckFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ToolsImageSignatureCheckFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ToolsInstallationInProgress");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ToolsInstallationInProgress.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ToolsUnavailable");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ToolsUnavailable.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ToolsUpgradeCancelled");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ToolsUpgradeCancelled.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TooManyConcurrentNativeClones");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TooManyConcurrentNativeClones.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TooManyConsecutiveOverrides");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TooManyConsecutiveOverrides.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TooManyDevices");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TooManyDevices.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TooManyDisksOnLegacyHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TooManyDisksOnLegacyHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TooManyGuestLogons");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TooManyGuestLogons.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TooManyHosts");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TooManyHosts.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TooManyNativeCloneLevels");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TooManyNativeCloneLevels.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TooManyNativeClonesOnFile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TooManyNativeClonesOnFile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TooManySnapshotLevels");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TooManySnapshotLevels.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TraversalSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TraversalSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "TypeDescription");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.TypeDescription.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UncommittedUndoableDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UncommittedUndoableDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UnconfiguredPropertyValue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UnconfiguredPropertyValue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UncustomizableGuest");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UncustomizableGuest.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UnexpectedCustomizationFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UnexpectedCustomizationFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UnexpectedFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UnexpectedFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UnlicensedVirtualMachinesEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UnlicensedVirtualMachinesEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UnlicensedVirtualMachinesFoundEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UnlicensedVirtualMachinesFoundEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UnrecognizedHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UnrecognizedHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UnsharedSwapVMotionNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UnsharedSwapVMotionNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UnsupportedDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UnsupportedDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UnSupportedDatastoreForVFlash");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UnSupportedDatastoreForVFlash.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UnsupportedGuest");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UnsupportedGuest.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UnsupportedVimApiVersion");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UnsupportedVimApiVersion.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UnsupportedVmxLocation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UnsupportedVmxLocation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UnusedVirtualDiskBlocksNotScrubbed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UnusedVirtualDiskBlocksNotScrubbed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UpdatedAgentBeingRestartedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UpdatedAgentBeingRestartedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UpdateSet");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UpdateSet.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UpdateVirtualMachineFilesResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UpdateVirtualMachineFilesResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UpdateVirtualMachineFilesResultFailedVmFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UpdateVirtualMachineFilesResultFailedVmFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UpgradeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UpgradeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UpgradePolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UpgradePolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UplinkPortMtuNotSupportEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UplinkPortMtuNotSupportEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings35() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "UplinkPortMtuSupportEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UplinkPortMtuSupportEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UplinkPortVlanTrunkedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UplinkPortVlanTrunkedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UplinkPortVlanUntrunkedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UplinkPortVlanUntrunkedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UserAssignedToGroup");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UserAssignedToGroup.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UserGroupProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UserGroupProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UserInputRequiredParameterMetadata");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UserInputRequiredParameterMetadata.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UserLoginSessionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UserLoginSessionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UserLogoutSessionEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UserLogoutSessionEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UserNotFound");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UserNotFound.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UserPasswordChanged");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UserPasswordChanged.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UserProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UserProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UserSearchResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UserSearchResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UserSession");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UserSession.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UserUnassignedFromGroup");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UserUnassignedFromGroup.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "UserUpgradeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.UserUpgradeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "ValidateMigrationTestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.ValidateMigrationTestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppAutoStartAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppAutoStartAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppCloneSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppCloneSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppCloneSpecNetworkMappingPair");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppCloneSpecNetworkMappingPair.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppCloneSpecProvisioningType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppCloneSpecProvisioningType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppCloneSpecResourceMap");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppCloneSpecResourceMap.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppConfigFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppConfigFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppEntityConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppEntityConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppIPAssignmentInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppIPAssignmentInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppIPAssignmentInfoAllocationSchemes");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppIPAssignmentInfoAllocationSchemes.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppIPAssignmentInfoIpAllocationPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppIPAssignmentInfoIpAllocationPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppIPAssignmentInfoProtocols");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppIPAssignmentInfoProtocols.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppNotRunning");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppNotRunning.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppOperationInProgress");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppOperationInProgress.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppOvfSectionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppOvfSectionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppOvfSectionSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppOvfSectionSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppProductInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppProductInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppProductSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppProductSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppPropertyFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppPropertyFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppPropertyInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppPropertyInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppPropertySpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppPropertySpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VAppTaskInProgress");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VAppTaskInProgress.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VasaProviderContainerSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VasaProviderContainerSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VASAStorageArray");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VASAStorageArray.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VcAgentUninstalledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VcAgentUninstalledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VcAgentUninstallFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VcAgentUninstallFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VcAgentUpgradedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VcAgentUpgradedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VcAgentUpgradeFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VcAgentUpgradeFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VFlashCacheHotConfigNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VFlashCacheHotConfigNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VFlashModuleNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VFlashModuleNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VFlashModuleNotSupportedReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VFlashModuleNotSupportedReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VFlashModuleVersionIncompatible");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VFlashModuleVersionIncompatible.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VimAccountPasswordChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VimAccountPasswordChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VimFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VimFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VimVasaProvider");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VimVasaProvider.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VimVasaProviderInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VimVasaProviderInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VimVasaProviderStatePerArray");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VimVasaProviderStatePerArray.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualAHCIController");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualAHCIController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualAHCIControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualAHCIControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualAppImportSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualAppImportSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualAppLinkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualAppLinkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualAppSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualAppSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualAppVAppState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualAppVAppState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualBusLogicController");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualBusLogicController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualBusLogicControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualBusLogicControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualCdrom");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualCdrom.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualCdromAtapiBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualCdromAtapiBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualCdromAtapiBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualCdromAtapiBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualCdromIsoBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualCdromIsoBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualCdromIsoBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualCdromIsoBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualCdromOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualCdromOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualCdromPassthroughBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualCdromPassthroughBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualCdromPassthroughBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualCdromPassthroughBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualCdromRemoteAtapiBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualCdromRemoteAtapiBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualCdromRemoteAtapiBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualCdromRemoteAtapiBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualCdromRemotePassthroughBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualCdromRemotePassthroughBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualCdromRemotePassthroughBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualCdromRemotePassthroughBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualController");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDeviceBusSlotInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDeviceBusSlotInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDeviceBusSlotOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDeviceBusSlotOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDeviceConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDeviceConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDeviceConfigSpecFileOperation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDeviceConfigSpecFileOperation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDeviceConfigSpecOperation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDeviceConfigSpecOperation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDeviceConnectInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDeviceConnectInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDeviceConnectInfoStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDeviceConnectInfoStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDeviceConnectOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDeviceConnectOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDeviceDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDeviceDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDeviceDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDeviceDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDeviceFileBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDeviceFileBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDeviceFileBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDeviceFileBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDeviceFileExtension");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDeviceFileExtension.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDeviceOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDeviceOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDevicePciBusSlotInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDevicePciBusSlotInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDevicePipeBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDevicePipeBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDevicePipeBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDevicePipeBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDeviceRemoteDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDeviceRemoteDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDeviceRemoteDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDeviceRemoteDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDeviceURIBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDeviceURIBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDeviceURIBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDeviceURIBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings36() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDeviceURIBackingOptionDirection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDeviceURIBackingOptionDirection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDisk");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDisk.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskAdapterType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskAdapterType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskAntiAffinityRuleSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskAntiAffinityRuleSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskBlocksNotFullyProvisioned");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskBlocksNotFullyProvisioned.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskCompatibilityMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskCompatibilityMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskDeltaDiskFormat");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskDeltaDiskFormat.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskDeltaDiskFormatsSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskDeltaDiskFormatsSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskDeltaDiskFormatVariant");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskDeltaDiskFormatVariant.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskFlatVer1BackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskFlatVer1BackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskFlatVer1BackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskFlatVer1BackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskFlatVer2BackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskFlatVer2BackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskFlatVer2BackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskFlatVer2BackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskId");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskId.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskModeNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskModeNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskOptionVFlashCacheConfigOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskOptionVFlashCacheConfigOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskPartitionedRawDiskVer2BackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskPartitionedRawDiskVer2BackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskPartitionedRawDiskVer2BackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskPartitionedRawDiskVer2BackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskRawDiskMappingVer1BackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskRawDiskMappingVer1BackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskRawDiskMappingVer1BackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskRawDiskMappingVer1BackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskRawDiskVer2BackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskRawDiskVer2BackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskRawDiskVer2BackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskRawDiskVer2BackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskSeSparseBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskSeSparseBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskSeSparseBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskSeSparseBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskSharing");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskSharing.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskSparseVer1BackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskSparseVer1BackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskSparseVer1BackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskSparseVer1BackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskSparseVer2BackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskSparseVer2BackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskSparseVer2BackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskSparseVer2BackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskVFlashCacheConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskVFlashCacheConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskVFlashCacheConfigInfoCacheConsistencyType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskVFlashCacheConfigInfoCacheConsistencyType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualDiskVFlashCacheConfigInfoCacheMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualDiskVFlashCacheConfigInfoCacheMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualE1000");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualE1000.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualE1000e");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualE1000E.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualE1000eOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualE1000EOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualE1000Option");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualE1000Option.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualEnsoniq1371");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualEnsoniq1371.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualEnsoniq1371Option");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualEnsoniq1371Option.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualEthernetCard");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualEthernetCard.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualEthernetCardDistributedVirtualPortBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualEthernetCardDistributedVirtualPortBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualEthernetCardDVPortBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualEthernetCardDVPortBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualEthernetCardLegacyNetworkBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualEthernetCardLegacyNetworkBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualEthernetCardLegacyNetworkBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualEthernetCardLegacyNetworkBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualEthernetCardLegacyNetworkDeviceName");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualEthernetCardLegacyNetworkDeviceName.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualEthernetCardMacType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualEthernetCardMacType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualEthernetCardNetworkBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualEthernetCardNetworkBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualEthernetCardNetworkBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualEthernetCardNetworkBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualEthernetCardNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualEthernetCardNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualEthernetCardOpaqueNetworkBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualEthernetCardOpaqueNetworkBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualEthernetCardOpaqueNetworkBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualEthernetCardOpaqueNetworkBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualEthernetCardOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualEthernetCardOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualEthernetCardResourceAllocation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualEthernetCardResourceAllocation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualFloppy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualFloppy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualFloppyDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualFloppyDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualFloppyDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualFloppyDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualFloppyImageBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualFloppyImageBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualFloppyImageBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualFloppyImageBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualFloppyOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualFloppyOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualFloppyRemoteDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualFloppyRemoteDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualFloppyRemoteDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualFloppyRemoteDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualHardware");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualHardware.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualHardwareCompatibilityIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualHardwareCompatibilityIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualHardwareOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualHardwareOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualHardwareVersionNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualHardwareVersionNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualHdAudioCard");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualHdAudioCard.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualHdAudioCardOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualHdAudioCardOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualIDEController");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualIDEController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualIDEControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualIDEControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualKeyboard");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualKeyboard.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualKeyboardOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualKeyboardOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualLsiLogicController");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualLsiLogicController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualLsiLogicControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualLsiLogicControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualLsiLogicSASController");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualLsiLogicSASController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualLsiLogicSASControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualLsiLogicSASControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineAffinityInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineAffinityInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineAppHeartbeatStatusType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineAppHeartbeatStatusType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineBootOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineBootOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineBootOptionsBootableCdromDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineBootOptionsBootableCdromDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineBootOptionsBootableDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineBootOptionsBootableDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineBootOptionsBootableDiskDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineBootOptionsBootableDiskDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineBootOptionsBootableEthernetDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineBootOptionsBootableEthernetDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineBootOptionsBootableFloppyDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineBootOptionsBootableFloppyDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineBootOptionsNetworkBootProtocolType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineBootOptionsNetworkBootProtocolType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineCdromInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineCdromInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineCloneSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineCloneSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineConfigInfoDatastoreUrlPair");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineConfigInfoDatastoreUrlPair.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineConfigInfoNpivWwnType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineConfigInfoNpivWwnType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineConfigInfoOverheadInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineConfigInfoOverheadInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineConfigInfoSwapPlacementType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineConfigInfoSwapPlacementType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineConfigOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineConfigOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineConfigOptionDescriptor");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineConfigOptionDescriptor.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineConfigSpecNpivWwnOp");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineConfigSpecNpivWwnOp.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

    }
    private void addBindings37() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineConfigSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineConfigSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineConnectionState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineConnectionState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineConsolePreferences");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineConsolePreferences.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineCpuIdInfoSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineCpuIdInfoSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineCreateChildSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineCreateChildSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineDatastoreInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineDatastoreInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineDatastoreVolumeOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineDatastoreVolumeOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineDefaultPowerOpInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineDefaultPowerOpInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineDefaultProfileSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineDefaultProfileSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineDefinedProfileSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineDefinedProfileSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineDeviceRuntimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineDeviceRuntimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineDeviceRuntimeInfoDeviceRuntimeState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineDeviceRuntimeInfoDeviceRuntimeState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonOther");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonOther.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonVm");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineDeviceRuntimeInfoVirtualEthernetCardRuntimeStateVmDirectPathGen2InactiveReasonVm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineDiskDeviceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineDiskDeviceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineDisplayTopology");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineDisplayTopology.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineEmptyProfileSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineEmptyProfileSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineFaultToleranceState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineFaultToleranceState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineFaultToleranceType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineFaultToleranceType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineFeatureRequirement");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineFeatureRequirement.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineFileLayout");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineFileLayout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineFileLayoutDiskLayout");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineFileLayoutDiskLayout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineFileLayoutEx");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineFileLayoutEx.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineFileLayoutExDiskLayout");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineFileLayoutExDiskLayout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineFileLayoutExDiskUnit");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineFileLayoutExDiskUnit.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineFileLayoutExFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineFileLayoutExFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineFileLayoutExFileType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineFileLayoutExFileType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineFileLayoutExSnapshotLayout");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineFileLayoutExSnapshotLayout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineFileLayoutSnapshotLayout");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineFileLayoutSnapshotLayout.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineFlagInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineFlagInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineFlagInfoMonitorType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineFlagInfoMonitorType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineFlagInfoVirtualExecUsage");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineFlagInfoVirtualExecUsage.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineFlagInfoVirtualMmuUsage");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineFlagInfoVirtualMmuUsage.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineFloppyInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineFloppyInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineForkConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineForkConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineForkConfigInfoChildType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineForkConfigInfoChildType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineGuestOsFamily");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineGuestOsFamily.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineGuestOsIdentifier");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineGuestOsIdentifier.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineGuestState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineGuestState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineGuestSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineGuestSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineHtSharing");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineHtSharing.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineIdeDiskDeviceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineIdeDiskDeviceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineIdeDiskDevicePartitionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineIdeDiskDevicePartitionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineImportSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineImportSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineLegacyNetworkSwitchInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineLegacyNetworkSwitchInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineMemoryAllocationPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineMemoryAllocationPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineMemoryReservationInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineMemoryReservationInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineMemoryReservationSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineMemoryReservationSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineMessage");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineMessage.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineMetadataManagerVmMetadata");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineMetadataManagerVmMetadata.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineMetadataManagerVmMetadataInput");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineMetadataManagerVmMetadataInput.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineMetadataManagerVmMetadataOp");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineMetadataManagerVmMetadataOp.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineMetadataManagerVmMetadataOwner");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineMetadataManagerVmMetadataOwner.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineMetadataManagerVmMetadataOwnerOwner");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineMetadataManagerVmMetadataOwnerOwner.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineMetadataManagerVmMetadataResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineMetadataManagerVmMetadataResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineMksTicket");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineMksTicket.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineMovePriority");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineMovePriority.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineNeedSecondaryReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineNeedSecondaryReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineNetworkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineNetworkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineNetworkShaperInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineNetworkShaperInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineParallelInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineParallelInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachinePciPassthroughInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachinePciPassthroughInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachinePciSharedGpuPassthroughInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachinePciSharedGpuPassthroughInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachinePowerOffBehavior");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachinePowerOffBehavior.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachinePowerOpType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachinePowerOpType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachinePowerState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachinePowerState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineProfileRawData");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineProfileRawData.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineProfileSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineProfileSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineQuestionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineQuestionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineQuickStats");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineQuickStats.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineRecordReplayState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineRecordReplayState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineRelocateDiskMoveOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineRelocateDiskMoveOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineRelocateSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineRelocateSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineRelocateSpecDiskLocator");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineRelocateSpecDiskLocator.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineRelocateTransformation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineRelocateTransformation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineRuntimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineRuntimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineRuntimeInfoDasProtectionState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineRuntimeInfoDasProtectionState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineScsiDiskDeviceInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineScsiDiskDeviceInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineScsiPassthroughInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineScsiPassthroughInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineScsiPassthroughType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineScsiPassthroughType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineSerialInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineSerialInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineSnapshotInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineSnapshotInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineSnapshotTree");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineSnapshotTree.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineSoundInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineSoundInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineSriovInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineSriovInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineStandbyActionType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineStandbyActionType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineStorageInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineStorageInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineStorageSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineStorageSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineSummary");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineSummary.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineTargetInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineTargetInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineTargetInfoConfigurationTag");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineTargetInfoConfigurationTag.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineTicket");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineTicket.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineTicketType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineTicketType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineToolsRunningStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineToolsRunningStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineToolsStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineToolsStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineToolsVersionStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineToolsVersionStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineUsageOnDatastore");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineUsageOnDatastore.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineUsbInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineUsbInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings38() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineUsbInfoFamily");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineUsbInfoFamily.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineUsbInfoSpeed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineUsbInfoSpeed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineVFlashModuleInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineVFlashModuleInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineVideoCard");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineVideoCard.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineVideoCardUse3dRenderer");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineVideoCardUse3DRenderer.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineVMCIDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineVMCIDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineVMCIDeviceAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineVMCIDeviceAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineVMCIDeviceDirection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineVMCIDeviceDirection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineVMCIDeviceFilterInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineVMCIDeviceFilterInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineVMCIDeviceFilterSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineVMCIDeviceFilterSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineVMCIDeviceOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineVMCIDeviceOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineVMCIDeviceOptionFilterSpecOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineVMCIDeviceOptionFilterSpecOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineVMCIDeviceProtocol");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineVMCIDeviceProtocol.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineVMIROM");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineVMIROM.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualMachineWipeResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualMachineWipeResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualNicManagerNetConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualNicManagerNetConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualParallelPort");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualParallelPort.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualParallelPortDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualParallelPortDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualParallelPortDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualParallelPortDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualParallelPortFileBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualParallelPortFileBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualParallelPortFileBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualParallelPortFileBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualParallelPortOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualParallelPortOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualPCIController");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualPCIController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualPCIControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualPCIControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualPCIPassthrough");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualPCIPassthrough.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualPCIPassthroughDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualPCIPassthroughDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualPCIPassthroughDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualPCIPassthroughDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualPCIPassthroughOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualPCIPassthroughOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualPCIPassthroughPluginBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualPCIPassthroughPluginBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualPCIPassthroughPluginBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualPCIPassthroughPluginBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualPCIPassthroughVmiopBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualPCIPassthroughVmiopBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualPCIPassthroughVmiopBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualPCIPassthroughVmiopBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualPCNet32");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualPCNet32.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualPCNet32Option");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualPCNet32Option.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualPointingDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualPointingDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualPointingDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualPointingDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualPointingDeviceDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualPointingDeviceDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualPointingDeviceHostChoice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualPointingDeviceHostChoice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualPointingDeviceOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualPointingDeviceOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualPS2Controller");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualPS2Controller.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualPS2ControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualPS2ControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualResourcePoolSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualResourcePoolSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualResourcePoolUsage");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualResourcePoolUsage.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSATAController");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSATAController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSATAControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSATAControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSCSIController");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSCSIController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSCSIControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSCSIControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSCSIPassthrough");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSCSIPassthrough.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSCSIPassthroughDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSCSIPassthroughDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSCSIPassthroughDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSCSIPassthroughDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSCSIPassthroughOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSCSIPassthroughOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSCSISharing");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSCSISharing.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSerialPort");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSerialPort.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSerialPortDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSerialPortDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSerialPortDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSerialPortDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSerialPortEndPoint");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSerialPortEndPoint.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSerialPortFileBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSerialPortFileBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSerialPortFileBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSerialPortFileBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSerialPortOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSerialPortOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSerialPortPipeBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSerialPortPipeBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSerialPortPipeBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSerialPortPipeBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSerialPortThinPrintBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSerialPortThinPrintBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSerialPortThinPrintBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSerialPortThinPrintBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSerialPortURIBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSerialPortURIBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSerialPortURIBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSerialPortURIBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSIOController");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSIOController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSIOControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSIOControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSoundBlaster16");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSoundBlaster16.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSoundBlaster16Option");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSoundBlaster16Option.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSoundCard");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSoundCard.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSoundCardDeviceBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSoundCardDeviceBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSoundCardDeviceBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSoundCardDeviceBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSoundCardOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSoundCardOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSriovEthernetCard");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSriovEthernetCard.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSriovEthernetCardOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSriovEthernetCardOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSriovEthernetCardSriovBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSriovEthernetCardSriovBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSriovEthernetCardSriovBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSriovEthernetCardSriovBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSwitchProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSwitchProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualSwitchSelectionProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualSwitchSelectionProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualUSB");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualUSB.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualUSBController");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualUSBController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualUSBControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualUSBControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualUSBControllerPciBusSlotInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualUSBControllerPciBusSlotInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualUSBOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualUSBOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualUSBRemoteClientBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualUSBRemoteClientBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualUSBRemoteClientBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualUSBRemoteClientBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualUSBRemoteHostBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualUSBRemoteHostBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualUSBRemoteHostBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualUSBRemoteHostBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualUSBUSBBackingInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualUSBUSBBackingInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualUSBUSBBackingOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualUSBUSBBackingOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualUSBXHCIController");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualUSBXHCIController.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualUSBXHCIControllerOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualUSBXHCIControllerOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualVideoCardOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualVideoCardOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualVMIROMOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualVMIROMOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualVmxnet");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualVmxnet.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualVmxnet2");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualVmxnet2.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualVmxnet2Option");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualVmxnet2Option.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualVmxnet3");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualVmxnet3.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualVmxnet3Option");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualVmxnet3Option.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VirtualVmxnetOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VirtualVmxnetOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings39() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "VlanProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VlanProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmAcquiredMksTicketEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmAcquiredMksTicketEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmAcquiredTicketEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmAcquiredTicketEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmAlreadyExistsInDatacenter");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmAlreadyExistsInDatacenter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmAutoRenameEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmAutoRenameEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmBeingClonedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmBeingClonedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmBeingClonedNoFolderEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmBeingClonedNoFolderEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmBeingCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmBeingCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmBeingDeployedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmBeingDeployedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmBeingHotMigratedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmBeingHotMigratedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmBeingMigratedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmBeingMigratedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmBeingRelocatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmBeingRelocatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmClonedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmClonedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmCloneEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmCloneEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmCloneFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmCloneFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmConfigFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmConfigFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmConfigFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmConfigFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmConfigFileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmConfigFileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmConfigFileQueryFilter");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmConfigFileQueryFilter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmConfigFileQueryFlags");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmConfigFileQueryFlags.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmConfigIncompatibleForFaultTolerance");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmConfigIncompatibleForFaultTolerance.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmConfigIncompatibleForRecordReplay");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmConfigIncompatibleForRecordReplay.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmConfigMissingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmConfigMissingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmConnectedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmConnectedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmDasBeingResetEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmDasBeingResetEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmDasBeingResetEventReasonCode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmDasBeingResetEventReasonCode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmDasBeingResetWithScreenshotEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmDasBeingResetWithScreenshotEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmDasResetFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmDasResetFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmDasUpdateErrorEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmDasUpdateErrorEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmDasUpdateOkEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmDasUpdateOkEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmDateRolledBackEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmDateRolledBackEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmDeployedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmDeployedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmDeployFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmDeployFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmDisconnectedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmDisconnectedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmDiscoveredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmDiscoveredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmDiskFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmDiskFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmDiskFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmDiskFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmDiskFileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmDiskFileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmDiskFileQueryFilter");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmDiskFileQueryFilter.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmDiskFileQueryFlags");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmDiskFileQueryFlags.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmEmigratingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmEmigratingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmEndRecordingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmEndRecordingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmEndReplayingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmEndReplayingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmEventArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmEventArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFailedMigrateEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFailedMigrateEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFailedRelayoutEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFailedRelayoutEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFailedRelayoutOnVmfs2DatastoreEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFailedRelayoutOnVmfs2DatastoreEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFailedStartingSecondaryEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFailedStartingSecondaryEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFailedStartingSecondaryEventFailureReason");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFailedStartingSecondaryEventFailureReason.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFailedToPowerOffEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFailedToPowerOffEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFailedToPowerOnEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFailedToPowerOnEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFailedToRebootGuestEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFailedToRebootGuestEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFailedToResetEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFailedToResetEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFailedToShutdownGuestEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFailedToShutdownGuestEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFailedToStandbyGuestEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFailedToStandbyGuestEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFailedToSuspendEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFailedToSuspendEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFailedUpdatingSecondaryConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFailedUpdatingSecondaryConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFailoverFailed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFailoverFailed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFaultToleranceConfigIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFaultToleranceConfigIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFaultToleranceConfigIssueReasonForIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFaultToleranceConfigIssueReasonForIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFaultToleranceConfigIssueWrapper");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFaultToleranceConfigIssueWrapper.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFaultToleranceInvalidFileBacking");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFaultToleranceInvalidFileBacking.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFaultToleranceInvalidFileBackingDeviceType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFaultToleranceInvalidFileBackingDeviceType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFaultToleranceIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFaultToleranceIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFaultToleranceOpIssuesList");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFaultToleranceOpIssuesList.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFaultToleranceStateChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFaultToleranceStateChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFaultToleranceTooManyFtVcpusOnHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFaultToleranceTooManyFtVcpusOnHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFaultToleranceTooManyVMsOnHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFaultToleranceTooManyVMsOnHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFaultToleranceTurnedOffEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFaultToleranceTurnedOffEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmFaultToleranceVmTerminatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmFaultToleranceVmTerminatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmfsAlreadyMounted");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmfsAlreadyMounted.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmfsAmbiguousMount");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmfsAmbiguousMount.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmfsDatastoreAllExtentOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmfsDatastoreAllExtentOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmfsDatastoreBaseOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmfsDatastoreBaseOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMFSDatastoreCreatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMFSDatastoreCreatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmfsDatastoreCreateSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmfsDatastoreCreateSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMFSDatastoreExpandedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMFSDatastoreExpandedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmfsDatastoreExpandSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmfsDatastoreExpandSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMFSDatastoreExtendedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMFSDatastoreExtendedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmfsDatastoreExtendSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmfsDatastoreExtendSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmfsDatastoreInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmfsDatastoreInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmfsDatastoreMultipleExtentOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmfsDatastoreMultipleExtentOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmfsDatastoreOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmfsDatastoreOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmfsDatastoreSingleExtentOption");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmfsDatastoreSingleExtentOption.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmfsDatastoreSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmfsDatastoreSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmfsMountFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmfsMountFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmGuestOSCrashedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmGuestOSCrashedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmGuestRebootEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmGuestRebootEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmGuestShutdownEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmGuestShutdownEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmGuestStandbyEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmGuestStandbyEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmHealthMonitoringStateChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmHealthMonitoringStateChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmHostAffinityRuleViolation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmHostAffinityRuleViolation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMINotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMINotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmInstanceUuidAssignedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmInstanceUuidAssignedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmInstanceUuidChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmInstanceUuidChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmInstanceUuidConflictEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmInstanceUuidConflictEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings40() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "VmLimitLicense");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmLimitLicense.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmLogFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmLogFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmLogFileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmLogFileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmMacAssignedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmMacAssignedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmMacChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmMacChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmMacConflictEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmMacConflictEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmMaxFTRestartCountReached");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmMaxFTRestartCountReached.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmMaxRestartCountReached");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmMaxRestartCountReached.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmMessageErrorEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmMessageErrorEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmMessageEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmMessageEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmMessageWarningEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmMessageWarningEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmMetadataManagerFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmMetadataManagerFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmMigratedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmMigratedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmMonitorIncompatibleForFaultTolerance");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmMonitorIncompatibleForFaultTolerance.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmNoCompatibleHostForSecondaryEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmNoCompatibleHostForSecondaryEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmNoNetworkAccessEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmNoNetworkAccessEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmNvramFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmNvramFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmNvramFileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmNvramFileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMOnConflictDVPort");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMOnConflictDVPort.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMOnVirtualIntranet");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMOnVirtualIntranet.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmOrphanedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmOrphanedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMotionAcrossNetworkNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMotionAcrossNetworkNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMotionCompatibilityType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMotionCompatibilityType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMotionInterfaceIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMotionInterfaceIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmotionInterfaceNotEnabled");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmotionInterfaceNotEnabled.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMotionLicenseExpiredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMotionLicenseExpiredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMotionLinkCapacityLow");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMotionLinkCapacityLow.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMotionLinkDown");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMotionLinkDown.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMotionNotConfigured");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMotionNotConfigured.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMotionNotLicensed");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMotionNotLicensed.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMotionNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMotionNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMotionProtocolIncompatible");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMotionProtocolIncompatible.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmPodConfigForPlacement");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmPodConfigForPlacement.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmPortGroupProfile");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmPortGroupProfile.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmPoweredOffEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmPoweredOffEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmPoweredOnEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmPoweredOnEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmPoweringOnWithCustomizedDVPortEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmPoweringOnWithCustomizedDVPortEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmPowerOffOnIsolationEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmPowerOffOnIsolationEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmPowerOnDisabled");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmPowerOnDisabled.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmPrimaryFailoverEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmPrimaryFailoverEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmReconfiguredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmReconfiguredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmRegisteredEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmRegisteredEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmRelayoutSuccessfulEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmRelayoutSuccessfulEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmRelayoutUpToDateEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmRelayoutUpToDateEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmReloadFromPathEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmReloadFromPathEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmReloadFromPathFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmReloadFromPathFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmRelocatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmRelocatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmRelocateFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmRelocateFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmRelocateSpecEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmRelocateSpecEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmRemoteConsoleConnectedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmRemoteConsoleConnectedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmRemoteConsoleDisconnectedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmRemoteConsoleDisconnectedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmRemovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmRemovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmRenamedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmRenamedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmRequirementsExceedCurrentEVCModeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmRequirementsExceedCurrentEVCModeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmResettingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmResettingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmResourcePoolMovedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmResourcePoolMovedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmResourceReallocatedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmResourceReallocatedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmRestartedOnAlternateHostEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmRestartedOnAlternateHostEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmResumingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmResumingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmSecondaryAddedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmSecondaryAddedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmSecondaryDisabledBySystemEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmSecondaryDisabledBySystemEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmSecondaryDisabledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmSecondaryDisabledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmSecondaryEnabledEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmSecondaryEnabledEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmSecondaryStartedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmSecondaryStartedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmShutdownOnIsolationEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmShutdownOnIsolationEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmShutdownOnIsolationEventOperation");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmShutdownOnIsolationEventOperation.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmSmpFaultToleranceTooManyVMsOnHost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmSmpFaultToleranceTooManyVMsOnHost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmSnapshotFileInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmSnapshotFileInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmSnapshotFileQuery");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmSnapshotFileQuery.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmStartingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmStartingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmStartingSecondaryEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmStartingSecondaryEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmStartRecordingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmStartRecordingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmStartReplayingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmStartReplayingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmStaticMacConflictEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmStaticMacConflictEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmStoppingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmStoppingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmSuspendedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmSuspendedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmSuspendingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmSuspendingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmTimedoutStartingSecondaryEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmTimedoutStartingSecondaryEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmToolsUpgradeFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmToolsUpgradeFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmUnsupportedStartingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmUnsupportedStartingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmUpgradeCompleteEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmUpgradeCompleteEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmUpgradeFailedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmUpgradeFailedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmUpgradingEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmUpgradingEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmUuidAssignedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmUuidAssignedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmUuidChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmUuidChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmUuidConflictEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmUuidConflictEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmValidateMaxDevice");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmValidateMaxDevice.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmVnicPoolReservationViolationClearEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmVnicPoolReservationViolationClearEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmVnicPoolReservationViolationRaiseEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmVnicPoolReservationViolationRaiseEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmwareDistributedVirtualSwitchPvlanPortType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmwareDistributedVirtualSwitchPvlanPortType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmwareDistributedVirtualSwitchPvlanSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmwareDistributedVirtualSwitchPvlanSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmwareDistributedVirtualSwitchTrunkVlanSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmwareDistributedVirtualSwitchTrunkVlanSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmwareDistributedVirtualSwitchVlanIdSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmwareDistributedVirtualSwitchVlanIdSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmwareDistributedVirtualSwitchVlanSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmwareDistributedVirtualSwitchVlanSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDVSConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDVSConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDVSConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDVSConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDVSFeatureCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDVSFeatureCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDVSHealthCheckCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDVSHealthCheckCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDVSHealthCheckConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDVSHealthCheckConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDvsIpfixCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDvsIpfixCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings41() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDvsLacpApiVersion");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDvsLacpApiVersion.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDvsLacpCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDvsLacpCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDvsLacpGroupConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDvsLacpGroupConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDvsLacpGroupSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDvsLacpGroupSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDvsLacpLoadBalanceAlgorithm");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDvsLacpLoadBalanceAlgorithm.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDvsLagIpfixConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDvsLagIpfixConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDvsLagVlanConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDvsLagVlanConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDVSMtuHealthCheckResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDVSMtuHealthCheckResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDvsMulticastFilteringMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDvsMulticastFilteringMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDVSPortgroupPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDVSPortgroupPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDVSPortSetting");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDVSPortSetting.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDVSPvlanConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDVSPvlanConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDVSPvlanMapEntry");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDVSPvlanMapEntry.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDVSTeamingHealthCheckConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDVSTeamingHealthCheckConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDVSTeamingHealthCheckResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDVSTeamingHealthCheckResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDVSTeamingMatchStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDVSTeamingMatchStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDVSVlanHealthCheckResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDVSVlanHealthCheckResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDVSVlanMtuHealthCheckConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDVSVlanMtuHealthCheckConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDVSVspanCapability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDVSVspanCapability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDVSVspanConfigSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDVSVspanConfigSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareDVSVspanSessionType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareDVSVspanSessionType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareIpfixConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareIpfixConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareUplinkLacpMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareUplinkLacpMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareUplinkLacpPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareUplinkLacpPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareUplinkPortOrderPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareUplinkPortOrderPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmwareUplinkPortTeamingPolicy");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmwareUplinkPortTeamingPolicy.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareVspanPort");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareVspanPort.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VMwareVspanSession");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VMwareVspanSession.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmWwnAssignedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmWwnAssignedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmWwnChangedEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmWwnChangedEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmWwnConflict");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmWwnConflict.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VmWwnConflictEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VmWwnConflictEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VnicPortArgument");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VnicPortArgument.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VolumeEditorError");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VolumeEditorError.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VramLimitLicense");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VramLimitLicense.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VRPEditSpec");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VRPEditSpec.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VrpResourceAllocationInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VrpResourceAllocationInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanClusterConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanClusterConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanClusterConfigInfoHostDefaultInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanClusterConfigInfoHostDefaultInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanClusterUuidMismatch");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanClusterUuidMismatch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanDiskFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanDiskFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanDiskIssueType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanDiskIssueType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostClusterStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostClusterStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostClusterStatusState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostClusterStatusState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostClusterStatusStateCompletionEstimate");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostClusterStatusStateCompletionEstimate.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostConfigInfoClusterInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostConfigInfoClusterInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostConfigInfoNetworkInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostConfigInfoNetworkInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostConfigInfoNetworkInfoPortConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostConfigInfoNetworkInfoPortConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostConfigInfoStorageInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostConfigInfoStorageInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostDecommissionMode");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostDecommissionMode.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostDecommissionModeObjectAction");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostDecommissionModeObjectAction.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostDiskMapInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostDiskMapInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostDiskMapping");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostDiskMapping.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostDiskMapResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostDiskMapResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostDiskResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostDiskResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostDiskResultState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostDiskResultState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostFaultDomainInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostFaultDomainInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostHealthState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostHealthState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostIpConfig");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostIpConfig.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostMembershipInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostMembershipInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostNodeState");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostNodeState.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostRuntimeInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostRuntimeInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostRuntimeInfoDiskIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostRuntimeInfoDiskIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanHostVsanDiskInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanHostVsanDiskInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanIncompatibleDiskMapping");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanIncompatibleDiskMapping.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanNewPolicyBatch");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanNewPolicyBatch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanPolicyChangeBatch");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanPolicyChangeBatch.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanPolicyCost");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanPolicyCost.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanPolicySatisfiability");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanPolicySatisfiability.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanUpgradeSystemAPIBrokenIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanUpgradeSystemAPIBrokenIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanUpgradeSystemAutoClaimEnabledOnHostsIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanUpgradeSystemAutoClaimEnabledOnHostsIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanUpgradeSystemHostsDisconnectedIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanUpgradeSystemHostsDisconnectedIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanUpgradeSystemMissingHostsInClusterIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanUpgradeSystemMissingHostsInClusterIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanUpgradeSystemNetworkPartitionInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanUpgradeSystemNetworkPartitionInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanUpgradeSystemNetworkPartitionIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanUpgradeSystemNetworkPartitionIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanUpgradeSystemNotEnoughFreeCapacityIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanUpgradeSystemNotEnoughFreeCapacityIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanUpgradeSystemPreflightCheckIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanUpgradeSystemPreflightCheckIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanUpgradeSystemPreflightCheckResult");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanUpgradeSystemPreflightCheckResult.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanUpgradeSystemRogueHostsInClusterIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanUpgradeSystemRogueHostsInClusterIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanUpgradeSystemUpgradeHistoryDiskGroupOp");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanUpgradeSystemUpgradeHistoryDiskGroupOp.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanUpgradeSystemUpgradeHistoryDiskGroupOpType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanUpgradeSystemUpgradeHistoryDiskGroupOpType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanUpgradeSystemUpgradeHistoryItem");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanUpgradeSystemUpgradeHistoryItem.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanUpgradeSystemUpgradeHistoryPreflightFail");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanUpgradeSystemUpgradeHistoryPreflightFail.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanUpgradeSystemUpgradeStatus");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanUpgradeSystemUpgradeStatus.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanUpgradeSystemV2ObjectsPresentDuringDowngradeIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanUpgradeSystemV2ObjectsPresentDuringDowngradeIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VsanUpgradeSystemWrongEsxVersionIssue");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VsanUpgradeSystemWrongEsxVersionIssue.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VspanDestPortConflict");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VspanDestPortConflict.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VspanPortConflict");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VspanPortConflict.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VspanPortgroupPromiscChangeFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VspanPortgroupPromiscChangeFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VspanPortgroupTypeChangeFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VspanPortgroupTypeChangeFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VspanPortMoveFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VspanPortMoveFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VspanPortPromiscChangeFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VspanPortPromiscChangeFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VspanPromiscuousPortNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VspanPromiscuousPortNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VspanSameSessionPortConflict");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VspanSameSessionPortConflict.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VvolDatastoreInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VvolDatastoreInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "VVolHostPE");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.VVolHostPE.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "WaitForUpdatesExRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.WaitForUpdatesExRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "WaitForUpdatesRequestType");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.WaitForUpdatesRequestType.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }
    private void addBindings42() {
            java.lang.Class cls;
            javax.xml.namespace.QName qName;
            javax.xml.namespace.QName qName2;
            java.lang.Class beansf = org.apache.axis.encoding.ser.BeanSerializerFactory.class;
            java.lang.Class beandf = org.apache.axis.encoding.ser.BeanDeserializerFactory.class;
            java.lang.Class enumsf = org.apache.axis.encoding.ser.EnumSerializerFactory.class;
            java.lang.Class enumdf = org.apache.axis.encoding.ser.EnumDeserializerFactory.class;
            java.lang.Class arraysf = org.apache.axis.encoding.ser.ArraySerializerFactory.class;
            java.lang.Class arraydf = org.apache.axis.encoding.ser.ArrayDeserializerFactory.class;
            java.lang.Class simplesf = org.apache.axis.encoding.ser.SimpleSerializerFactory.class;
            java.lang.Class simpledf = org.apache.axis.encoding.ser.SimpleDeserializerFactory.class;
            java.lang.Class simplelistsf = org.apache.axis.encoding.ser.SimpleListSerializerFactory.class;
            java.lang.Class simplelistdf = org.apache.axis.encoding.ser.SimpleListDeserializerFactory.class;
            qName = new javax.xml.namespace.QName("urn:vim25", "WaitOptions");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.WaitOptions.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "WakeOnLanNotSupported");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.WakeOnLanNotSupported.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "WakeOnLanNotSupportedByVmotionNIC");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.WakeOnLanNotSupportedByVmotionNIC.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "WarningUpgradeEvent");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.WarningUpgradeEvent.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "WeeklyTaskScheduler");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.WeeklyTaskScheduler.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "WeekOfMonth");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.WeekOfMonth.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "WillLoseHAProtection");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.WillLoseHAProtection.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "WillLoseHAProtectionResolution");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.WillLoseHAProtectionResolution.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(enumsf);
            cachedDeserFactories.add(enumdf);

            qName = new javax.xml.namespace.QName("urn:vim25", "WillModifyConfigCpuRequirements");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.WillModifyConfigCpuRequirements.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "WillResetSnapshotDirectory");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.WillResetSnapshotDirectory.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "WinNetBIOSConfigInfo");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.WinNetBIOSConfigInfo.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

            qName = new javax.xml.namespace.QName("urn:vim25", "WipeDiskFault");
            cachedSerQNames.add(qName);
            cls = com.vmware.converter.WipeDiskFault.class;
            cachedSerClasses.add(cls);
            cachedSerFactories.add(beansf);
            cachedDeserFactories.add(beandf);

    }

    protected org.apache.axis.client.Call createCall() throws java.rmi.RemoteException {
        try {
            org.apache.axis.client.Call _call = super._createCall();
            if (super.maintainSessionSet) {
                _call.setMaintainSession(super.maintainSession);
            }
            if (super.cachedUsername != null) {
                _call.setUsername(super.cachedUsername);
            }
            if (super.cachedPassword != null) {
                _call.setPassword(super.cachedPassword);
            }
            if (super.cachedEndpoint != null) {
                _call.setTargetEndpointAddress(super.cachedEndpoint);
            }
            if (super.cachedTimeout != null) {
                _call.setTimeout(super.cachedTimeout);
            }
            if (super.cachedPortName != null) {
                _call.setPortName(super.cachedPortName);
            }
            java.util.Enumeration keys = super.cachedProperties.keys();
            while (keys.hasMoreElements()) {
                java.lang.String key = (java.lang.String) keys.nextElement();
                _call.setProperty(key, super.cachedProperties.get(key));
            }
            // All the type mapping information is registered
            // when the first call is made.
            // The type mapping information is actually registered in
            // the TypeMappingRegistry of the service, which
            // is the reason why registration is only needed for the first call.
            synchronized (this) {
                if (firstCall()) {
                    // must set encoding style before registering serializers
                    _call.setEncodingStyle(null);
                    for (int i = 0; i < cachedSerFactories.size(); ++i) {
                        java.lang.Class cls = (java.lang.Class) cachedSerClasses.get(i);
                        javax.xml.namespace.QName qName =
                                (javax.xml.namespace.QName) cachedSerQNames.get(i);
                        java.lang.Object x = cachedSerFactories.get(i);
                        if (x instanceof Class) {
                            java.lang.Class sf = (java.lang.Class)
                                 cachedSerFactories.get(i);
                            java.lang.Class df = (java.lang.Class)
                                 cachedDeserFactories.get(i);
                            _call.registerTypeMapping(cls, qName, sf, df, false);
                        }
                        else if (x instanceof javax.xml.rpc.encoding.SerializerFactory) {
                            org.apache.axis.encoding.SerializerFactory sf = (org.apache.axis.encoding.SerializerFactory)
                                 cachedSerFactories.get(i);
                            org.apache.axis.encoding.DeserializerFactory df = (org.apache.axis.encoding.DeserializerFactory)
                                 cachedDeserFactories.get(i);
                            _call.registerTypeMapping(cls, qName, sf, df, false);
                        }
                    }
                }
            }
            return _call;
        }
        catch (java.lang.Throwable _t) {
            throw new org.apache.axis.AxisFault("Failure trying to get the Call object", _t);
        }
    }

    public void destroyPropertyFilter(com.vmware.converter.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[0]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "DestroyPropertyFilter"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ManagedObjectReference createFilter(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.PropertyFilterSpec spec, boolean partialUpdates) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidProperty {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[1]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "CreateFilter"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, spec, new java.lang.Boolean(partialUpdates)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidProperty) {
              throw (com.vmware.converter.InvalidProperty) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ObjectContent[] retrieveProperties(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.PropertyFilterSpec[] specSet) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidProperty {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[2]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "RetrieveProperties"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, specSet});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ObjectContent[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ObjectContent[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ObjectContent[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidProperty) {
              throw (com.vmware.converter.InvalidProperty) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.UpdateSet checkForUpdates(com.vmware.converter.ManagedObjectReference _this, java.lang.String version) throws java.rmi.RemoteException, com.vmware.converter.InvalidCollectorVersion, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[3]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "CheckForUpdates"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, version});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.UpdateSet) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.UpdateSet) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.UpdateSet.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidCollectorVersion) {
              throw (com.vmware.converter.InvalidCollectorVersion) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.UpdateSet waitForUpdates(com.vmware.converter.ManagedObjectReference _this, java.lang.String version) throws java.rmi.RemoteException, com.vmware.converter.InvalidCollectorVersion, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[4]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "WaitForUpdates"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, version});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.UpdateSet) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.UpdateSet) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.UpdateSet.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidCollectorVersion) {
              throw (com.vmware.converter.InvalidCollectorVersion) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void cancelWaitForUpdates(com.vmware.converter.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[5]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "CancelWaitForUpdates"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.UpdateSet waitForUpdatesEx(com.vmware.converter.ManagedObjectReference _this, java.lang.String version, com.vmware.converter.WaitOptions woptions) throws java.rmi.RemoteException, com.vmware.converter.InvalidCollectorVersion, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[6]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "WaitForUpdatesEx"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, version, woptions});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.UpdateSet) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.UpdateSet) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.UpdateSet.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidCollectorVersion) {
              throw (com.vmware.converter.InvalidCollectorVersion) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.RetrieveResult retrievePropertiesEx(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.PropertyFilterSpec[] specSet, com.vmware.converter.RetrieveOptions options) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidProperty {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[7]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "RetrievePropertiesEx"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, specSet, options});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.RetrieveResult) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.RetrieveResult) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.RetrieveResult.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidProperty) {
              throw (com.vmware.converter.InvalidProperty) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.RetrieveResult continueRetrievePropertiesEx(com.vmware.converter.ManagedObjectReference _this, java.lang.String token) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidProperty {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[8]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ContinueRetrievePropertiesEx"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, token});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.RetrieveResult) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.RetrieveResult) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.RetrieveResult.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidProperty) {
              throw (com.vmware.converter.InvalidProperty) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void cancelRetrievePropertiesEx(com.vmware.converter.ManagedObjectReference _this, java.lang.String token) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidProperty {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[9]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "CancelRetrievePropertiesEx"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, token});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidProperty) {
              throw (com.vmware.converter.InvalidProperty) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ManagedObjectReference createPropertyCollector(com.vmware.converter.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[10]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "CreatePropertyCollector"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void destroyPropertyCollector(com.vmware.converter.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[11]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "DestroyPropertyCollector"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterDiagnosticManagerTaskLogBundleInfo converterGenerateTaskLogBundle(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ManagedObjectReference task) throws java.rmi.RemoteException, com.vmware.converter.LogBundlingFailed, com.vmware.converter.InvalidState, com.vmware.converter.NotFound, com.vmware.converter.RuntimeFault, com.vmware.converter.NoPermission {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[12]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterGenerateTaskLogBundle"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, task});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterDiagnosticManagerTaskLogBundleInfo) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterDiagnosticManagerTaskLogBundleInfo) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterDiagnosticManagerTaskLogBundleInfo.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.LogBundlingFailed) {
              throw (com.vmware.converter.LogBundlingFailed) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidState) {
              throw (com.vmware.converter.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NotFound) {
              throw (com.vmware.converter.NotFound) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NoPermission) {
              throw (com.vmware.converter.NoPermission) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterDiagnosticManagerTaskLogBundleInfo converterGenerateLogBundle(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec source) throws java.rmi.RemoteException, com.vmware.converter.LogBundlingFailed, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[13]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterGenerateLogBundle"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, source});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterDiagnosticManagerTaskLogBundleInfo) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterDiagnosticManagerTaskLogBundleInfo) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterDiagnosticManagerTaskLogBundleInfo.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.LogBundlingFailed) {
              throw (com.vmware.converter.LogBundlingFailed) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public java.lang.String converterRetrieveTaskLogBundle(com.vmware.converter.ManagedObjectReference _this, java.lang.String key, long offset, long maxPageSize) throws java.rmi.RemoteException, com.vmware.converter.NotFound, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[14]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterRetrieveTaskLogBundle"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, key, new java.lang.Long(offset), new java.lang.Long(maxPageSize)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (java.lang.String) _resp;
            } catch (java.lang.Exception _exception) {
                return (java.lang.String) org.apache.axis.utils.JavaUtils.convert(_resp, java.lang.String.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NotFound) {
              throw (com.vmware.converter.NotFound) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public java.lang.String converterRetrieveTaskLogBundleUrl(com.vmware.converter.ManagedObjectReference _this, java.lang.String key) throws java.rmi.RemoteException, com.vmware.converter.InvalidState, com.vmware.converter.NotFound, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[15]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterRetrieveTaskLogBundleUrl"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, key});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (java.lang.String) _resp;
            } catch (java.lang.Exception _exception) {
                return (java.lang.String) org.apache.axis.utils.JavaUtils.convert(_resp, java.lang.String.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidState) {
              throw (com.vmware.converter.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NotFound) {
              throw (com.vmware.converter.NotFound) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterDeleteTaskLogBundle(com.vmware.converter.ManagedObjectReference _this, java.lang.String key) throws java.rmi.RemoteException, com.vmware.converter.NotFound, com.vmware.converter.RuntimeFault, com.vmware.converter.CannotDeleteFile {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[16]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterDeleteTaskLogBundle"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, key});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NotFound) {
              throw (com.vmware.converter.NotFound) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.CannotDeleteFile) {
              throw (com.vmware.converter.CannotDeleteFile) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterSetCollectorPageSize(com.vmware.converter.ManagedObjectReference _this, int maxCount) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[17]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterSetCollectorPageSize"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(maxCount)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterRewindCollector(com.vmware.converter.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[18]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterRewindCollector"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterResetCollector(com.vmware.converter.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[19]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterResetCollector"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterDestroyCollector(com.vmware.converter.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[20]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterDestroyCollector"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterQueryManagerAgentAvailabilityResult converterValidateAgentAvailability(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec source) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.VimFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[21]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterValidateAgentAvailability"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, source});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterQueryManagerAgentAvailabilityResult) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterQueryManagerAgentAvailabilityResult) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterQueryManagerAgentAvailabilityResult.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.VimFault) {
              throw (com.vmware.converter.VimFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterComputerInfo converterQuery(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec source) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.VimFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[22]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterQuery"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, source});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterComputerInfo) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterComputerInfo) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterComputerInfo.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.VimFault) {
              throw (com.vmware.converter.VimFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterHyperVInventoryInfo converterQueryHyperVInventory(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec source) throws java.rmi.RemoteException, com.vmware.converter.HostConnectFault, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidLogin {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[23]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterQueryHyperVInventory"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, source});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterHyperVInventoryInfo) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterHyperVInventoryInfo) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterHyperVInventoryInfo.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.HostConnectFault) {
              throw (com.vmware.converter.HostConnectFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLogin) {
              throw (com.vmware.converter.InvalidLogin) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterValidateParams(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec source, com.vmware.converter.ConverterConversionParams conversionParams) throws java.rmi.RemoteException, com.vmware.converter.ConverterPropertyInfoFault, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidLogin {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[24]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterValidateParams"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, source, conversionParams});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.ConverterPropertyInfoFault) {
              throw (com.vmware.converter.ConverterPropertyInfoFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLogin) {
              throw (com.vmware.converter.InvalidLogin) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterValidationResult converterValidateTargetStorageParams(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec source, com.vmware.converter.ConverterComputerHardwareInfo sourceHardwareInfo, com.vmware.converter.ConverterConversionParams conversionParams) throws java.rmi.RemoteException, com.vmware.converter.ConverterPropertyInfoFault, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[25]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterValidateTargetStorageParams"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, source, sourceHardwareInfo, conversionParams});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterValidationResult) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterValidationResult) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterValidationResult.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.ConverterPropertyInfoFault) {
              throw (com.vmware.converter.ConverterPropertyInfoFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterValidateTarget(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec source, com.vmware.converter.ConverterTargetVmSpec target) throws java.rmi.RemoteException, com.vmware.converter.ConverterConverterFault, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidLogin {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[26]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterValidateTarget"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, source, target});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.ConverterConverterFault) {
              throw (com.vmware.converter.ConverterConverterFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLogin) {
              throw (com.vmware.converter.InvalidLogin) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterDefaultConversionParamsResult converterValidateTargetAndGetDefaults(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec source, com.vmware.converter.ConverterTargetVmSpec target) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidLogin {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[27]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterValidateTargetAndGetDefaults"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, source, target});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterDefaultConversionParamsResult) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterDefaultConversionParamsResult) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterDefaultConversionParamsResult.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLogin) {
              throw (com.vmware.converter.InvalidLogin) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterDefaultVMReconfigurationParamsResult converterGetVMReconfigurationDefaults(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec source) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidLogin {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[28]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterGetVMReconfigurationDefaults"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, source});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterDefaultVMReconfigurationParamsResult) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterDefaultVMReconfigurationParamsResult) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterDefaultVMReconfigurationParamsResult.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLogin) {
              throw (com.vmware.converter.InvalidLogin) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterSupportedSources converterGetSupportedConversionSources(com.vmware.converter.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidLogin {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[29]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterGetSupportedConversionSources"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterSupportedSources) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterSupportedSources) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterSupportedSources.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLogin) {
              throw (com.vmware.converter.InvalidLogin) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterSupportedSources converterGetSupportedReconfigurationSources(com.vmware.converter.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidLogin {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[30]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterGetSupportedReconfigurationSources"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterSupportedSources) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterSupportedSources) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterSupportedSources.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLogin) {
              throw (com.vmware.converter.InvalidLogin) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterSupportedTargets converterGetSupportedTargets(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec source) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidLogin {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[31]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterGetSupportedTargets"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, source});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterSupportedTargets) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterSupportedTargets) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterSupportedTargets.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLogin) {
              throw (com.vmware.converter.InvalidLogin) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterConfigOptionsInfo[] converterGetSupportedConfigOptionsForManaged(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterTargetVmSpecManagedVmLocation[] targets) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidLogin {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[32]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterGetSupportedConfigOptionsForManaged"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, targets});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterConfigOptionsInfo[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterConfigOptionsInfo[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterConfigOptionsInfo[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLogin) {
              throw (com.vmware.converter.InvalidLogin) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterSnapshotInfo[] converterQueryBootableSnapshots(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec target) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[33]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterQueryBootableSnapshots"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, target});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterSnapshotInfo[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterSnapshotInfo[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterSnapshotInfo[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterServiceContent converterRetrieveServiceContent(com.vmware.converter.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[34]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterRetrieveServiceContent"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterServiceContent) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterServiceContent) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterServiceContent.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterUserSession converterLogin(com.vmware.converter.ManagedObjectReference _this, java.lang.String userName, java.lang.String password, java.lang.String locale) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidLocale, com.vmware.converter.InvalidLogin {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[35]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterLogin"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, userName, password, locale});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterUserSession) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterUserSession) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterUserSession.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLocale) {
              throw (com.vmware.converter.InvalidLocale) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLogin) {
              throw (com.vmware.converter.InvalidLogin) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterUserSession converterLoginExtension(com.vmware.converter.ManagedObjectReference _this, java.lang.String userName, java.lang.String password, java.lang.String locale) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidLocale, com.vmware.converter.InvalidLogin {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[36]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterLoginExtension"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, userName, password, locale});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterUserSession) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterUserSession) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterUserSession.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLocale) {
              throw (com.vmware.converter.InvalidLocale) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLogin) {
              throw (com.vmware.converter.InvalidLogin) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterUserSession converterLoginSession(com.vmware.converter.ManagedObjectReference _this, java.lang.String userName, java.lang.String sessionId, java.lang.String locale) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidLocale, com.vmware.converter.InvalidLogin {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[37]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterLoginSession"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, userName, sessionId, locale});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterUserSession) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterUserSession) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterUserSession.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLocale) {
              throw (com.vmware.converter.InvalidLocale) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLogin) {
              throw (com.vmware.converter.InvalidLogin) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterUserSession converterImpersonate(com.vmware.converter.ManagedObjectReference _this, java.lang.String locale) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidLocale {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[38]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterImpersonate"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, locale});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterUserSession) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterUserSession) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterUserSession.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLocale) {
              throw (com.vmware.converter.InvalidLocale) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterLogout(com.vmware.converter.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[39]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterLogout"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterTerminateSession(com.vmware.converter.ManagedObjectReference _this, java.lang.String[] sessionId) throws java.rmi.RemoteException, com.vmware.converter.NotFound, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[40]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterTerminateSession"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, sessionId});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NotFound) {
              throw (com.vmware.converter.NotFound) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterSetLocale(com.vmware.converter.ManagedObjectReference _this, java.lang.String locale) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidLocale {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[41]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterSetLocale"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, locale});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLocale) {
              throw (com.vmware.converter.InvalidLocale) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterUserSession converterAgentImpersonateUser(com.vmware.converter.ManagedObjectReference _this, java.lang.String userName, long token, java.lang.String locale) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidLocale, com.vmware.converter.InvalidLogin {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[42]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterAgentImpersonateUser"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, userName, new java.lang.Long(token), locale});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterUserSession) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterUserSession) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterUserSession.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLocale) {
              throw (com.vmware.converter.InvalidLocale) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLogin) {
              throw (com.vmware.converter.InvalidLogin) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterUserSession converterAgentLoginWithCertificate(com.vmware.converter.ManagedObjectReference _this, java.lang.String locale) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidLocale, com.vmware.converter.InvalidLogin {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[43]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterAgentLoginWithCertificate"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, locale});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterUserSession) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterUserSession) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterUserSession.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLocale) {
              throw (com.vmware.converter.InvalidLocale) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLogin) {
              throw (com.vmware.converter.InvalidLogin) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterAgentRegister(com.vmware.converter.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.converter.NoClientCertificate, com.vmware.converter.RuntimeFault, com.vmware.converter.NoPermission {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[44]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterAgentRegister"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NoClientCertificate) {
              throw (com.vmware.converter.NoClientCertificate) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NoPermission) {
              throw (com.vmware.converter.NoPermission) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterAgentUnregister(com.vmware.converter.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.converter.NoClientCertificate, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[45]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterAgentUnregister"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NoClientCertificate) {
              throw (com.vmware.converter.NoClientCertificate) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterComputerInfo converterAgentQuery(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec source) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[46]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterAgentQuery"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, source});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterComputerInfo) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterComputerInfo) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterComputerInfo.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ManagedObjectReference converterAgentClone_Task(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec target, com.vmware.converter.ConverterParamsAgentCloningParams params, com.vmware.converter.ConverterConversionRuntimeEnvironmentInfo envInfo) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[47]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterAgentClone_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, target, params, envInfo});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterAgentDeleteBitmap(com.vmware.converter.ManagedObjectReference _this, java.lang.String[] prevBitmapIds) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[48]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterAgentDeleteBitmap"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, prevBitmapIds});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ManagedObjectReference converterAgentReconfig_Task(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec target, com.vmware.converter.ConverterReconfigParams reconfigParams, com.vmware.converter.ConverterParamsAgentCloningParams cloningParams, com.vmware.converter.ConverterConversionRuntimeEnvironmentInfo envInfo) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[49]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterAgentReconfig_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, target, reconfigParams, cloningParams, envInfo});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ManagedObjectReference converterAgentCustomize_Task(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec target, com.vmware.converter.ConverterParamsAgentCustomizationParams customizationParams, com.vmware.converter.ConverterParamsAgentCloningParams cloningParams, com.vmware.converter.ConverterConversionRuntimeEnvironmentInfo envInfo) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[50]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterAgentCustomize_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, target, customizationParams, cloningParams, envInfo});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterAgentValidateTarget(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec source, com.vmware.converter.ConverterTargetVmSpec target) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[51]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterAgentValidateTarget"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, source, target});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ManagedObjectReference converterAgentConvert_Task(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec source, com.vmware.converter.ConverterConversionParams params, com.vmware.converter.ConverterConversionRuntimeEnvironmentInfo envInfo) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[52]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterAgentConvert_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, source, params, envInfo});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public java.lang.Integer converterAgentEstimateTimeToComplete(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec source, com.vmware.converter.ConverterConversionParams params, com.vmware.converter.ConverterConversionRuntimeEnvironmentInfo envInfo) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[53]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterAgentEstimateTimeToComplete"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, source, params, envInfo});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (java.lang.Integer) _resp;
            } catch (java.lang.Exception _exception) {
                return (java.lang.Integer) org.apache.axis.utils.JavaUtils.convert(_resp, java.lang.Integer.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterAgentPassDiskTickets(com.vmware.converter.ManagedObjectReference _this, java.lang.String requestId, com.vmware.converter.ConverterDiskTicketDispatcherDiskTicketInfo[] ticketInfos) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[54]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterAgentPassDiskTickets"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, requestId, ticketInfos});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterAgentSysimgbaseSetResponse(com.vmware.converter.ManagedObjectReference _this, java.lang.String key, byte[] response) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[55]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterAgentSysimgbaseSetResponse"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, key, response});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ManagedObjectReference converterHelperConvert_Task(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec source, com.vmware.converter.ConverterAgentHelperConverterHelperParams params) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[56]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterHelperConvert_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, source, params});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterHelperServiceContent converterHelperRetrieveServiceContent(com.vmware.converter.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[57]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterHelperRetrieveServiceContent"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterHelperServiceContent) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterHelperServiceContent) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterHelperServiceContent.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterHelperLogin(com.vmware.converter.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[58]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterHelperLogin"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterHelperLogout(com.vmware.converter.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[59]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterHelperLogout"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void agentInternalDispose(com.vmware.converter.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[60]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "AgentInternalDispose"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void agentInternalMakeSticky(com.vmware.converter.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[61]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "AgentInternalMakeSticky"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterEvent[] converterReadNextEvents(com.vmware.converter.ManagedObjectReference _this, int maxCount) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[62]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterReadNextEvents"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(maxCount)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterEvent[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterEvent[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterEvent[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterEvent[] converterReadPreviousEvents(com.vmware.converter.ManagedObjectReference _this, int maxCount) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[63]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterReadPreviousEvents"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(maxCount)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterEvent[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterEvent[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterEvent[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ManagedObjectReference converterCreateCollectorForEvents(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterEventFilterSpec filter) throws java.rmi.RemoteException, com.vmware.converter.InvalidState, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[64]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterCreateCollectorForEvents"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, filter});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidState) {
              throw (com.vmware.converter.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterEvent[] converterQueryEvents(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterEventFilterSpec filter) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[65]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterQueryEvents"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, filter});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterEvent[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterEvent[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterEvent[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterAgentManagerAgentDeploymentResult converterInstallAgent(com.vmware.converter.ManagedObjectReference _this, java.lang.String hostname, java.lang.Integer port, java.lang.String username, java.lang.String password, java.lang.Boolean postponeReboot) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidLogin {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[66]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterInstallAgent"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, hostname, port, username, password, postponeReboot});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterAgentManagerAgentDeploymentResult) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterAgentManagerAgentDeploymentResult) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterAgentManagerAgentDeploymentResult.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLogin) {
              throw (com.vmware.converter.InvalidLogin) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterAgentManagerDeploymentStatus converterUninstallAgent(com.vmware.converter.ManagedObjectReference _this, java.lang.String hostname, java.lang.String username, java.lang.String password, java.lang.Boolean postponeReboot) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidLogin {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[67]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterUninstallAgent"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, hostname, username, password, postponeReboot});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterAgentManagerDeploymentStatus) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterAgentManagerDeploymentStatus) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterAgentManagerDeploymentStatus.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLogin) {
              throw (com.vmware.converter.InvalidLogin) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterRebootMachine(com.vmware.converter.ManagedObjectReference _this, java.lang.String hostname, java.lang.String username, java.lang.String password) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidLogin {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[68]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterRebootMachine"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, hostname, username, password});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLogin) {
              throw (com.vmware.converter.InvalidLogin) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public boolean converterCheckLicenseFeature(com.vmware.converter.ManagedObjectReference _this, java.lang.String featureKey) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[69]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterCheckLicenseFeature"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, featureKey});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return ((java.lang.Boolean) _resp).booleanValue();
            } catch (java.lang.Exception _exception) {
                return ((java.lang.Boolean) org.apache.axis.utils.JavaUtils.convert(_resp, boolean.class)).booleanValue();
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterConfigureLicenseSource(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterLicenseSource licenseSource) throws java.rmi.RemoteException, com.vmware.converter.InvalidLicense, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[70]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterConfigureLicenseSource"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, licenseSource});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLicense) {
              throw (com.vmware.converter.InvalidLicense) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public java.lang.String converterServerManagedEntityRename(com.vmware.converter.ManagedObjectReference _this, java.lang.String newName) throws java.rmi.RemoteException, com.vmware.converter.DuplicateName, com.vmware.converter.InvalidName, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[71]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterServerManagedEntityRename"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, newName});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (java.lang.String) _resp;
            } catch (java.lang.Exception _exception) {
                return (java.lang.String) org.apache.axis.utils.JavaUtils.convert(_resp, java.lang.String.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.DuplicateName) {
              throw (com.vmware.converter.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidName) {
              throw (com.vmware.converter.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterDiagnosticManagerTaskLogBundleInfo converterGenerateJobLogBundle(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ManagedObjectReference job) throws java.rmi.RemoteException, com.vmware.converter.LogBundlingFailed, com.vmware.converter.InvalidState, com.vmware.converter.NotFound, com.vmware.converter.RuntimeFault, com.vmware.converter.NoPermission {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[72]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterGenerateJobLogBundle"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, job});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterDiagnosticManagerTaskLogBundleInfo) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterDiagnosticManagerTaskLogBundleInfo) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterDiagnosticManagerTaskLogBundleInfo.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.LogBundlingFailed) {
              throw (com.vmware.converter.LogBundlingFailed) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidState) {
              throw (com.vmware.converter.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NotFound) {
              throw (com.vmware.converter.NotFound) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NoPermission) {
              throw (com.vmware.converter.NoPermission) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterConversionParams converterServerConversionJobUpdateConversionParams(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterServerConversionConversionParamsUpdateSpec newParams) throws java.rmi.RemoteException, com.vmware.converter.InvalidState, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[73]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionJobUpdateConversionParams"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, newParams});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterConversionParams) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterConversionParams) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterConversionParams.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidState) {
              throw (com.vmware.converter.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterServerConversionConversionJobInfo[] converterReadNextConversionJobs(com.vmware.converter.ManagedObjectReference _this, int maxCount) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[74]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterReadNextConversionJobs"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(maxCount)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterServerConversionConversionJobInfo[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterServerConversionConversionJobInfo[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterServerConversionConversionJobInfo[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterServerConversionConversionJobInfo[] converterReadPreviousConversionJobs(com.vmware.converter.ManagedObjectReference _this, int maxCount) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[75]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterReadPreviousConversionJobs"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(maxCount)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterServerConversionConversionJobInfo[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterServerConversionConversionJobInfo[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterServerConversionConversionJobInfo[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterServerConversionConversionJobInfo converterServerConversionManagerCreateJob(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterServerConversionConversionJobSpec spec, java.lang.Object extraInfo) throws java.rmi.RemoteException, com.vmware.converter.DuplicateName, com.vmware.converter.InvalidName, com.vmware.converter.InvalidState, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidLogin {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[76]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionManagerCreateJob"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, spec, extraInfo});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterServerConversionConversionJobInfo) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterServerConversionConversionJobInfo) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterServerConversionConversionJobInfo.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.DuplicateName) {
              throw (com.vmware.converter.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidName) {
              throw (com.vmware.converter.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidState) {
              throw (com.vmware.converter.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLogin) {
              throw (com.vmware.converter.InvalidLogin) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterServerConversionManagerDestroyJob(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ManagedObjectReference job, java.lang.String activeTaskHandling) throws java.rmi.RemoteException, com.vmware.converter.InvalidState, com.vmware.converter.NotFound, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[77]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionManagerDestroyJob"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, job, activeTaskHandling});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidState) {
              throw (com.vmware.converter.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NotFound) {
              throw (com.vmware.converter.NotFound) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterServerConversionConversionJobInfo converterServerConversionManagerGetJobInfo(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ManagedObjectReference conversionJob) throws java.rmi.RemoteException, com.vmware.converter.NotFound, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[78]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionManagerGetJobInfo"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, conversionJob});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterServerConversionConversionJobInfo) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterServerConversionConversionJobInfo) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterServerConversionConversionJobInfo.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NotFound) {
              throw (com.vmware.converter.NotFound) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterServerConversionConversionJobSpec converterServerConversionManagerGetJobSpec(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ManagedObjectReference conversionJob) throws java.rmi.RemoteException, com.vmware.converter.NotFound, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[79]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionManagerGetJobSpec"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, conversionJob});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterServerConversionConversionJobSpec) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterServerConversionConversionJobSpec) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterServerConversionConversionJobSpec.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NotFound) {
              throw (com.vmware.converter.NotFound) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public java.lang.Object converterServerConversionManagerGetJobExtraInfo(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ManagedObjectReference conversionJob) throws java.rmi.RemoteException, com.vmware.converter.NotFound, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[80]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionManagerGetJobExtraInfo"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, conversionJob});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (java.lang.Object) _resp;
            } catch (java.lang.Exception _exception) {
                return (java.lang.Object) org.apache.axis.utils.JavaUtils.convert(_resp, java.lang.Object.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NotFound) {
              throw (com.vmware.converter.NotFound) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterServerConversionConversionJobInfo converterServerConversionManagerGetJobInfoFromScheduledTask(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ManagedObjectReference task) throws java.rmi.RemoteException, com.vmware.converter.NotFound, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[81]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionManagerGetJobInfoFromScheduledTask"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, task});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterServerConversionConversionJobInfo) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterServerConversionConversionJobInfo) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterServerConversionConversionJobInfo.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NotFound) {
              throw (com.vmware.converter.NotFound) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterServerConversionConversionJobSpec converterServerConversionManagerGetJobSpecFromScheduledTask(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ManagedObjectReference task) throws java.rmi.RemoteException, com.vmware.converter.NotFound, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[82]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionManagerGetJobSpecFromScheduledTask"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, task});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterServerConversionConversionJobSpec) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterServerConversionConversionJobSpec) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterServerConversionConversionJobSpec.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NotFound) {
              throw (com.vmware.converter.NotFound) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public java.lang.Object converterServerConversionManagerGetJobExtraInfoFromScheduledTask(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ManagedObjectReference task) throws java.rmi.RemoteException, com.vmware.converter.NotFound, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[83]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterServerConversionManagerGetJobExtraInfoFromScheduledTask"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, task});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (java.lang.Object) _resp;
            } catch (java.lang.Exception _exception) {
                return (java.lang.Object) org.apache.axis.utils.JavaUtils.convert(_resp, java.lang.Object.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NotFound) {
              throw (com.vmware.converter.NotFound) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ManagedObjectReference converterCreateCollectorForJobs(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterServerJobJobFilterSpec filter) throws java.rmi.RemoteException, com.vmware.converter.InvalidState, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[84]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterCreateCollectorForJobs"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, filter});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidState) {
              throw (com.vmware.converter.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterServerJobResume(com.vmware.converter.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.converter.InvalidState, com.vmware.converter.RuntimeFault, com.vmware.converter.NoPermission {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[85]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterServerJobResume"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidState) {
              throw (com.vmware.converter.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NoPermission) {
              throw (com.vmware.converter.NoPermission) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterServerJobSuspend(com.vmware.converter.ManagedObjectReference _this, java.lang.String activeTaskHandling) throws java.rmi.RemoteException, com.vmware.converter.ConverterJobHasActiveTaskFault, com.vmware.converter.InvalidState, com.vmware.converter.RuntimeFault, com.vmware.converter.NoPermission {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[86]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterServerJobSuspend"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, activeTaskHandling});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.ConverterJobHasActiveTaskFault) {
              throw (com.vmware.converter.ConverterJobHasActiveTaskFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidState) {
              throw (com.vmware.converter.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NoPermission) {
              throw (com.vmware.converter.NoPermission) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterServerJobStop(com.vmware.converter.ManagedObjectReference _this, java.lang.String activeTaskHandling) throws java.rmi.RemoteException, com.vmware.converter.ConverterJobDeactivationFault, com.vmware.converter.InvalidArgument, com.vmware.converter.ConverterJobHasActiveTaskFault, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[87]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterServerJobStop"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, activeTaskHandling});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.ConverterJobDeactivationFault) {
              throw (com.vmware.converter.ConverterJobDeactivationFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidArgument) {
              throw (com.vmware.converter.InvalidArgument) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.ConverterJobHasActiveTaskFault) {
              throw (com.vmware.converter.ConverterJobHasActiveTaskFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterServerJobJobSpec converterServerJobUpdateSpec(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterServerJobJobJobUpdateSpec updateParams) throws java.rmi.RemoteException, com.vmware.converter.DuplicateName, com.vmware.converter.InvalidName, com.vmware.converter.ConverterFirstRunAlreadyStartedFault, com.vmware.converter.RuntimeFault, com.vmware.converter.NoPermission {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[88]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterServerJobUpdateSpec"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, updateParams});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterServerJobJobSpec) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterServerJobJobSpec) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterServerJobJobSpec.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.DuplicateName) {
              throw (com.vmware.converter.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidName) {
              throw (com.vmware.converter.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.ConverterFirstRunAlreadyStartedFault) {
              throw (com.vmware.converter.ConverterFirstRunAlreadyStartedFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NoPermission) {
              throw (com.vmware.converter.NoPermission) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public java.lang.Object converterServerJobUpdateExtaInfo(com.vmware.converter.ManagedObjectReference _this, java.lang.Object replacementInfo) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.NoPermission {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[89]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterServerJobUpdateExtaInfo"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, replacementInfo});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (java.lang.Object) _resp;
            } catch (java.lang.Exception _exception) {
                return (java.lang.Object) org.apache.axis.utils.JavaUtils.convert(_resp, java.lang.Object.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NoPermission) {
              throw (com.vmware.converter.NoPermission) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ScheduledTaskInfo converterCreateScheduledTask(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ManagedObjectReference obj, com.vmware.converter.ConverterScheduledTaskSpec spec) throws java.rmi.RemoteException, com.vmware.converter.DuplicateName, com.vmware.converter.InvalidName, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[90]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterCreateScheduledTask"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, obj, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ScheduledTaskInfo) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ScheduledTaskInfo) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ScheduledTaskInfo.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.DuplicateName) {
              throw (com.vmware.converter.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidName) {
              throw (com.vmware.converter.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterScheduledTaskInfo converterGetScheduledTask(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ManagedObjectReference task) throws java.rmi.RemoteException, com.vmware.converter.NotFound, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[91]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterGetScheduledTask"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, task});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterScheduledTaskInfo) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterScheduledTaskInfo) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterScheduledTaskInfo.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NotFound) {
              throw (com.vmware.converter.NotFound) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterReconfigureScheduledTask(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ManagedObjectReference task, com.vmware.converter.ScheduledTaskSpec spec) throws java.rmi.RemoteException, com.vmware.converter.DuplicateName, com.vmware.converter.InvalidName, com.vmware.converter.InvalidState, com.vmware.converter.NotFound, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[92]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterReconfigureScheduledTask"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, task, spec});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.DuplicateName) {
              throw (com.vmware.converter.DuplicateName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidName) {
              throw (com.vmware.converter.InvalidName) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidState) {
              throw (com.vmware.converter.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NotFound) {
              throw (com.vmware.converter.NotFound) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterCancelTask(com.vmware.converter.ManagedObjectReference _this) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[93]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterCancelTask"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterTaskInfo[] converterReadNextTasks(com.vmware.converter.ManagedObjectReference _this, int maxCount) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[94]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterReadNextTasks"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(maxCount)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterTaskInfo[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterTaskInfo[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterTaskInfo[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterTaskInfo[] converterReadPreviousTasks(com.vmware.converter.ManagedObjectReference _this, int maxCount) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[95]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterReadPreviousTasks"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(maxCount)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterTaskInfo[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterTaskInfo[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterTaskInfo[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterSetMaxTask(com.vmware.converter.ManagedObjectReference _this, int maxTask) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[96]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterSetMaxTask"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(maxTask)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterSetMaxConnection(com.vmware.converter.ManagedObjectReference _this, int maxConnection) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[97]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterSetMaxConnection"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, new java.lang.Integer(maxConnection)});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ManagedObjectReference converterCreateCollectorForTasks(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterTaskFilterSpec filter) throws java.rmi.RemoteException, com.vmware.converter.InvalidState, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[98]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterCreateCollectorForTasks"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, filter});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidState) {
              throw (com.vmware.converter.InvalidState) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterTaskInfo converterGetTaskInfo(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ManagedObjectReference task) throws java.rmi.RemoteException, com.vmware.converter.NotFound, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[99]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterGetTaskInfo"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, task});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterTaskInfo) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterTaskInfo) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterTaskInfo.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NotFound) {
              throw (com.vmware.converter.NotFound) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterTaskSpec converterGetTaskSpec(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ManagedObjectReference task) throws java.rmi.RemoteException, com.vmware.converter.NotFound, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[100]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterGetTaskSpec"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, task});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterTaskSpec) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterTaskSpec) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterTaskSpec.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NotFound) {
              throw (com.vmware.converter.NotFound) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public java.lang.Integer converterEstimateTimeToComplete(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterTaskSpec taskSpec, com.vmware.converter.ConverterRuntimeEnvironmentInfo envInfo) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault, com.vmware.converter.InvalidLogin {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[101]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterEstimateTimeToComplete"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, taskSpec, envInfo});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (java.lang.Integer) _resp;
            } catch (java.lang.Exception _exception) {
                return (java.lang.Integer) org.apache.axis.utils.JavaUtils.convert(_resp, java.lang.Integer.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.InvalidLogin) {
              throw (com.vmware.converter.InvalidLogin) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterTaskInfo[] converterGetChildTask(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ManagedObjectReference task) throws java.rmi.RemoteException, com.vmware.converter.NotFound, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[102]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterGetChildTask"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, task});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterTaskInfo[]) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterTaskInfo[]) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterTaskInfo[].class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.NotFound) {
              throw (com.vmware.converter.NotFound) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ConverterConverterWorkerVmCreationResult converterTargetVMManagerCreateVM(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec source, com.vmware.converter.ConverterConversionParams params) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[103]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterTargetVMManagerCreateVM"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, source, params});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ConverterConverterWorkerVmCreationResult) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ConverterConverterWorkerVmCreationResult) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ConverterConverterWorkerVmCreationResult.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public com.vmware.converter.ManagedObjectReference converterWorkerConvert_Task(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec source, com.vmware.converter.ConverterComputerSpec target, com.vmware.converter.ConverterConversionParams params, com.vmware.converter.ConverterServerConversionP2VSourceModificationSpec sourceModificationSpec, com.vmware.converter.ConverterParamsStorageMapping storageMapping, com.vmware.converter.ConverterConversionRuntimeEnvironmentInfo envInfo) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[104]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterWorkerConvert_Task"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, source, target, params, sourceModificationSpec, storageMapping, envInfo});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (com.vmware.converter.ManagedObjectReference) _resp;
            } catch (java.lang.Exception _exception) {
                return (com.vmware.converter.ManagedObjectReference) org.apache.axis.utils.JavaUtils.convert(_resp, com.vmware.converter.ManagedObjectReference.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public void converterWorkerDeleteBitmap(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec source, java.lang.String[] prevBitmapIds) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[105]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterWorkerDeleteBitmap"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, source, prevBitmapIds});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        extractAttachments(_call);
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

    public java.lang.Integer converterWorkerEstimateTimeToComplete(com.vmware.converter.ManagedObjectReference _this, com.vmware.converter.ConverterComputerSpec source, com.vmware.converter.ConverterComputerSpec target, com.vmware.converter.ConverterConversionParams params, com.vmware.converter.ConverterConversionRuntimeEnvironmentInfo envInfo) throws java.rmi.RemoteException, com.vmware.converter.RuntimeFault {
        if (super.cachedEndpoint == null) {
            throw new org.apache.axis.NoEndPointException();
        }
        org.apache.axis.client.Call _call = createCall();
        _call.setOperation(_operations[106]);
        _call.setUseSOAPAction(true);
        _call.setSOAPActionURI("urn:converter/6.0");
        _call.setEncodingStyle(null);
        _call.setProperty(org.apache.axis.client.Call.SEND_TYPE_ATTR, Boolean.FALSE);
        _call.setProperty(org.apache.axis.AxisEngine.PROP_DOMULTIREFS, Boolean.FALSE);
        _call.setSOAPVersion(org.apache.axis.soap.SOAPConstants.SOAP11_CONSTANTS);
        _call.setOperationName(new javax.xml.namespace.QName("urn:converter", "ConverterWorkerEstimateTimeToComplete"));

        setRequestHeaders(_call);
        setAttachments(_call);
 try {        java.lang.Object _resp = _call.invoke(new java.lang.Object[] {_this, source, target, params, envInfo});

        if (_resp instanceof java.rmi.RemoteException) {
            throw (java.rmi.RemoteException)_resp;
        }
        else {
            extractAttachments(_call);
            try {
                return (java.lang.Integer) _resp;
            } catch (java.lang.Exception _exception) {
                return (java.lang.Integer) org.apache.axis.utils.JavaUtils.convert(_resp, java.lang.Integer.class);
            }
        }
  } catch (org.apache.axis.AxisFault axisFaultException) {
    if (axisFaultException.detail != null) {
        if (axisFaultException.detail instanceof java.rmi.RemoteException) {
              throw (java.rmi.RemoteException) axisFaultException.detail;
         }
        if (axisFaultException.detail instanceof com.vmware.converter.RuntimeFault) {
              throw (com.vmware.converter.RuntimeFault) axisFaultException.detail;
         }
   }
  throw axisFaultException;
}
    }

}
